(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    742915,      15137]
NotebookOptionsPosition[    730179,      14730]
NotebookOutlinePosition[    730729,      14751]
CellTagsIndexPosition[    730686,      14748]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Las funciones de los arm\[OAcute]nicos esf\[EAcute]ricos vectoriales figuran \
a continuaci\[OAcute]n\
\>", "Section",
 CellChangeTimes->{{3.913135020527195*^9, 3.9131350427455015`*^9}, {
  3.913135406016739*^9, 3.913135413392043*^9}, {3.9229407775488043`*^9, 
  3.922940793099965*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Off", "[", 
   StyleBox[
    RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
   StyleBox["]", "MessageName"]}], 
  StyleBox[";", "MessageName"], 
  RowBox[{"Off", "[", 
   StyleBox[
    RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
   StyleBox["]", "MessageName"]}], 
  StyleBox[";", "MessageName"], 
  RowBox[{"Off", "[", 
   StyleBox[
    RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], "]"}], ";", 
  RowBox[{"Off", "[", 
   StyleBox[
    RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], "]"}], ";", 
  RowBox[{"Off", "[", 
   StyleBox[
    RowBox[{"NIntegrate", "::", "ncvi"}], "MessageName"], 
   StyleBox["]", "MessageName"]}]}]], "Input",
 CellChangeTimes->{{3.9228726373713264`*^9, 3.9228727064062347`*^9}, {
  3.9230175293831625`*^9, 3.923017532368039*^9}}],

Cell[CellGroupData[{

Cell["Definiciones", "Subsection",
 CellChangeTimes->{{3.913699166483286*^9, 3.9136991685607967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LegendrePDer0", "[", 
   RowBox[{"n_", ",", "m_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "+", "n"}], ")"}]}], " ", 
    RowBox[{"Cot", "[", "theta", "]"}], " ", 
    RowBox[{"LegendreP", "[", 
     RowBox[{"n", ",", "m", ",", 
      RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "m", "+", "n"}], ")"}], " ", 
    RowBox[{"Csc", "[", "theta", "]"}], " ", 
    RowBox[{"LegendreP", "[", 
     RowBox[{
      RowBox[{"1", "+", "n"}], ",", "m", ",", 
      RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9228770557998657`*^9, 3.922877073688859*^9}, 
   3.9228932965711327`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LegendrePDer1", "[", 
   RowBox[{"n_", ",", "m_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"m", "\[Equal]", "0"}], ",", 
     RowBox[{"LegendreP", "[", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Cos", "[", "theta", "]"}]}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"m", ">", "0"}], ",", 
       RowBox[{
        RowBox[{"1", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "m", "+", "1"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"n", "+", "m"}], ")"}], " ", 
           RowBox[{"LegendreP", "[", 
            RowBox[{"n", ",", 
             RowBox[{"m", "-", "1"}], ",", 
             RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], "-", 
          RowBox[{"LegendreP", "[", 
           RowBox[{"n", ",", 
            RowBox[{"m", "+", "1"}], ",", 
            RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "m"}], " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "m"}], ")"}], "!"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "m"}], ")"}], "!"}]}], "  ", 
        RowBox[{"1", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "m", "+", "1"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"n", "-", "m"}], ")"}], " ", 
           RowBox[{"LegendreP", "[", 
            RowBox[{"n", ",", 
             RowBox[{
              RowBox[{"-", "m"}], "-", "1"}], ",", 
             RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], "-", 
          RowBox[{"LegendreP", "[", 
           RowBox[{"n", ",", 
            RowBox[{
             RowBox[{"-", "m"}], "+", "1"}], ",", 
            RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], ")"}]}]}], "]"}]}],
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9228930969892373`*^9, 3.9228931930938225`*^9}, 
   3.9228932826649733`*^9, {3.9228935641674585`*^9, 3.922893578712572*^9}, {
   3.9228936395011377`*^9, 3.9228936716431894`*^9}, {3.9228937141685963`*^9, 
   3.922893718479088*^9}, {3.9228942513566685`*^9, 3.922894272463681*^9}, {
   3.922894349104411*^9, 3.922894351364622*^9}, 3.9229435571207204`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LegendrePDer", "[", 
   RowBox[{"n_", ",", "m_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "/", "2"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "m"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"n", "-", "m", "+", "1"}], ")"}], " ", 
      RowBox[{"LegendreP", "[", 
       RowBox[{"n", ",", 
        RowBox[{"m", "-", "1"}], ",", 
        RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], "-", 
     RowBox[{"LegendreP", "[", 
      RowBox[{"n", ",", 
       RowBox[{"m", "+", "1"}], ",", 
       RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.922943570436269*^9, {3.922943875128118*^9, 3.9229439722040257`*^9}, {
   3.924705905565707*^9, 3.9247059253952637`*^9}}],

Cell[CellGroupData[{

Cell["Comprobaci\[OAcute]n", "Subsubsection",
 CellChangeTimes->{{3.922941040359507*^9, 3.9229410442936406`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"theta", "=", 
        RowBox[{"10.", " ", "Degree"}]}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "m", ",", 
          RowBox[{"LegendrePDer0", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
          RowBox[{"LegendrePDer1", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
          RowBox[{"LegendrePDer", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}], ",", "1"}],
    "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.922940851722311*^9, 3.922940955578187*^9}, {
  3.922941017050661*^9, 3.922941021050113*^9}, {3.922943983459894*^9, 
  3.9229439855013885`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "1"}], "0.49240387650610473`", "0.49240387650610395`", 
      "0.49240387650610395`"},
     {"1", "0", 
      RowBox[{"-", "0.17364817766693008`"}], "0.1736481776669306`", 
      RowBox[{"-", "0.1736481776669306`"}]},
     {"1", "1", 
      RowBox[{"-", "0.9848077530122099`"}], 
      RowBox[{"-", "0.9848077530122079`"}], 
      RowBox[{"-", "0.9848077530122079`"}]},
     {"2", 
      RowBox[{"-", "2"}], "0.04275251791570875`", "0.04275251791570865`", 
      "0.04275251791570866`"},
     {"2", 
      RowBox[{"-", "1"}], "0.4698463103929549`", "0.46984631039295405`", 
      "0.469846310392954`"},
     {"2", "0", 
      RowBox[{"-", "0.5130302149885058`"}], "0.5130302149885039`", 
      RowBox[{"-", "0.5130302149885039`"}]},
     {"2", "1", 
      RowBox[{"-", "2.819077862357732`"}], 
      RowBox[{"-", "2.8190778623577244`"}], 
      RowBox[{"-", "2.8190778623577244`"}]},
     {"2", "2", "1.0260604299770095`", "1.0260604299770077`", 
      "1.0260604299770077`"},
     {"3", 
      RowBox[{"-", "3"}], "0.0018559742066839046`", "0.0018559742066839024`", 
      "0.0018559742066839027`"},
     {"3", 
      RowBox[{"-", "2"}], "0.041448494447908546`", "0.041448494447908484`", 
      "0.041448494447908484`"},
     {"3", 
      RowBox[{"-", "1"}], "0.4367246503055886`", "0.4367246503055868`", 
      "0.4367246503055868`"},
     {"3", "0", 
      RowBox[{"-", "1.0026180666251037`"}], "1.0026180666251003`", 
      RowBox[{"-", "1.0026180666251003`"}]},
     {"3", "1", 
      RowBox[{"-", "5.240695803667055`"}], 
      RowBox[{"-", "5.240695803667042`"}], 
      RowBox[{"-", "5.240695803667042`"}]},
     {"3", "2", "4.973819333749027`", "4.973819333749018`", 
      "4.973819333749018`"},
     {"3", "3", 
      RowBox[{"-", "1.336301428812411`"}], 
      RowBox[{"-", "1.3363014288124098`"}], 
      RowBox[{"-", "1.3363014288124098`"}]},
     {"4", 
      RowBox[{"-", "4"}], "0.00005371442313124789`", 
      "0.00005371442313124781`", "0.000053714423131247814`"},
     {"4", 
      RowBox[{"-", "3"}], "0.001808835184030532`", "0.0018088351840305297`", 
      "0.0018088351840305297`"},
     {"4", 
      RowBox[{"-", "2"}], "0.03974451022035881`", "0.039744510220358784`", 
      "0.03974451022035879`"},
     {"4", 
      RowBox[{"-", "1"}], "0.3938752326636723`", "0.39387523266367175`", 
      "0.39387523266367175`"},
     {"4", "0", 
      RowBox[{"-", "1.619860485767859`"}], "1.6198604857678502`", 
      RowBox[{"-", "1.6198604857678502`"}]},
     {"4", "1", 
      RowBox[{"-", "7.877504653273448`"}], 
      RowBox[{"-", "7.8775046532734345`"}], 
      RowBox[{"-", "7.8775046532734345`"}]},
     {"4", "2", "14.308023679329175`", "14.308023679329162`", 
      "14.308023679329162`"},
     {"4", "3", 
      RowBox[{"-", "9.116529327513879`"}], 
      RowBox[{"-", "9.11652932751387`"}], 
      RowBox[{"-", "9.11652932751387`"}]},
     {"4", "4", "2.1657655406519147`", "2.1657655406519116`", 
      "2.1657655406519116`"},
     {"5", 
      RowBox[{"-", "5"}], "1.1659264613964526`*^-6", "1.165926461396451`*^-6",
       "1.165926461396451`*^-6"},
     {"5", 
      RowBox[{"-", "4"}], "0.00005248721176289895`", 
      "0.00005248721176289884`", "0.00005248721176289885`"},
     {"5", 
      RowBox[{"-", "3"}], "0.0017510408251582258`", "0.0017510408251582223`", 
      "0.0017510408251582216`"},
     {"5", 
      RowBox[{"-", "2"}], "0.037669415200979814`", "0.03766941520097978`", 
      "0.03766941520097978`"},
     {"5", 
      RowBox[{"-", "1"}], "0.3423783125100943`", "0.34237831251009415`", 
      "0.3423783125100941`"},
     {"5", "0", 
      RowBox[{"-", "2.336042538378809`"}], "2.3360425383788`", 
      RowBox[{"-", "2.3360425383788`"}]},
     {"5", "1", 
      RowBox[{"-", "10.271349375302847`"}], 
      RowBox[{"-", "10.271349375302824`"}], 
      RowBox[{"-", "10.271349375302824`"}]},
     {"5", "2", "31.64230876882303`", "31.642308768823014`", 
      "31.642308768823014`"},
     {"5", "3", 
      RowBox[{"-", "35.300983035189844`"}], 
      RowBox[{"-", "35.30098303518976`"}], 
      RowBox[{"-", "35.30098303518976`"}]},
     {"5", "4", "19.04655940452077`", "19.046559404520732`", 
      "19.046559404520732`"},
     {"5", "5", 
      RowBox[{"-", "4.230913943115447`"}], 
      RowBox[{"-", "4.230913943115441`"}], 
      RowBox[{"-", "4.230913943115441`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.922940921850856*^9, 3.9229409567085896`*^9}, {
   3.9229410177325044`*^9, 3.9229410213499193`*^9}, 3.922943986041705*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"theta", "=", 
        RowBox[{"0", " ", "Degree"}]}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "m", ",", 
          RowBox[{"LegendrePDer0", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
          RowBox[{"LegendrePDer1", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
          RowBox[{"LegendrePDer", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}], ",", "1"}],
    "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9229410871451817`*^9, 3.9229410882090483`*^9}, {
  3.9229440060835586`*^9, 3.9229440099201775`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229410892402325`*^9, 3.9229440101892276`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229410892402325`*^9, 3.9229440102191467`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229410892402325`*^9, 3.9229440102470727`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Infinity \
:: indet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229410892402325`*^9, 3.9229440102650394`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "1"}], "Indeterminate", 
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {"1", "0", "Indeterminate", "0", "0"},
     {"1", "1", "Indeterminate", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"2", 
      RowBox[{"-", "2"}], "Indeterminate", "0", "0"},
     {"2", 
      RowBox[{"-", "1"}], "Indeterminate", 
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {"2", "0", "Indeterminate", "0", "0"},
     {"2", "1", "Indeterminate", 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "3"}]},
     {"2", "2", "Indeterminate", "0", "0"},
     {"3", 
      RowBox[{"-", "3"}], "Indeterminate", "0", "0"},
     {"3", 
      RowBox[{"-", "2"}], "Indeterminate", "0", "0"},
     {"3", 
      RowBox[{"-", "1"}], "Indeterminate", 
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {"3", "0", "Indeterminate", "0", "0"},
     {"3", "1", "Indeterminate", 
      RowBox[{"-", "6"}], 
      RowBox[{"-", "6"}]},
     {"3", "2", "Indeterminate", "0", "0"},
     {"3", "3", "Indeterminate", "0", "0"},
     {"4", 
      RowBox[{"-", "4"}], "Indeterminate", "0", "0"},
     {"4", 
      RowBox[{"-", "3"}], "Indeterminate", "0", "0"},
     {"4", 
      RowBox[{"-", "2"}], "Indeterminate", "0", "0"},
     {"4", 
      RowBox[{"-", "1"}], "Indeterminate", 
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {"4", "0", "Indeterminate", "0", "0"},
     {"4", "1", "Indeterminate", 
      RowBox[{"-", "10"}], 
      RowBox[{"-", "10"}]},
     {"4", "2", "Indeterminate", "0", "0"},
     {"4", "3", "Indeterminate", "0", "0"},
     {"4", "4", "Indeterminate", "0", "0"},
     {"5", 
      RowBox[{"-", "5"}], "Indeterminate", "0", "0"},
     {"5", 
      RowBox[{"-", "4"}], "Indeterminate", "0", "0"},
     {"5", 
      RowBox[{"-", "3"}], "Indeterminate", "0", "0"},
     {"5", 
      RowBox[{"-", "2"}], "Indeterminate", "0", "0"},
     {"5", 
      RowBox[{"-", "1"}], "Indeterminate", 
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {"5", "0", "Indeterminate", "0", "0"},
     {"5", "1", "Indeterminate", 
      RowBox[{"-", "15"}], 
      RowBox[{"-", "15"}]},
     {"5", "2", "Indeterminate", "0", "0"},
     {"5", "3", "Indeterminate", "0", "0"},
     {"5", "4", "Indeterminate", "0", "0"},
     {"5", "5", "Indeterminate", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9229410893157234`*^9, 3.922944010268033*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["M\[AAcute]s definiciones", "Subsection",
 CellChangeTimes->{{3.9229410695751424`*^9, 3.922941072461644*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LegendrePDerSin0", "[", 
   RowBox[{"n_", ",", "m_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "+", "n"}], ")"}]}], " ", 
    RowBox[{"Cos", "[", "theta", "]"}], " ", 
    RowBox[{"LegendreP", "[", 
     RowBox[{"n", ",", "m", ",", 
      RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "m", "+", "n"}], ")"}], " ", 
    RowBox[{"LegendreP", "[", 
     RowBox[{
      RowBox[{"1", "+", "n"}], ",", "m", ",", 
      RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9152890267368603`*^9, 3.9152890526107225`*^9}, 
   3.9229412137974997`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LegendrePDerSin", "[", 
   RowBox[{"n_", ",", "m_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sin", "[", "theta", "]"}], " ", 
   RowBox[{"LegendrePDer", "[", 
    RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9229411801942277`*^9, 3.9229412090277443`*^9}}],

Cell[CellGroupData[{

Cell["Comprobaci\[OAcute]n (II)", "Subsubsection",
 CellChangeTimes->{{3.922941040359507*^9, 3.9229410442936406`*^9}, {
  3.92294123688804*^9, 3.922941238901994*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"theta", "=", 
        RowBox[{"10.", " ", "Degree"}]}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "m", ",", 
          RowBox[{"LegendrePDerSin0", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
          RowBox[{"LegendrePDerSin", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}], ",", "1"}],
    "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.922940851722311*^9, 3.922940955578187*^9}, {
  3.922941017050661*^9, 3.922941021050113*^9}, {3.922941249107978*^9, 
  3.922941253425952*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "1"}], "0.08550503583141733`", "0.08550503583141716`"},
     {"1", "0", 
      RowBox[{"-", "0.030153689607046008`"}], 
      RowBox[{"-", "0.03015368960704585`"}]},
     {"1", "1", 
      RowBox[{"-", "0.17101007166283466`"}], 
      RowBox[{"-", "0.17101007166283433`"}]},
     {"2", 
      RowBox[{"-", "2"}], "0.007423896826735613`", "0.007423896826735599`"},
     {"2", 
      RowBox[{"-", "1"}], "0.08158795558326748`", "0.08158795558326737`"},
     {"2", "0", 
      RowBox[{"-", "0.08908676192082732`"}], 
      RowBox[{"-", "0.08908676192082718`"}]},
     {"2", "1", 
      RowBox[{"-", "0.4895277334996053`"}], 
      RowBox[{"-", "0.4895277334996043`"}]},
     {"2", "2", "0.17817352384165464`", "0.17817352384165436`"},
     {"3", 
      RowBox[{"-", "3"}], "0.0003222865387874868`", "0.0003222865387874864`"},
     {"3", 
      RowBox[{"-", "2"}], "0.007197455527917198`", "0.007197455527917188`"},
     {"3", 
      RowBox[{"-", "1"}], "0.0758364396677928`", "0.07583643966779256`"},
     {"3", "0", 
      RowBox[{"-", "0.17410280016538993`"}], 
      RowBox[{"-", "0.17410280016538962`"}]},
     {"3", "1", 
      RowBox[{"-", "0.9100372760135138`"}], 
      RowBox[{"-", "0.9100372760135107`"}]},
     {"3", "2", "0.863694663350064`", "0.8636946633500626`"},
     {"3", "3", 
      RowBox[{"-", "0.23204630792699044`"}], 
      RowBox[{"-", "0.2320463079269902`"}]},
     {"4", 
      RowBox[{"-", "4"}], "9.327411691171607`*^-6", "9.327411691171592`*^-6"},
     {"4", 
      RowBox[{"-", "3"}], "0.00031410093340672853`", 
      "0.00031410093340672804`"},
     {"4", 
      RowBox[{"-", "2"}], "0.0069015617720299995`", "0.006901561772029992`"},
     {"4", 
      RowBox[{"-", "1"}], "0.06839571638018499`", "0.0683957163801848`"},
     {"4", "0", 
      RowBox[{"-", "0.28128582142825653`"}], 
      RowBox[{"-", "0.28128582142825576`"}]},
     {"4", "1", 
      RowBox[{"-", "1.3679143276036996`"}], 
      RowBox[{"-", "1.3679143276036958`"}]},
     {"4", "2", "2.4845622379308008`", "2.484562237930797`"},
     {"4", "3", 
      RowBox[{"-", "1.5830687043699117`"}], 
      RowBox[{"-", "1.5830687043699094`"}]},
     {"4", "4", "0.3760812393880392`", "0.37608123938803856`"},
     {"5", 
      RowBox[{"-", "5"}], "2.0246100531514652`*^-7", "2.024610053151463`*^-7"},
     {"5", 
      RowBox[{"-", "4"}], "9.11430867344567`*^-6", "9.114308673445654`*^-6"},
     {"5", 
      RowBox[{"-", "3"}], "0.0003040650483091239`", "0.00030406504830912315`"},
     {"5", 
      RowBox[{"-", "2"}], "0.006541225303429106`", "0.0065412253034291025`"},
     {"5", 
      RowBox[{"-", "1"}], "0.05945337004005663`", "0.059453370040056616`"},
     {"5", "0", 
      RowBox[{"-", "0.4056495297419094`"}], 
      RowBox[{"-", "0.4056495297419088`"}]},
     {"5", "1", 
      RowBox[{"-", "1.7836011012017003`"}], 
      RowBox[{"-", "1.7836011012016988`"}]},
     {"5", "2", "5.494629254880447`", "5.494629254880446`"},
     {"5", "3", 
      RowBox[{"-", "6.12995137391194`"}], 
      RowBox[{"-", "6.129951373911925`"}]},
     {"5", "4", "3.3074003314199647`", "3.307400331419959`"},
     {"5", "5", 
      RowBox[{"-", "0.734690496087604`"}], 
      RowBox[{"-", "0.7346904960876028`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.922940921850856*^9, 3.9229409567085896`*^9}, {
   3.9229410177325044`*^9, 3.9229410213499193`*^9}, 3.9229412540003805`*^9, 
   3.9229440593449497`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"theta", "=", 
        RowBox[{"0", " ", "Degree"}]}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "m", ",", 
          RowBox[{"LegendrePDerSin0", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
          RowBox[{"LegendrePDerSin", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}], ",", "1"}],
    "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9229410871451817`*^9, 3.9229410882090483`*^9}, {
  3.9229412625287037`*^9, 3.9229412671496344`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "1"}], "0", "0"},
     {"1", "0", "0", "0"},
     {"1", "1", "0", "0"},
     {"2", 
      RowBox[{"-", "2"}], "0", "0"},
     {"2", 
      RowBox[{"-", "1"}], "0", "0"},
     {"2", "0", "0", "0"},
     {"2", "1", "0", "0"},
     {"2", "2", "0", "0"},
     {"3", 
      RowBox[{"-", "3"}], "0", "0"},
     {"3", 
      RowBox[{"-", "2"}], "0", "0"},
     {"3", 
      RowBox[{"-", "1"}], "0", "0"},
     {"3", "0", "0", "0"},
     {"3", "1", "0", "0"},
     {"3", "2", "0", "0"},
     {"3", "3", "0", "0"},
     {"4", 
      RowBox[{"-", "4"}], "0", "0"},
     {"4", 
      RowBox[{"-", "3"}], "0", "0"},
     {"4", 
      RowBox[{"-", "2"}], "0", "0"},
     {"4", 
      RowBox[{"-", "1"}], "0", "0"},
     {"4", "0", "0", "0"},
     {"4", "1", "0", "0"},
     {"4", "2", "0", "0"},
     {"4", "3", "0", "0"},
     {"4", "4", "0", "0"},
     {"5", 
      RowBox[{"-", "5"}], "0", "0"},
     {"5", 
      RowBox[{"-", "4"}], "0", "0"},
     {"5", 
      RowBox[{"-", "3"}], "0", "0"},
     {"5", 
      RowBox[{"-", "2"}], "0", "0"},
     {"5", 
      RowBox[{"-", "1"}], "0", "0"},
     {"5", "0", "0", "0"},
     {"5", "1", "0", "0"},
     {"5", "2", "0", "0"},
     {"5", "3", "0", "0"},
     {"5", "4", "0", "0"},
     {"5", "5", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9229410893157234`*^9, 3.9229412676577854`*^9, 
  3.9229440679902525`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["M\[AAcute]s definiciones", "Subsection",
 CellChangeTimes->{{3.9229410695751424`*^9, 3.922941072461644*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mLegendrePDividedBySin0", "[", 
   RowBox[{"n_", ",", "m_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{"m", " ", 
   RowBox[{
    RowBox[{"LegendreP", "[", 
     RowBox[{"n", ",", "m", ",", 
      RowBox[{"Cos", "[", "theta", "]"}]}], "]"}], "/", 
    RowBox[{"Sin", "[", "theta", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.922941478179179*^9, 3.9229415069398465`*^9}, {
  3.9229416301974683`*^9, 3.922941642587442*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mLegendrePDividedBySin1", "[", 
   RowBox[{"n_", ",", "m_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"m", "\[Equal]", "0"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"m", ">", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", 
        RowBox[{"Cos", "[", "theta", "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "m", "+", "1"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"n", "+", "m"}], ")"}], " ", 
           RowBox[{"LegendreP", "[", 
            RowBox[{"n", ",", 
             RowBox[{"m", "-", "1"}], ",", 
             RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], "+", 
          RowBox[{"LegendreP", "[", 
           RowBox[{"n", ",", 
            RowBox[{"m", "+", "1"}], ",", 
            RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{"m", " ", 
        RowBox[{"Sin", "[", "theta", "]"}], " ", 
        RowBox[{"LegendreP", "[", 
         RowBox[{"n", ",", "m", ",", 
          RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "m"}], " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", "m"}], ")"}], "!"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "m"}], ")"}], "!"}]}], "  ", 
        RowBox[{"1", "/", "2"}], " ", 
        RowBox[{"Cos", "[", "theta", "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "m", "+", "1"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"n", "-", "m"}], ")"}], " ", 
           RowBox[{"LegendreP", "[", 
            RowBox[{"n", ",", 
             RowBox[{
              RowBox[{"-", "m"}], "-", "1"}], ",", 
             RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], "+", 
          RowBox[{"LegendreP", "[", 
           RowBox[{"n", ",", 
            RowBox[{
             RowBox[{"-", "m"}], "+", "1"}], ",", 
            RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], ")"}]}], "-", 
       RowBox[{"m", " ", 
        RowBox[{"Sin", "[", "theta", "]"}], " ", 
        RowBox[{"LegendreP", "[", 
         RowBox[{"n", ",", 
          RowBox[{"-", "m"}], ",", 
          RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9228902903374023`*^9, 3.9228903673246484`*^9}, {
   3.922890658526289*^9, 3.922890762314071*^9}, {3.9228908158069777`*^9, 
   3.922890876938633*^9}, {3.9228944081873255`*^9, 3.92289445959455*^9}, 
   3.922943145398876*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mLegendrePDividedBySin", "[", 
   RowBox[{"n_", ",", "m_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "/", "2"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"LegendreP", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", 
       RowBox[{"m", "+", "1"}], ",", 
       RowBox[{"Cos", "[", "theta", "]"}]}], "]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "m", "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"n", "+", "m"}], ")"}], " ", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{"n", "-", "1"}], ",", 
        RowBox[{"m", "-", "1"}], ",", 
        RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.922943153026509*^9, {3.9229432052991257`*^9, 3.922943214584501*^9}, {
   3.9229432734063926`*^9, 3.922943336031534*^9}, {3.9229434025219383`*^9, 
   3.9229434043771725`*^9}}],

Cell[CellGroupData[{

Cell["Comprobaci\[OAcute]n (III)", "Subsubsection",
 CellChangeTimes->{{3.922941040359507*^9, 3.9229410442936406`*^9}, {
   3.92294123688804*^9, 3.922941238901994*^9}, 3.9229415211696453`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"theta", "=", 
        RowBox[{"10.", " ", "Degree"}]}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "m", ",", 
          RowBox[{"mLegendrePDividedBySin0", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
          RowBox[{"mLegendrePDividedBySin1", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
          RowBox[{"mLegendrePDividedBySin", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}], ",", "1"}],
    "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.922940851722311*^9, 3.922940955578187*^9}, {
  3.922941017050661*^9, 3.922941021050113*^9}, {3.922941249107978*^9, 
  3.922941253425952*^9}, {3.922941532852922*^9, 3.922941537098881*^9}, {
  3.922943365696556*^9, 3.9229433684948425`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "0.5000000000000008`"}], 
      RowBox[{"-", "0.5150768448035229`"}], 
      RowBox[{"-", "0.5`"}]},
     {"1", "0", "0.`", "0", "0.`"},
     {"1", "1", 
      RowBox[{"-", "1.0000000000000016`"}], "0.9396926207859081`", 
      RowBox[{"-", "1.`"}]},
     {"2", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "0.043412044416732715`"}], 
      RowBox[{"-", "0.010686211602996543`"}], 
      RowBox[{"-", "0.04341204441673265`"}]},
     {"2", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "0.4924038765061048`"}], 
      RowBox[{"-", "0.5666428447734599`"}], 
      RowBox[{"-", "0.49240387650610395`"}]},
     {"2", "0", "0.`", "0", "0.`"},
     {"2", "1", 
      RowBox[{"-", "2.954423259036629`"}], "2.7762497351949693`", 
      RowBox[{"-", "2.9544232590366235`"}]},
     {"2", "2", "1.0418890660015852`", 
      RowBox[{"-", "0.9790554669992102`"}], "1.0418890660015836`"},
     {"3", 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "0.0018846056004403716`"}], 
      RowBox[{"-", "0.04274380264944599`"}], 
      RowBox[{"-", "0.0018846056004403686`"}]},
     {"3", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "0.04275251791570872`"}], "0.11323416685743476`", 
      RowBox[{"-", "0.04275251791570866`"}]},
     {"3", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "0.4811539439955971`"}], 
      RowBox[{"-", "0.6407481774805366`"}], 
      RowBox[{"-", "0.48115394399559624`"}]},
     {"3", "0", "0.`", "0", "0.`"},
     {"3", "1", 
      RowBox[{"-", "5.773847327947165`"}], "5.425641727616375`", 
      RowBox[{"-", "5.773847327947156`"}]},
     {"3", "2", "5.130302149885046`", 
      RowBox[{"-", "4.820907072649051`"}], "5.130302149885039`"},
     {"3", "3", 
      RowBox[{"-", "1.3569160323170677`"}], "1.2750839825944393`", 
      RowBox[{"-", "1.3569160323170655`"}]},
     {"4", 
      RowBox[{"-", "4"}], 
      RowBox[{"-", "0.000054543054689560344`"}], "0.06626037106204216`", 
      RowBox[{"-", "0.00005454305468956026`"}]},
     {"4", 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "0.0018559742066839055`"}], 
      RowBox[{"-", "0.28386093927756584`"}], 
      RowBox[{"-", "0.0018559742066839027`"}]},
     {"4", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "0.041884838885425026`"}], "0.4140518187027696`", 
      RowBox[{"-", "0.04188483888542496`"}]},
     {"4", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "0.4664202376125302`"}], 
      RowBox[{"-", "0.7336417679693722`"}], 
      RowBox[{"-", "0.46642023761252926`"}]},
     {"4", "0", "0.`", "0", "0.`"},
     {"4", "1", 
      RowBox[{"-", "9.328404752250604`"}], "8.765833109394073`", 
      RowBox[{"-", "9.328404752250584`"}]},
     {"4", "2", "15.07854199875301`", 
      RowBox[{"-", "14.169194648438586`"}], "15.07854199875299`"},
     {"4", "3", 
      RowBox[{"-", "9.354110001686882`"}], "8.78998814260481`", 
      RowBox[{"-", "9.354110001686868`"}]},
     {"4", "4", "2.1991759650830733`", 
      RowBox[{"-", "2.066549426198289`"}], "2.1991759650830702`"},
     {"5", 
      RowBox[{"-", "5"}], 
      RowBox[{"-", "1.183912756403736`*^-6"}], 
      RowBox[{"-", "0.12954690514375014`"}], 
      RowBox[{"-", "1.1839127564037341`*^-6"}]},
     {"5", 
      RowBox[{"-", "4"}], 
      RowBox[{"-", "0.000053714423131247896`"}], "0.5877003021349936`", 
      RowBox[{"-", "0.000053714423131247814`"}]},
     {"5", 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "0.0018206743115945696`"}], 
      RowBox[{"-", "1.1085507433011912`"}], 
      RowBox[{"-", "0.001820674311594567`"}]},
     {"5", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "0.04081879868298379`"}], "0.9943154426227495`", 
      RowBox[{"-", "0.04081879868298374`"}]},
     {"5", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "0.44842442724612547`"}], 
      RowBox[{"-", "0.8405523059966362`"}], 
      RowBox[{"-", "0.4484244272461245`"}]},
     {"5", "0", "0.`", "0", "0.`"},
     {"5", "1", 
      RowBox[{"-", "13.452732817383763`"}], "12.641433757899915`", 
      RowBox[{"-", "13.452732817383737`"}]},
     {"5", "2", "34.287790893706386`", 
      RowBox[{"-", "32.219984085866116`"}], "34.287790893706344`"},
     {"5", "3", 
      RowBox[{"-", "36.70479412174652`"}], "34.49122418367114`", 
      RowBox[{"-", "36.704794121746474`"}]},
     {"5", "4", "19.491889865867236`", 
      RowBox[{"-", "18.316385072127037`"}], "19.491889865867204`"},
     {"5", "5", 
      RowBox[{"-", "4.296182610437877`"}], "4.037091096577207`", 
      RowBox[{"-", "4.296182610437871`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.922940921850856*^9, 3.9229409567085896`*^9}, {
   3.9229410177325044`*^9, 3.9229410213499193`*^9}, 3.9229412540003805`*^9, 
   3.922941537599824*^9, 3.9229416364714756`*^9, {3.922943369000216*^9, 
   3.922943377308958*^9}, 3.9229434073124456`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"theta", "=", 
        RowBox[{"0", " ", "Degree"}]}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "m", ",", 
          RowBox[{"mLegendrePDividedBySin0", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
          RowBox[{"mLegendrePDividedBySin", "[", 
           RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}], ",", "1"}],
    "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9229410871451817`*^9, 3.9229410882090483`*^9}, {
   3.9229412625287037`*^9, 3.9229412671496344`*^9}, 3.9229415875209293`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229415884895844`*^9, 3.922943437137786*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229415884895844`*^9, 3.9229434371657114`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229415884895844`*^9, 3.9229434371926093`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229415884895844`*^9, 3.922943437222528*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229415884895844`*^9, 3.9229434372494574`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229415884895844`*^9, 3.922943437268409*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229415884895844`*^9, 3.9229434372943373`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Infinity \
:: indet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9229415884895844`*^9, 3.9229434373117657`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "1"}], "Indeterminate", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {"1", "0", "Indeterminate", "0"},
     {"1", "1", "Indeterminate", 
      RowBox[{"-", "1"}]},
     {"2", 
      RowBox[{"-", "2"}], "Indeterminate", "0"},
     {"2", 
      RowBox[{"-", "1"}], "Indeterminate", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {"2", "0", "Indeterminate", "0"},
     {"2", "1", "Indeterminate", 
      RowBox[{"-", "3"}]},
     {"2", "2", "Indeterminate", "0"},
     {"3", 
      RowBox[{"-", "3"}], "Indeterminate", "0"},
     {"3", 
      RowBox[{"-", "2"}], "Indeterminate", "0"},
     {"3", 
      RowBox[{"-", "1"}], "Indeterminate", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {"3", "0", "Indeterminate", "0"},
     {"3", "1", "Indeterminate", 
      RowBox[{"-", "6"}]},
     {"3", "2", "Indeterminate", "0"},
     {"3", "3", "Indeterminate", "0"},
     {"4", 
      RowBox[{"-", "4"}], "Indeterminate", "0"},
     {"4", 
      RowBox[{"-", "3"}], "Indeterminate", "0"},
     {"4", 
      RowBox[{"-", "2"}], "Indeterminate", "0"},
     {"4", 
      RowBox[{"-", "1"}], "Indeterminate", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {"4", "0", "Indeterminate", "0"},
     {"4", "1", "Indeterminate", 
      RowBox[{"-", "10"}]},
     {"4", "2", "Indeterminate", "0"},
     {"4", "3", "Indeterminate", "0"},
     {"4", "4", "Indeterminate", "0"},
     {"5", 
      RowBox[{"-", "5"}], "Indeterminate", "0"},
     {"5", 
      RowBox[{"-", "4"}], "Indeterminate", "0"},
     {"5", 
      RowBox[{"-", "3"}], "Indeterminate", "0"},
     {"5", 
      RowBox[{"-", "2"}], "Indeterminate", "0"},
     {"5", 
      RowBox[{"-", "1"}], "Indeterminate", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {"5", "0", "Indeterminate", "0"},
     {"5", "1", "Indeterminate", 
      RowBox[{"-", "15"}]},
     {"5", "2", "Indeterminate", "0"},
     {"5", "3", "Indeterminate", "0"},
     {"5", "4", "Indeterminate", "0"},
     {"5", "5", "Indeterminate", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9229410893157234`*^9, 3.9229412676577854`*^9, 
  3.92294158866512*^9, 3.922943437315647*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["M\[AAcute]s definiciones", "Subsubsection",
 CellChangeTimes->{{3.9229434524306183`*^9, 3.922943459422719*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"hRDer", "[", 
    RowBox[{"n_", ",", "k_", ",", "R_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "n"}], ")"}], " ", 
      RowBox[{"SphericalHankelH1", "[", 
       RowBox[{"n", ",", 
        RowBox[{"k", " ", "R"}]}], "]"}]}], 
     RowBox[{"k", " ", "R"}]], "-", 
    RowBox[{"SphericalHankelH1", "[", 
     RowBox[{
      RowBox[{"1", "+", "n"}], ",", 
      RowBox[{"k", " ", "R"}]}], "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.9152928118118362`*^9, 3.915292834552726*^9}, {
  3.915293148104562*^9, 3.9152931490741944`*^9}, {3.9229434964155426`*^9, 
  3.922943499546624*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hRDer", "[", 
   RowBox[{"n_", ",", "k_", ",", "R_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}], " ", 
    RowBox[{"SphericalHankelH1", "[", 
     RowBox[{"n", ",", 
      RowBox[{"k", " ", "R"}]}], "]"}]}], "-", 
   RowBox[{"k", " ", "R", " ", 
    RowBox[{"SphericalHankelH1", "[", 
     RowBox[{
      RowBox[{"1", "+", "n"}], ",", 
      RowBox[{"k", " ", "R"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{3.9229434922303724`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gamma", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "n"}], "+", "1"}], ")"}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "m"}], ")"}], "!"}], "/", 
     RowBox[{"(", 
      RowBox[{"4", " ", "Pi", " ", "n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", "m"}], ")"}], "!"}]}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9228586608751183`*^9, 3.922858727463767*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pfunc", "[", 
   RowBox[{"m_", ",", "n_", ",", "theta_", ",", "phi_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"LegendreP", "[", 
      RowBox[{"n", ",", "m", ",", 
       RowBox[{"Cos", "[", "theta", "]"}]}], "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "m", " ", "phi"}], "]"}]}], ",", "0", ",", "0"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.922859036050114*^9, 3.922859084523972*^9}, {
  3.9228722135798388`*^9, 3.9228722191817713`*^9}, {3.922872260508593*^9, 
  3.9228722647427273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BSinfunc", "[", 
   RowBox[{"m_", ",", "n_", ",", "theta_", ",", "phi_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"LegendrePDerSin", "[", 
      RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
     RowBox[{"I", " ", "m", " ", 
      RowBox[{"LegendreP", "[", 
       RowBox[{"n", ",", "m", ",", 
        RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}]}], "}"}], " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "m", " ", "phi"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9152887079169917`*^9, 3.9152887146438684`*^9}, {
  3.9152887847112656`*^9, 3.9152887857347884`*^9}, {3.915288871127266*^9, 
  3.9152888912786474`*^9}, {3.9152890611016273`*^9, 3.9152891563838215`*^9}, {
  3.9228585814930506`*^9, 3.922858598573992*^9}, {3.9228588629496083`*^9, 
  3.922858863387607*^9}, {3.9228590259336557`*^9, 3.9228590263076077`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CSinfunc", "[", 
   RowBox[{"m_", ",", "n_", ",", "theta_", ",", "phi_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"I", " ", "m", " ", 
      RowBox[{"LegendreP", "[", 
       RowBox[{"n", ",", "m", ",", 
        RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"LegendrePDerSin", "[", 
       RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}]}], "}"}], " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "m", " ", "phi"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9152892092333765`*^9, 3.9152892459936013`*^9}, {
  3.9228588666581783`*^9, 3.9228588671223555`*^9}, {3.9228590314479094`*^9, 
  3.9228590317057858`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MSinfunc", "[", 
   RowBox[{
   "m_", ",", "n_", ",", "k_", ",", "R_", ",", "theta_", ",", "phi_"}], "]"}],
   ":=", 
  RowBox[{
   RowBox[{"gamma", "[", 
    RowBox[{"m", ",", "n"}], "]"}], " ", 
   RowBox[{"SphericalHankelH1", "[", 
    RowBox[{"n", ",", 
     RowBox[{"k", " ", "R"}]}], "]"}], " ", 
   RowBox[{"CSinfunc", "[", 
    RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9152928479562564`*^9, 3.915292857492791*^9}, {
  3.9152930549465466`*^9, 3.9152931075460033`*^9}, {3.922858762351385*^9, 
  3.922858766049597*^9}, {3.9228588975546026`*^9, 3.9228589016109257`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"NSinfunc", "[", 
    RowBox[{
    "m_", ",", "n_", ",", "k_", ",", "R_", ",", "theta_", ",", "phi_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"gamma", "[", 
     RowBox[{"m", ",", "n"}], "]"}], " ", 
    RowBox[{"hRDer", "[", 
     RowBox[{"n", ",", "k", ",", "R"}], "]"}], " ", 
    RowBox[{"Cfunc", "[", 
     RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9152931260530405`*^9, 3.9152931581931124`*^9}, {
  3.92285876985832*^9, 3.922858772522586*^9}, {3.9228589059070034`*^9, 
  3.922858931579834*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NSinfunc", "[", 
   RowBox[{
   "m_", ",", "n_", ",", "k_", ",", "R_", ",", "theta_", ",", "phi_"}], "]"}],
   ":=", 
  RowBox[{
   RowBox[{"gamma", "[", 
    RowBox[{"m", ",", "n"}], "]"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", 
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], " ", 
      RowBox[{
       RowBox[{"SphericalHankelH1", "[", 
        RowBox[{"n", ",", 
         RowBox[{"k", " ", "R"}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"k", " ", "R"}], ")"}]}], " ", 
      RowBox[{"Pfunc", "[", 
       RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"hRDer", "[", 
        RowBox[{"n", ",", "k", ",", "R"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"k", " ", "R"}], ")"}]}], " ", 
      RowBox[{"BSinfunc", "[", 
       RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.922858944042697*^9, 3.9228589742126217`*^9}, {
   3.922859126419684*^9, 3.922859196245332*^9}, 3.922859278603385*^9, {
   3.9229442558275766`*^9, 3.922944257934512*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bfunc", "[", 
   RowBox[{"m_", ",", "n_", ",", "theta_", ",", "phi_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"LegendrePDer", "[", 
      RowBox[{"n", ",", "m", ",", "theta"}], "]"}], ",", 
     RowBox[{"I", " ", 
      RowBox[{"mLegendrePDividedBySin", "[", 
       RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}]}], "}"}], " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "m", " ", "phi"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9152887079169917`*^9, 3.9152887146438684`*^9}, {
  3.9152887847112656`*^9, 3.9152887857347884`*^9}, {3.915288871127266*^9, 
  3.9152888912786474`*^9}, {3.9152890611016273`*^9, 3.9152891563838215`*^9}, {
  3.9228585814930506`*^9, 3.922858598573992*^9}, {3.9228588629496083`*^9, 
  3.922858863387607*^9}, {3.9228590259336557`*^9, 3.9228590263076077`*^9}, {
  3.922876821174972*^9, 3.9228768218714466`*^9}, {3.9228770875680013`*^9, 
  3.9228770883175077`*^9}, {3.9228909656319785`*^9, 3.922890969833598*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cfunc", "[", 
   RowBox[{"m_", ",", "n_", ",", "theta_", ",", "phi_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"I", " ", 
      RowBox[{"mLegendrePDividedBySin", "[", 
       RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"LegendrePDer", "[", 
       RowBox[{"n", ",", "m", ",", "theta"}], "]"}]}]}], "}"}], " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "m", " ", "phi"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9152892092333765`*^9, 3.9152892459936013`*^9}, {
  3.9228588666581783`*^9, 3.9228588671223555`*^9}, {3.9228590314479094`*^9, 
  3.9228590317057858`*^9}, {3.922876824543578*^9, 3.922876824882657*^9}, {
  3.922891032212861*^9, 3.922891040023999*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mfunc", "[", 
   RowBox[{
   "m_", ",", "n_", ",", "k_", ",", "R_", ",", "theta_", ",", "phi_"}], "]"}],
   ":=", 
  RowBox[{
   RowBox[{"gamma", "[", 
    RowBox[{"m", ",", "n"}], "]"}], " ", 
   RowBox[{"SphericalHankelH1", "[", 
    RowBox[{"n", ",", 
     RowBox[{"k", " ", "R"}]}], "]"}], " ", 
   RowBox[{"Cfunc", "[", 
    RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9152928479562564`*^9, 3.915292857492791*^9}, {
  3.9152930549465466`*^9, 3.9152931075460033`*^9}, {3.922858762351385*^9, 
  3.922858766049597*^9}, {3.9228588975546026`*^9, 3.9228589016109257`*^9}, {
  3.9228768285600834`*^9, 3.9228768473198433`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"NSinfunc", "[", 
    RowBox[{
    "m_", ",", "n_", ",", "k_", ",", "R_", ",", "theta_", ",", "phi_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"gamma", "[", 
     RowBox[{"m", ",", "n"}], "]"}], " ", 
    RowBox[{"hRDer", "[", 
     RowBox[{"n", ",", "k", ",", "R"}], "]"}], " ", 
    RowBox[{"Cfunc", "[", 
     RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9152931260530405`*^9, 3.9152931581931124`*^9}, {
  3.92285876985832*^9, 3.922858772522586*^9}, {3.9228589059070034`*^9, 
  3.922858931579834*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nfunc", "[", 
   RowBox[{
   "m_", ",", "n_", ",", "k_", ",", "R_", ",", "theta_", ",", "phi_"}], "]"}],
   ":=", 
  RowBox[{
   RowBox[{"gamma", "[", 
    RowBox[{"m", ",", "n"}], "]"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", 
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], " ", 
      RowBox[{
       RowBox[{"SphericalHankelH1", "[", 
        RowBox[{"n", ",", 
         RowBox[{"k", " ", "R"}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"k", " ", "R"}], ")"}]}], " ", 
      RowBox[{"Pfunc", "[", 
       RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}]}], " ", "+", 
     " ", 
     RowBox[{
      RowBox[{
       RowBox[{"hRDer", "[", 
        RowBox[{"n", ",", "k", ",", "R"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"k", " ", "R"}], ")"}]}], " ", 
      RowBox[{"Bfunc", "[", 
       RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.922858944042697*^9, 3.9228589742126217`*^9}, {
   3.922859126419684*^9, 3.922859196245332*^9}, 3.922859278603385*^9, {
   3.9228768388957114`*^9, 3.922876863340156*^9}, {3.9228947922053614`*^9, 
   3.922894822534252*^9}, 3.922944366830987*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"z1", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", "m"}], " ", "4", " ", 
   RowBox[{"Pi", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "n"}], "+", "1"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9228717988650017`*^9, 3.922871831253547*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"z2", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", "m"}], " ", "4", " ", "Pi", " ", "n", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "n"}], "+", "1"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.92287183428967*^9, 3.9228718696514006`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"z3", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", "m"}], " ", "4", " ", "Pi", " ", "n", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "n"}], "+", "1"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.92287183428967*^9, 3.9228718696514006`*^9}, {
  3.9228725946461773`*^9, 3.9228725947584505`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"afunc", "[", 
   RowBox[{"gdata_", ",", "m_", ",", "n_", ",", "k_", ",", "R_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "m"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "Pi", " ", 
      RowBox[{"gamma", "[", 
       RowBox[{"m", ",", "n"}], "]"}]}], ")"}]}], " ", 
   RowBox[{
    RowBox[{"gdata", "[", 
     RowBox[{"[", "n", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"n", "+", "m", "+", "1"}], "]"}], "]"}], 
   RowBox[{"1", "/", 
    RowBox[{"SphericalHankelH1", "[", 
     RowBox[{"n", ",", 
      RowBox[{"k", " ", "R"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.915293164009934*^9, 3.915293211874683*^9}, {
   3.9152935733928156`*^9, 3.915293573883272*^9}, {3.9228741981376853`*^9, 
   3.922874203729574*^9}, {3.9228743656355247`*^9, 3.922874378369392*^9}, {
   3.9228918427228627`*^9, 3.9228918453211727`*^9}, {3.9228922536852384`*^9, 
   3.922892279142168*^9}, {3.9228925622075787`*^9, 3.9228925671119137`*^9}, {
   3.922932897349654*^9, 3.9229328981655083`*^9}, 3.922944533760015*^9, {
   3.923017599850396*^9, 3.923017600161214*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bfunc", "[", 
   RowBox[{"edata_", ",", "m_", ",", "n_", ",", "k_", ",", "R_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "m"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "Pi", " ", 
      RowBox[{"gamma", "[", 
       RowBox[{"m", ",", "n"}], "]"}]}], ")"}]}], " ", 
   RowBox[{
    RowBox[{"edata", "[", 
     RowBox[{"[", "n", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"n", "+", "m", "+", "1"}], "]"}], "]"}], "k", " ", 
   RowBox[{"R", "/", 
    RowBox[{"hRDer", "[", 
     RowBox[{"n", ",", "k", ",", "R"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9152932149386024`*^9, 3.9152932914143953`*^9}, {
   3.9152935775622997`*^9, 3.915293578113381*^9}, {3.9228743871293545`*^9, 
   3.922874405543419*^9}, 3.9228918506850433`*^9, 3.922892578825506*^9, {
   3.9229446857699876`*^9, 3.9229446867541513`*^9}, {3.9230175934405594`*^9, 
   3.9230175937121115`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b2func", "[", 
   RowBox[{"ddata_", ",", "m_", ",", "n_", ",", "k_", ",", "R_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "m"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "Pi", " ", 
      RowBox[{"gamma", "[", 
       RowBox[{"m", ",", "n"}], "]"}]}], ")"}]}], " ", 
   RowBox[{
    RowBox[{"ddata", "[", 
     RowBox[{"[", "n", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"n", "+", "m", "+", "1"}], "]"}], "]"}], " ", "k", " ", 
   RowBox[{"R", "/", 
    RowBox[{"SphericalHankelH1", "[", 
     RowBox[{"n", ",", 
      RowBox[{"k", " ", "R"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.922932207841196*^9, {3.9229323237855062`*^9, 3.9229323268652906`*^9}, {
   3.9229328765252123`*^9, 3.9229328927579036`*^9}, {3.9229447079465127`*^9, 
   3.9229447088885612`*^9}, {3.923017379150078*^9, 3.9230173795555744`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EfieldTerms", "[", 
   RowBox[{
   "k_", ",", "R_", ",", "theta_", ",", "phi_", ",", "edata_", ",", "gdata_", 
    ",", "M_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "n"}], "+", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"n", 
        RowBox[{"(", 
         RowBox[{"n", "+", "1"}], ")"}]}], ")"}]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"afunc", "[", 
         RowBox[{"gdata", ",", "m", ",", "n", ",", "k", ",", "R"}], "]"}], 
        " ", 
        RowBox[{"Mfunc", "[", 
         RowBox[{
         "m", ",", "n", ",", "k", ",", "R", ",", "theta", ",", "phi"}], 
         "]"}]}], "+", 
       RowBox[{
        RowBox[{"bfunc", "[", 
         RowBox[{"edata", ",", "m", ",", "n", ",", "k", ",", "R"}], "]"}], 
        " ", 
        RowBox[{"Nfunc", "[", 
         RowBox[{
         "m", ",", "n", ",", "k", ",", "R", ",", "theta", ",", "phi"}], 
         "]"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.922891513827693*^9, 3.922891518684847*^9}, {
  3.9228918736730776`*^9, 3.922891886236044*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Efieldsint", "[", 
   RowBox[{
   "k_", ",", "R_", ",", "acoeff_", ",", "bcoeff_", ",", "theta_", ",", 
    "phi_", ",", "M_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "n"}], "+", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"n", 
        RowBox[{"(", 
         RowBox[{"n", "+", "1"}], ")"}]}], ")"}]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"acoeff", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"m", "+", "n", "+", "1"}], "]"}], "]"}], " ", 
        RowBox[{"Mfunc", "[", 
         RowBox[{
         "m", ",", "n", ",", "k", ",", "R", ",", "theta", ",", "phi"}], 
         "]"}]}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"bcoeff", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"m", "+", "n", "+", "1"}], "]"}], "]"}], " ", 
        RowBox[{"Nfunc", "[", 
         RowBox[{
         "m", ",", "n", ",", "k", ",", "R", ",", "theta", ",", "phi"}], 
         "]"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.922944923480295*^9, 3.92294493098612*^9}, {
  3.922945010189785*^9, 3.9229450905971394`*^9}, {3.9229462939862347`*^9, 
  3.922946339040319*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Efield", "[", 
   RowBox[{
   "k_", ",", "R_", ",", "theta_", ",", "phi_", ",", "edata_", ",", "gdata_", 
    ",", "M_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "n"}], "+", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"n", 
        RowBox[{"(", 
         RowBox[{"n", "+", "1"}], ")"}]}], ")"}]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"afunc", "[", 
         RowBox[{"gdata", ",", "m", ",", "n", ",", "k", ",", "R"}], "]"}], 
        " ", 
        RowBox[{"Mfunc", "[", 
         RowBox[{
         "m", ",", "n", ",", "k", ",", "R", ",", "theta", ",", "phi"}], 
         "]"}]}], "+", 
       RowBox[{
        RowBox[{"bfunc", "[", 
         RowBox[{"edata", ",", "m", ",", "n", ",", "k", ",", "R"}], "]"}], 
        " ", 
        RowBox[{"Nfunc", "[", 
         RowBox[{
         "m", ",", "n", ",", "k", ",", "R", ",", "theta", ",", "phi"}], 
         "]"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9152933006279936`*^9, 3.9152933710734463`*^9}, {
  3.915293428081185*^9, 3.9152936200375223`*^9}, {3.9152936745006685`*^9, 
  3.91529368633127*^9}, {3.92287463057906*^9, 3.9228746874407034`*^9}, {
  3.922891354672247*^9, 3.92289136400351*^9}, {3.922891892440111*^9, 
  3.9228918944328227`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lambda", "=", "1."}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"1", " ", "lambda"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"lambda", "/", "50"}]}], ",", " ", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"theta", "=", "0"}], ",", 
       RowBox[{"phi", "=", "0"}], ",", 
       RowBox[{"numberOfModes", "=", "1"}]}], "}"}], ",", 
     RowBox[{"EfieldTerms", "[", 
      RowBox[{
      "k", ",", "r", ",", "theta", ",", "phi", ",", "edata", ",", "gdata", 
       ",", "numberOfModes"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.922876659784412*^9, 3.922876674603408*^9}, {
   3.9228767059882145`*^9, 3.922876776909793*^9}, 3.922891402408781*^9, {
   3.9228915799896955`*^9, 3.9228915890593443`*^9}, {3.9228928267214947`*^9, 
   3.922892890477211*^9}, {3.9228929219348793`*^9, 3.922892924120589*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "1.2112707496825021`*^-16"}], "-", 
       RowBox[{"7.657250953473795`*^-17", " ", "\[ImaginaryI]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "7.657250953473795`*^-17"}], "+", 
       RowBox[{"1.2112707496825021`*^-16", " ", "\[ImaginaryI]"}]}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1.1984211222005203`"}], "+", 
       RowBox[{"0.20065502687535858`", " ", "\[ImaginaryI]"}]}], ",", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "1.048533815955621`*^-16"}], "+", 
       RowBox[{"1.7479522995831104`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
      RowBox[{"1.7479522995831104`*^-16", "+", 
       RowBox[{"1.048533815955621`*^-16", " ", "\[ImaginaryI]"}]}]}], "}"}]}],
    "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9228919936459217`*^9, 3.922892017913104*^9}, 
   3.9228920762108345`*^9, 3.92289268351868*^9, {3.9228928340934105`*^9, 
   3.922892860593111*^9}, {3.922892890824192*^9, 3.922892924433693*^9}, 
   3.922892959755221*^9, {3.9228945008133397`*^9, 3.922894529920456*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lambda", "=", "1."}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"1", " ", "lambda"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"lambda", "/", "50"}]}], ",", " ", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"theta", "=", 
        RowBox[{"0", " ", "Degree"}]}], ",", 
       RowBox[{"phi", "=", "0"}], ",", 
       RowBox[{"numberOfModes", "=", "2"}]}], "}"}], ",", 
     RowBox[{"Efield", "[", 
      RowBox[{
      "k", ",", "r", ",", "theta", ",", "phi", ",", "edata", ",", "gdata", 
       ",", "numberOfModes"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.922876659784412*^9, 3.922876674603408*^9}, {
   3.9228767059882145`*^9, 3.922876776909793*^9}, 3.922891402408781*^9, {
   3.9228915799896955`*^9, 3.9228915890593443`*^9}, {3.9228928267214947`*^9, 
   3.922892890477211*^9}, {3.9228929219348793`*^9, 3.922892924120589*^9}, {
   3.9228945572063828`*^9, 3.9228945694900217`*^9}, {3.9228948377028627`*^9, 
   3.922894845915191*^9}, {3.9228948829761457`*^9, 3.9228948959592223`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1.1984211222005203`"}], "+", 
    RowBox[{"0.20065502687535855`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "3.7953432261615946`*^-16"}], "+", 
    RowBox[{"5.597954701855736`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.597954701855736`*^-16", "+", 
    RowBox[{"3.7953432261615946`*^-16", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9228919936459217`*^9, 3.922892017913104*^9}, 
   3.9228920762108345`*^9, 3.92289268351868*^9, {3.9228928340934105`*^9, 
   3.922892860593111*^9}, {3.922892890824192*^9, 3.922892924433693*^9}, 
   3.922892959755221*^9, {3.9228945008133397`*^9, 3.922894569761401*^9}, 
   3.922894798476843*^9, {3.9228948332645783`*^9, 3.922894846300405*^9}, {
   3.9228948855722437`*^9, 3.9228948965093803`*^9}, 3.9229331231672783`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplificaciones", "Subsubsection",
 CellChangeTimes->{{3.9136992256963053`*^9, 3.9136992290157957`*^9}, {
  3.91529272997859*^9, 3.9152927310766497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"LegendreP", "[", 
     RowBox[{"n", ",", "m", ",", 
      RowBox[{"Cos", "[", "theta", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"theta", ",", "1"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.9228769106476407`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}]}], " ", 
   RowBox[{"Cot", "[", "theta", "]"}], " ", 
   RowBox[{"LegendreP", "[", 
    RowBox[{"n", ",", "m", ",", 
     RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "m", "+", "n"}], ")"}], " ", 
   RowBox[{"Csc", "[", "theta", "]"}], " ", 
   RowBox[{"LegendreP", "[", 
    RowBox[{
     RowBox[{"1", "+", "n"}], ",", "m", ",", 
     RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.9228769114991083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "theta", "]"}], " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"LegendreP", "[", 
      RowBox[{"n", ",", "m", ",", 
       RowBox[{"Cos", "[", "theta", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", "1"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9090661128211007`*^9, 3.9090661252853703`*^9}, {
  3.9090662613132105`*^9, 3.909066271350946*^9}, {3.909066310031209*^9, 
  3.9090663110227976`*^9}, {3.915288930656129*^9, 3.9152889709466777`*^9}, {
  3.915289008699877*^9, 3.9152890121284256`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}]}], " ", 
   RowBox[{"Cos", "[", "theta", "]"}], " ", 
   RowBox[{"LegendreP", "[", 
    RowBox[{"n", ",", "m", ",", 
     RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "m", "+", "n"}], ")"}], " ", 
   RowBox[{"LegendreP", "[", 
    RowBox[{
     RowBox[{"1", "+", "n"}], ",", "m", ",", 
     RowBox[{"Cos", "[", "theta", "]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.90906612614692*^9, 3.9090662783231287`*^9, 
  3.909066319527455*^9, 3.9131354521417265`*^9, 3.9152889716917896`*^9, 
  3.915289012811035*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", " ", 
      RowBox[{"SphericalHankelH1", "[", 
       RowBox[{"n", ",", "z"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "1"}], "}"}]}], "]"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"k", " ", "R"}]}], "}"}]}]], "Input",
 CellChangeTimes->{3.9229413117874765`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "n"}], ")"}], " ", 
   RowBox[{"SphericalHankelH1", "[", 
    RowBox[{"n", ",", 
     RowBox[{"k", " ", "R"}]}], "]"}]}], "-", 
  RowBox[{"k", " ", "R", " ", 
   RowBox[{"SphericalHankelH1", "[", 
    RowBox[{
     RowBox[{"1", "+", "n"}], ",", 
     RowBox[{"k", " ", "R"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.9229413186963253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"z", " ", 
       RowBox[{"SphericalHankelH1", "[", 
        RowBox[{"n", ",", "z"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "1"}], "}"}]}], "]"}], "/", "z"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"k", " ", "R"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9152927628598857`*^9, 3.915292787381551*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}], " ", 
    RowBox[{"SphericalHankelH1", "[", 
     RowBox[{"n", ",", 
      RowBox[{"k", " ", "R"}]}], "]"}]}], 
   RowBox[{"k", " ", "R"}]], "-", 
  RowBox[{"SphericalHankelH1", "[", 
   RowBox[{
    RowBox[{"1", "+", "n"}], ",", 
    RowBox[{"k", " ", "R"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.915292798525529*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ortogonalidad", "Subsubsection",
 CellChangeTimes->{{3.9136992256963053`*^9, 3.9136992290157957`*^9}, {
  3.91529272997859*^9, 3.9152927310766497`*^9}, {3.9228714217218556`*^9, 
  3.922871426123512*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9228716853534517`*^9, 3.922871691390088*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9228716919929447`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Pfunc", "[", 
         RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}], ".", 
        RowBox[{"Pfunc", "[", 
         RowBox[{
          RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], "]"}]}], 
       " ", 
       RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"phi", ",", "0", ",", 
        RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9228714285108547`*^9, 3.922871430336339*^9}, {
  3.922871478994754*^9, 3.9228716113653216`*^9}, {3.922871660575534*^9, 
  3.922871666055239*^9}, {3.9228717141173697`*^9, 3.9228717520521913`*^9}, {
  3.9228720002630477`*^9, 3.9228720208977294`*^9}, {3.922872352420367*^9, 
  3.922872352810033*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", "12.56637061457199`", "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.188790204552997`"}], ",", "4.18879020500025`", ",", 
         RowBox[{"-", "4.188790204552997`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"2.5132741243097128`", ",", 
         RowBox[{"-", "2.5132741208185148`"}], ",", "2.5132741229082916`", 
         ",", 
         RowBox[{"-", "2.5132741208185148`"}], ",", "2.5132741243097128`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.7951957969887677`"}], ",", "1.795195802111004`", ",", 
         RowBox[{"-", "1.7951958017542016`"}], ",", "1.7951958021701289`", 
         ",", 
         RowBox[{"-", "1.7951958017542016`"}], ",", "1.795195802111004`", ",", 
         RowBox[{"-", "1.7951957969887677`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"1.3962634021554243`", ",", 
         RowBox[{"-", "1.396263401603147`"}], ",", "1.3962634023763483`", ",", 
         RowBox[{"-", "1.3962634045667592`"}], ",", "1.3962633960817952`", 
         ",", 
         RowBox[{"-", "1.3962634045667592`"}], ",", "1.3962634023763483`", 
         ",", 
         RowBox[{"-", "1.396263401603147`"}], ",", "1.3962634021554243`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.1423973305281516`"}], ",", "1.1423973286386664`", 
         ",", 
         RowBox[{"-", "1.1423973288703932`"}], ",", "1.1423973287837683`", 
         ",", 
         RowBox[{"-", "1.142397328658855`"}], ",", "1.1423973288579072`", ",", 
         RowBox[{"-", "1.142397328658855`"}], ",", "1.1423973287837683`", ",", 
         RowBox[{"-", "1.1423973288703932`"}], ",", "1.1423973286386664`", 
         ",", 
         RowBox[{"-", "1.1423973305281516`"}]}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.92287175926372*^9, {3.922872001790261*^9, 3.9228720231234484`*^9}, 
   3.9228723537007403`*^9, 3.9229392782824917`*^9, 3.9229447809878874`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z1", "[", 
      RowBox[{"m", ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], "//", "MatrixForm"}], "//",
   "N"}]], "Input",
 CellChangeTimes->{{3.9228718964757957`*^9, 3.922871910773039*^9}, {
  3.9228720056829915`*^9, 3.92287203337064*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", "12.566370614359172`", "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4.1887902047863905`"}], ",", "4.1887902047863905`", 
         ",", 
         RowBox[{"-", "4.1887902047863905`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"2.5132741228718345`", ",", 
         RowBox[{"-", "2.5132741228718345`"}], ",", "2.5132741228718345`", 
         ",", 
         RowBox[{"-", "2.5132741228718345`"}], ",", "2.5132741228718345`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.7951958020513104`"}], ",", "1.7951958020513104`", 
         ",", 
         RowBox[{"-", "1.7951958020513104`"}], ",", "1.7951958020513104`", 
         ",", 
         RowBox[{"-", "1.7951958020513104`"}], ",", "1.7951958020513104`", 
         ",", 
         RowBox[{"-", "1.7951958020513104`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"1.3962634015954636`", ",", 
         RowBox[{"-", "1.3962634015954636`"}], ",", "1.3962634015954636`", 
         ",", 
         RowBox[{"-", "1.3962634015954636`"}], ",", "1.3962634015954636`", 
         ",", 
         RowBox[{"-", "1.3962634015954636`"}], ",", "1.3962634015954636`", 
         ",", 
         RowBox[{"-", "1.3962634015954636`"}], ",", "1.3962634015954636`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.1423973285781066`"}], ",", "1.1423973285781066`", 
         ",", 
         RowBox[{"-", "1.1423973285781066`"}], ",", "1.1423973285781066`", 
         ",", 
         RowBox[{"-", "1.1423973285781066`"}], ",", "1.1423973285781066`", 
         ",", 
         RowBox[{"-", "1.1423973285781066`"}], ",", "1.1423973285781066`", 
         ",", 
         RowBox[{"-", "1.1423973285781066`"}], ",", "1.1423973285781066`", 
         ",", 
         RowBox[{"-", "1.1423973285781066`"}]}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.922871904715012*^9, 3.922871911704784*^9}, {
   3.922872006683837*^9, 3.92287203405735*^9}, 3.922939282354245*^9, 
   3.922944784468889*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Pfunc", "[", 
         RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}], ".", 
        RowBox[{"BSinfunc", "[", 
         RowBox[{
          RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], "]"}]}], 
       " ", ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"phi", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<MultiDimensionalRule\>\""}]}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.922871950342306*^9, 3.922871978328805*^9}, {
   3.9228720120548315`*^9, 3.922872012247411*^9}, {3.922872043696725*^9, 
   3.9228720480294404`*^9}, 3.9228721327343616`*^9, {3.9228722362478333`*^9, 
   3.9228722366880045`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", "0", "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0", ",", "0", ",", "0"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9228720688008895`*^9, 3.9228721549551535`*^9, {3.9228722303666887`*^9, 
   3.9228722377472296`*^9}, 3.922872273572085*^9, 3.922872753014522*^9, 
   3.922939285052539*^9, 3.922944788367734*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Pfunc", "[", 
         RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}], ".", 
        RowBox[{"CSinfunc", "[", 
         RowBox[{
          RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], "]"}]}], 
       " ", ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"phi", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<MultiDimensionalRule\>\""}]}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.922872304373682*^9, 3.922872304746748*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", "0", "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0", ",", "0", ",", "0"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.922872309119026*^9, 3.9228727569141235`*^9, 
  3.9229392897303085`*^9, 3.9229447914717655`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"BSinfunc", "[", 
         RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}], ".", 
        RowBox[{"BSinfunc", "[", 
         RowBox[{
          RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], "]"}]}], 
       "/", 
       RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"phi", ",", "0", ",", 
        RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", 
      RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.922872369345978*^9, 3.922872390096654*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", "0.`", "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8.377580409806995`"}], ",", "8.377580409105994`", ",", 
         RowBox[{"-", "8.377580409806995`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"15.07964472857578`", ",", 
         RowBox[{"-", "15.079644746208443`"}], ",", "15.079644724911088`", 
         ",", 
         RowBox[{"-", "15.079644746208443`"}], ",", "15.07964472857578`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "21.542349651326248`"}], ",", "21.542349623870223`", 
         ",", 
         RowBox[{"-", "21.54234962525922`"}], ",", "21.542349621050427`", ",", 
         RowBox[{"-", "21.54234962525922`"}], ",", "21.542349623870223`", ",", 
         RowBox[{"-", "21.542349651326248`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"27.925267881198707`", ",", 
         RowBox[{"-", "27.925268033818774`"}], ",", "27.925268041061162`", 
         ",", 
         RowBox[{"-", "27.925267992659904`"}], ",", "27.92526809133517`", ",", 
         RowBox[{"-", "27.925267992659904`"}], ",", "27.925268041061162`", 
         ",", 
         RowBox[{"-", "27.925268033818774`"}], ",", "27.925267881198707`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "34.27191984557915`"}], ",", "34.271919870128436`", ",", 
         RowBox[{"-", "34.271919835270864`"}], ",", "34.27191988588801`", ",", 
         RowBox[{"-", "34.27191971709251`"}], ",", "34.27191985976568`", ",", 
         RowBox[{"-", "34.27191971709251`"}], ",", "34.27191988588801`", ",", 
         RowBox[{"-", "34.271919835270864`"}], ",", "34.271919870128436`", 
         ",", 
         RowBox[{"-", "34.27191984557915`"}]}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.922872393149455*^9, 3.922872761540554*^9, 
  3.9229392944196777`*^9, 3.9229447965989337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z2", "[", 
      RowBox[{"m", ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], "//", "MatrixForm"}], "//",
   "N"}]], "Input",
 CellChangeTimes->{{3.922872450656804*^9, 3.9228724507062187`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", "0.`", "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8.377580409572781`"}], ",", "8.377580409572781`", ",", 
         RowBox[{"-", "8.377580409572781`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"15.079644737231007`", ",", 
         RowBox[{"-", "15.079644737231007`"}], ",", "15.079644737231007`", 
         ",", 
         RowBox[{"-", "15.079644737231007`"}], ",", "15.079644737231007`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "21.542349624615724`"}], ",", "21.542349624615724`", 
         ",", 
         RowBox[{"-", "21.542349624615724`"}], ",", "21.542349624615724`", 
         ",", 
         RowBox[{"-", "21.542349624615724`"}], ",", "21.542349624615724`", 
         ",", 
         RowBox[{"-", "21.542349624615724`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"27.925268031909273`", ",", 
         RowBox[{"-", "27.925268031909273`"}], ",", "27.925268031909273`", 
         ",", 
         RowBox[{"-", "27.925268031909273`"}], ",", "27.925268031909273`", 
         ",", 
         RowBox[{"-", "27.925268031909273`"}], ",", "27.925268031909273`", 
         ",", 
         RowBox[{"-", "27.925268031909273`"}], ",", "27.925268031909273`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "34.27191985734319`"}], ",", "34.27191985734319`", ",", 
         RowBox[{"-", "34.27191985734319`"}], ",", "34.27191985734319`", ",", 
         RowBox[{"-", "34.27191985734319`"}], ",", "34.27191985734319`", ",", 
         RowBox[{"-", "34.27191985734319`"}], ",", "34.27191985734319`", ",", 
         RowBox[{"-", "34.27191985734319`"}], ",", "34.27191985734319`", ",", 
         RowBox[{"-", "34.27191985734319`"}]}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.922872451331708*^9, 3.922939298909005*^9, 
  3.9229448001076574`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"BSinfunc", "[", 
          RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}], ".", 
         RowBox[{"CSinfunc", "[", 
          RowBox[{
           RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], "]"}]}], 
        "/", 
        RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"phi", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9228724706122603`*^9, 3.9228725122026*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", "0", "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0", ",", "0", ",", "0"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.922872490972679*^9, 3.9228725314979153`*^9, 
  3.9228727292954855`*^9, 3.922939325062787*^9, 3.9229448316346684`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"CSinfunc", "[", 
          RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}], ".", 
         RowBox[{"CSinfunc", "[", 
          RowBox[{
           RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], "]"}]}], 
        "/", 
        RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"phi", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9228725504064636`*^9, 3.9228725513752832`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", "0", "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8.377580409806995`"}], ",", "8.377580409105994`", ",", 
         RowBox[{"-", "8.377580409806995`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"15.07964472857578`", ",", 
         RowBox[{"-", "15.079644746208443`"}], ",", "15.079644724911088`", 
         ",", 
         RowBox[{"-", "15.079644746208443`"}], ",", "15.07964472857578`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "21.542349651326248`"}], ",", "21.542349623870223`", 
         ",", 
         RowBox[{"-", "21.54234962525922`"}], ",", "21.542349621050427`", ",", 
         RowBox[{"-", "21.54234962525922`"}], ",", "21.542349623870223`", ",", 
         RowBox[{"-", "21.542349651326248`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"27.925267881198707`", ",", 
         RowBox[{"-", "27.925268033818774`"}], ",", "27.925268041061162`", 
         ",", 
         RowBox[{"-", "27.925267992659904`"}], ",", "27.92526809133517`", ",", 
         RowBox[{"-", "27.925267992659904`"}], ",", "27.925268041061162`", 
         ",", 
         RowBox[{"-", "27.925268033818774`"}], ",", "27.925267881198707`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "34.27191984557915`"}], ",", "34.271919870128436`", ",", 
         RowBox[{"-", "34.271919835270864`"}], ",", "34.27191988588801`", ",", 
         RowBox[{"-", "34.27191971709251`"}], ",", "34.27191985976568`", ",", 
         RowBox[{"-", "34.27191971709251`"}], ",", "34.27191988588801`", ",", 
         RowBox[{"-", "34.271919835270864`"}], ",", "34.271919870128436`", 
         ",", 
         RowBox[{"-", "34.27191984557915`"}]}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9228725531227684`*^9, 3.922872766818415*^9, 
  3.922939326255642*^9, 3.922944832746785*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z3", "[", 
      RowBox[{"m", ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], "//", "MatrixForm"}], "//",
   "N"}]], "Input",
 CellChangeTimes->{{3.922872450656804*^9, 3.9228724507062187`*^9}, {
  3.922872580068553*^9, 3.9228725804133673`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", "0.`", "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8.377580409572781`"}], ",", "8.377580409572781`", ",", 
         RowBox[{"-", "8.377580409572781`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"15.079644737231007`", ",", 
         RowBox[{"-", "15.079644737231007`"}], ",", "15.079644737231007`", 
         ",", 
         RowBox[{"-", "15.079644737231007`"}], ",", "15.079644737231007`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "21.542349624615724`"}], ",", "21.542349624615724`", 
         ",", 
         RowBox[{"-", "21.542349624615724`"}], ",", "21.542349624615724`", 
         ",", 
         RowBox[{"-", "21.542349624615724`"}], ",", "21.542349624615724`", 
         ",", 
         RowBox[{"-", "21.542349624615724`"}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"27.925268031909273`", ",", 
         RowBox[{"-", "27.925268031909273`"}], ",", "27.925268031909273`", 
         ",", 
         RowBox[{"-", "27.925268031909273`"}], ",", "27.925268031909273`", 
         ",", 
         RowBox[{"-", "27.925268031909273`"}], ",", "27.925268031909273`", 
         ",", 
         RowBox[{"-", "27.925268031909273`"}], ",", "27.925268031909273`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "34.27191985734319`"}], ",", "34.27191985734319`", ",", 
         RowBox[{"-", "34.27191985734319`"}], ",", "34.27191985734319`", ",", 
         RowBox[{"-", "34.27191985734319`"}], ",", "34.27191985734319`", ",", 
         RowBox[{"-", "34.27191985734319`"}], ",", "34.27191985734319`", ",", 
         RowBox[{"-", "34.27191985734319`"}], ",", "34.27191985734319`", ",", 
         RowBox[{"-", "34.27191985734319`"}]}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.922872580615307*^9, 3.9228726062950897`*^9}, 
   3.9229393262787046`*^9, 3.9229448327765102`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Campo Sintetizado", "Section",
 CellChangeTimes->{{3.922944902873732*^9, 3.9229449116889615`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"acoeff", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numberOfModes", "=", "5"}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "n"}], ")"}], "^", 
       RowBox[{"Abs", "[", "m", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.922945121181927*^9, 3.922945139457967*^9}, {
  3.9229461011981134`*^9, 3.922946137624905*^9}, {3.922946168371408*^9, 
  3.9229461734842215`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "27"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", "1", ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "27"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "256"], ",", 
     FractionBox["1", "64"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "64"], ",", 
     FractionBox["1", "256"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3125"], ",", 
     FractionBox["1", "625"], ",", 
     FractionBox["1", "125"], ",", 
     FractionBox["1", "25"], ",", 
     FractionBox["1", "5"], ",", "1", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "25"], ",", 
     FractionBox["1", "125"], ",", 
     FractionBox["1", "625"], ",", 
     FractionBox["1", "3125"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9229461384157667`*^9, 3.922946173774103*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"acoeff", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9229461411144433`*^9, 3.9229461471577253`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "4"], ",", 
         FractionBox["1", "2"], ",", "1", ",", 
         FractionBox["1", "2"], ",", 
         FractionBox["1", "4"]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "27"], ",", 
         FractionBox["1", "9"], ",", 
         FractionBox["1", "3"], ",", "1", ",", 
         FractionBox["1", "3"], ",", 
         FractionBox["1", "9"], ",", 
         FractionBox["1", "27"]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "256"], ",", 
         FractionBox["1", "64"], ",", 
         FractionBox["1", "16"], ",", 
         FractionBox["1", "4"], ",", "1", ",", 
         FractionBox["1", "4"], ",", 
         FractionBox["1", "16"], ",", 
         FractionBox["1", "64"], ",", 
         FractionBox["1", "256"]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "3125"], ",", 
         FractionBox["1", "625"], ",", 
         FractionBox["1", "125"], ",", 
         FractionBox["1", "25"], ",", 
         FractionBox["1", "5"], ",", "1", ",", 
         FractionBox["1", "5"], ",", 
         FractionBox["1", "25"], ",", 
         FractionBox["1", "125"], ",", 
         FractionBox["1", "625"], ",", 
         FractionBox["1", "3125"]}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.922946147705758*^9, 3.922946176540524*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bcoeff", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numberOfModes", "=", "5"}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"n", "^", "2"}]}], ")"}], "^", 
       RowBox[{"Abs", "[", "m", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9229461990182395`*^9, 3.9229462094747567`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "16"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "729"], ",", 
     FractionBox["1", "81"], ",", 
     FractionBox["1", "9"], ",", "1", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "81"], ",", 
     FractionBox["1", "729"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "65536"], ",", 
     FractionBox["1", "4096"], ",", 
     FractionBox["1", "256"], ",", 
     FractionBox["1", "16"], ",", "1", ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "256"], ",", 
     FractionBox["1", "4096"], ",", 
     FractionBox["1", "65536"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "9765625"], ",", 
     FractionBox["1", "390625"], ",", 
     FractionBox["1", "15625"], ",", 
     FractionBox["1", "625"], ",", 
     FractionBox["1", "25"], ",", "1", ",", 
     FractionBox["1", "25"], ",", 
     FractionBox["1", "625"], ",", 
     FractionBox["1", "15625"], ",", 
     FractionBox["1", "390625"], ",", 
     FractionBox["1", "9765625"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.922946210330207*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bcoeff", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9229461411144433`*^9, 3.9229461471577253`*^9}, {
  3.922946221213826*^9, 3.9229462212994556`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "16"], ",", 
         FractionBox["1", "4"], ",", "1", ",", 
         FractionBox["1", "4"], ",", 
         FractionBox["1", "16"]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "729"], ",", 
         FractionBox["1", "81"], ",", 
         FractionBox["1", "9"], ",", "1", ",", 
         FractionBox["1", "9"], ",", 
         FractionBox["1", "81"], ",", 
         FractionBox["1", "729"]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "65536"], ",", 
         FractionBox["1", "4096"], ",", 
         FractionBox["1", "256"], ",", 
         FractionBox["1", "16"], ",", "1", ",", 
         FractionBox["1", "16"], ",", 
         FractionBox["1", "256"], ",", 
         FractionBox["1", "4096"], ",", 
         FractionBox["1", "65536"]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "9765625"], ",", 
         FractionBox["1", "390625"], ",", 
         FractionBox["1", "15625"], ",", 
         FractionBox["1", "625"], ",", 
         FractionBox["1", "25"], ",", "1", ",", 
         FractionBox["1", "25"], ",", 
         FractionBox["1", "625"], ",", 
         FractionBox["1", "15625"], ",", 
         FractionBox["1", "390625"], ",", 
         FractionBox["1", "9765625"]}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9229462222179193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lambda", "=", "1."}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"1", " ", "lambda"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"lambda", "/", "50"}]}], ",", " ", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"theta", "=", 
        RowBox[{"0", " ", "Degree"}]}], ",", 
       RowBox[{"phi", "=", "0"}], ",", 
       RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
     RowBox[{"Efieldsint", "[", 
      RowBox[{
      "k", ",", "r", ",", "acoeff", ",", "bcoeff", ",", "theta", ",", "phi", 
       ",", "numberOfModes"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9229462433398886`*^9, 3.9229462689126544`*^9}, {
  3.922946390399673*^9, 3.9229463904514666`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.08239344605732198`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.02562599889638991`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.0332113094159339`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.09309197436289092`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.11459904471404124`"}], "+", 
    RowBox[{"0.004874809678321695`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.922946269542892*^9, 3.92294630724809*^9, 
  3.922946346686967*^9, 3.9229463910606785`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lambda", "=", "1."}], "}"}], ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "=", 
         RowBox[{"50", " ", "lambda"}]}], ",", 
        RowBox[{"I0", "=", "1"}], ",", 
        RowBox[{"l", "=", 
         RowBox[{"lambda", "/", "50"}]}], ",", " ", 
        RowBox[{"k", "=", 
         RowBox[{"2", " ", 
          RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
        RowBox[{"eta", "=", 
         RowBox[{"120", " ", "Pi"}]}], ",", 
        RowBox[{"phi", "=", "0"}], ",", 
        RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
      RowBox[{"PolarPlot", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Efieldsint", "[", 
           RowBox[{
           "k", ",", "r", ",", "acoeff", ",", "bcoeff", ",", "theta", ",", 
            "phi", ",", "numberOfModes"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"theta", ",", 
          RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.922946373170294*^9, 3.922946412637396*^9}, {
  3.9229464923946357`*^9, 3.922946501903433*^9}, {3.922946624119236*^9, 
  3.9229466260084295`*^9}, {3.923024441995098*^9, 3.9230244430204678`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
qeJ3A/7f/2Vr/h+aWXo5
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{3.922946403090849*^9, 3.922946461718297*^9, 
  3.922946530751147*^9, 3.922946651222131*^9, 3.9230244659578114`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lambda", "=", "1."}], "}"}], ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "=", 
         RowBox[{"50", " ", "lambda"}]}], ",", 
        RowBox[{"I0", "=", "1"}], ",", 
        RowBox[{"l", "=", 
         RowBox[{"lambda", "/", "50"}]}], ",", " ", 
        RowBox[{"k", "=", 
         RowBox[{"2", " ", 
          RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
        RowBox[{"eta", "=", 
         RowBox[{"120", " ", "Pi"}]}], ",", 
        RowBox[{"phi", "=", "0"}], ",", 
        RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
      RowBox[{"PolarPlot", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Efieldsint", "[", 
           RowBox[{
           "k", ",", "r", ",", "acoeff", ",", "bcoeff", ",", "theta", ",", 
            "phi", ",", "numberOfModes"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"theta", ",", 
          RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.922946373170294*^9, 3.922946412637396*^9}, {
  3.9229464923946357`*^9, 3.9229465125746393`*^9}, {3.9229465516880703`*^9, 
  3.922946593486939*^9}, {3.9229466291758575`*^9, 3.9229466307366977`*^9}, {
  3.9230244481954236`*^9, 3.923024449130973*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{3.922946543355077*^9, 3.9229465745825863`*^9, 
  3.9229466067781043`*^9, 3.9229466637676215`*^9, 3.9230244788640633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot3", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lambda", "=", "1."}], "}"}], ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "=", 
         RowBox[{"50", " ", "lambda"}]}], ",", 
        RowBox[{"I0", "=", "1"}], ",", 
        RowBox[{"l", "=", 
         RowBox[{"lambda", "/", "50"}]}], ",", " ", 
        RowBox[{"k", "=", 
         RowBox[{"2", " ", 
          RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
        RowBox[{"eta", "=", 
         RowBox[{"120", " ", "Pi"}]}], ",", 
        RowBox[{"phi", "=", "0"}], ",", 
        RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
      RowBox[{"PolarPlot", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Efieldsint", "[", 
           RowBox[{
           "k", ",", "r", ",", "acoeff", ",", "bcoeff", ",", "theta", ",", 
            "phi", ",", "numberOfModes"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"theta", ",", 
          RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.922946373170294*^9, 3.922946412637396*^9}, {
  3.9229464923946357`*^9, 3.9229465159437113`*^9}, {3.922946573577133*^9, 
  3.922946603460944*^9}, {3.9229466348876643`*^9, 3.9229466370478773`*^9}, {
  3.923024453539076*^9, 3.9230244539156923`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {RGBColor[1, 0.5, 0], LineBox[CompressedData["
1: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
cKBX8P20Ex1d9YXZL1z1wdpy37Ab++lk3p/035nhg0jZLL+6huwLM3h+Lpv4
oJ/WpehlDQb6nEo6erbZG90VzyVetSaQT3jQm73OGy/ortVM9iXwo8S8SOAd
b6TZdfwjIsm8kvRzRvCiN755sOBIP0Pgl6Y6vflEb8wweFQhPEbgxPcr58OV
vfHtTsN3flF+6DCsweDN98Jfx8Z3VZf54/z+3BfUk14ovE5IbHWtP9rE8S2W
pnjhpQ1PvtE7/bEvMsxkIdwLqWU/CmHOHzUvsF9sNPXCPfWydUzNABzWORRY
Rvo0h/01f3VPAPp527pu1vLE7onk3vOsQXjkdcy3NnlPVG2MKuDcFIQhgym2
bjs90V1Q7b8EmSD8EmwbrsTliUK+LFVMuyDsD/dfujnogbv/ZfFfLw5CUdcD
R3MCPdBvJGKaSzsYEySrTxQmuuOK8Hs24/gQ/CQnd9c3yB2fPtGbHzgVgpVp
QUUrbu7ovrYxhSgNwdykmMkuVXe0/Xz9wNGeEHR4mMUsnnHDhuzI6Me7QrF1
nSP+cnbDHZN0qaW+UCx8arrPzsAN44pZt0ZPhaL0xGLoIXk3PNXr4/H5byhG
Ow56+K92Q/7gUzldUmF4PCjyr8U9V0wXf/nO4UAY/ndWmNtijStK7Ygb15IK
R3632Gqe7y5496Zzjat2OM6l3vhaOuKCLp5zEsH24ZgSuPGR8y0XNB7+WByb
GI6dhy1F79uTeTBHOHF7Tzi+VrrXRMl2ximtz0cV9kWgXNs1pXUzjrjXtaBQ
91UEhn2mj+v0O2LvQ1N7p3cRuG2psdC0zhFXtxuvoX2JwKNX0r0+pjqi/LX9
C4yVCNQ+2S7mL+yIJfla+zh2RuK6vO4zrroO6Hfq/tVc/0hUFj7+fs9OBww/
/XzdlohI3Ng6uPcNhwPKFHoFnYmLxCMVbFv7n9ojV6/tofDMSDx1bcMsq7s9
xpRlXy6rjMTGQxEWhUF2+Pruwc7lT5EYNqG3Qd7KDr0+66UNfI/ESJp11YU9
dminKKl5cTESB8rqhKTHbVEi6RE/P3cUjid3crV+sMGD2hMSXtJReOLzPwGL
KSuUND5zMIUWhXh8VeHecit8+5HtzPHAKFwxPu4yzLBCz51f29MiovC0sC83
8dYSw1gX2e0ORuF/1/9tPzpkgeNxLW81CqKwaMeKvX2tGU71HWc1ehqFuo3/
1jTsN8M/wv5bDZ5HoX/jrvA5RTMcnc/S3Dschas9dijfvWqK39TWbJ94F4Ue
cMG+5owJVln9/nt8MQp5XtgrMO1M0F1K5wIfCxPZlxJrlrlN0B+fpadwMHGS
TfJ5QrIxHolcNarFz0TRcDkNCT8jPBBRovJFgolX5W20XESNUCWwqWFOholu
rzaquw8bol536sSEPBPDfnC4D5iTbPesJl+DiWIV+ja3ZQ0wJ8vHTtOSias6
WpV//wcYPjI9YBnKxOBX9i6caoDx9xkaepFMZKg2J3Vd0cV9I3YbxKOZaPV6
/H1sog6u4d3wsTqJiRpWOdxpMlo4v3t3OMtxJmbs0xKlnN6HSlVyfX6nmLj2
cumxxRVNnNPcq1ifw0SPlvKqqH4NnJpdc2vPOSa+Ox1TdSZeDev9PqhplDLR
7HTtePaEKtmHfeLhrWCi9Z+P0i6Wqhh8RC2+5xoTT1/UOWK0VQUv3GCf2nqb
iQo46xyRqowbJeKeV1Qx0fVywePgL0r4Xmmz9I57TOSRTN08VL8X08QkPw7X
MlExvrrNXHwvcrH+09tST+q5++rVnGOK6LNuZMSkkYkX45QOWFfJ427zyfuB
zUz8hI4nZw7uQfl/K+99WpmYWihNGFrJ4aHw36r67eT5BxJfiXyQQRf6my3d
/zHJuTTF5eA5adzVtOdzQScTHfMytfMtpLDHQYtm95SJQ55dWkF/d6FpQX/M
124mfuW8w7F0UwJPKKmIJfQwcf3xq9bWvuLI3M3rMdPLxPvV/E8Y/DtRWeuw
sMVzJh6FHxGT77ZjgCz7lkcDTAzhoMAbo60o0p5v+XKQPA87i/6Rsi0oYt07
O/KCiQ+Veb8OcAghfOBfeTzExKRr256MERvxyEHF6AvDTNwb+t6ion09Gs3F
23m9ZGJJ2OznYIt16CR84wT7KyayaHIXSHBxYQfrouRZku86G5QefcyGSW+5
t60fYWLh+197zNYuNx1XXQyJJjm9tuH3+qPfmyi9roKtJN/+aJsiyDHelDIq
JbhIslS05VTC+jZdjw8TwcKvST26dmT/5f2km9QXvUWC5POj7u9bj//SfT2q
v12I5B73Cd69a1bBjYKtifPk+9Q23yBvi9WwedB2bx3J31XyVlxPrIWy7AKD
AJKb+LLfrvHnh+Cp3VUsJBsv33rZyCkAPD9vJB8h97/H5bOf4VVBiH2gVjVD
njeBTuPONdsM1C8u5gYkn35iZnplWhguflpndYjU53CETElIxjaA2P7GClI/
rV0b+n8I7IDgsydKakl9DZPOzmTQxUDU7QxrNal/TKnE9OzdnXDzUv34WTI+
Sh3+a8VZJWDHDBgx+pk47vv8spj9LiAEBpVFyHj+Z9D468NFSaCsXLxfT8a7
PDbdM3xWCjoI9QFj0g+jd1ayHx6Thfx6bxYh0j+dgee4Y4Z3w15Xux0+pL80
3+6ceL9rD9zb+mL5FOm/F9yDmwZQAY6Xq2251Ubev4Dgc7vSFcFEbSG4qIWJ
tFqv9SpyeyGwbn35/kdkfvmVcLolVgnWS3xcmSDvwzatEC7YpgxyYiuq8XVM
3Dw/D0dblOGp7Y60P/dJv/31f8XkUYVH4TOXasn79vTp0LETF9RhLHfcU6mc
PH9mcIeqvgYkfM8fFS4h1wtTHhdNaoDe8vKXmYvk/gJ5jS7I7oNbzxJ/ORYw
MSJ+fbdGtTYECNuWipH54/65F44vzHXgptBk5OWj5Hnz5vPlx3XgJasVH18q
Ge8zvlzcPADiv1/++X/+4dIynhW/owdBHawUSTJ/rYx/N7Zc1AP1/UpJmwKZ
+Mu89T8LI30QFVb++oPBxLKIoc6eIX0I4/grfcCLieso+r7jfw1geExxtsGC
1Fv6WvkDY0MYb4wfEjMh/fpulTztlCH4XNG8G63PxPpImWJ5USNQkJw5+Umd
iXyGtQ9O6xoDT+h76bVkPk6RTHostN8UDM928Gn9icKdYffrxupMwdjtlXTB
fBSekTvIG/HPFKg2N85OzURhzJBt/1ymGdw5ZtfnPBGFboFhK85F5nDmQhkz
oTMK0ynJrI73LeEPJaxwMT8Km9VPhKX/toTEhpHmwJwobAwP7k/aZwXvUyZf
dB6LwhqbjMk7jVbASj2hST8QheuftHPtbraGzTHMd3PUKJwZ4F8QaLAFvT4p
txyyPoquS3BN/mcLMWW2v0/siMKCLQOCNmJ2wD/4RTJhcxSqfnpj+4NuB4Sw
ebvMmiiU/xK3lzplByGXWaQmPkRiXkGObv4He9Df6jE3fDkSZ+8LNbRyOECM
XKzFv3OROJ3jSu+QcAB5xpOCLdmR6F3XdM+aRq7Pr7orezASeVaPWFNHHCB3
RUWo1T0SfdPkco+2O0Jg+gHHuXWReJnjTBf3hCPIn3jP9OeIxNeX3z6jrThC
zNo/q14sRSA3ryp7jpoTEIF2q/OnI5DFpETsfakTtBzP5LrZHIHU7VtL/OOd
oUbXp8YyKgKbu+NefF7lCka18c+6i8KRYtW4dH6zK8S8ebrGKSMc+yvThcUU
XME54JxGHzMc1QXjzt/1dIX3UV9PV1mEo1/8kPzMXVeIUtn1Z/3vMMz3Xn47
5O4GQ05CTqfsw/BvqP1h1jA34NiaerNUOwy/Rpx5wXHEDeTKT9ncJ/u9WQEd
hfxrbqAwcCXy6XIo8hopFU4vuMF8KyOi61oofvVvng045g537flfWK0KxYu7
RH4qFrlD4Ly1pNqXEBQWjt43cNMdYo++bto+FIJHl4/r3Ox1h1P3GA2zN0Lw
1pJr0K2NHqAl9yEx2y0Eb/+xKd1y1gOkV+Ld190JxjTrBQfBQ55gw2VSH0cN
wudP1A1aTnhCNc1HR9QmCMsYs9bOBZ6QbLCHv2tfEHrWG5yUv+sJKZ9ZDZU3
BqHY8rFD1ROesN9CkMvicSDuHlT9rQZeIBN1ilElH4g/fx83uDvlBREuZVNu
bAFoOaFe1sHmA5I5vpknOgncuiv45H4eH2CcFpreWEvg3JjBX0FBHzgv9ojt
xv//b3jQsl1F0gfSzwX0rj5MoFyzRMRnUx+4djBKO1KDQLWaj2MZmT7A/Lt/
ZHclA8+Pzd2a5PSFmp6elnsFdNzluMngOp8vbP9qq7wvk44UutfeCCFfSHxZ
n9gbR8fkrx6JC5K+QLtzu1bBjY6/IV1gxdgX8hrYO+qE6IgBE5qGqb7gUJ5e
suo8DT0/brX4tooCp5q0liOuU3H8V0JeG1lz+53F03iLqXjj5I30Qi4KsP3V
fl1LztU1Bt5vnNZTYPBm3pgWOR9WDbQl/t5Bvt9uFPhdn4q/9Q+HiOhTIPT7
Yu+W1xT0LDhCVzOmQMAAV8DFHnL+dKNWu5hTYDY1TFW5lYK+AXKNFfYUiBMK
1UmrpCDHUvXKSRoFXt1Pj+iLp+DWB49YD6ZRYLS7yuuvMAXbui1e/s6kwNPy
1G0+fBTcstzulHCKAkuMTK5uNgreG9c9kJNPgYmyErHSl744wW9qsaGSAkSS
DOfMQV/M85toC+ylAOX64hmZZz74Ib9nqGonFQIaHYveHPDGJptVv49JU0Eq
8kvqa39vHDTfJRAqT4WODFbmV3tyzrRaJW+1jwrK5cDnJemNXc6bQ6MdqLBt
YucHjV4vVHHNaQ1JpcLjq6JR9VJeGKGx9lHKLBUEQhcYzu88MOdJ6TvGTyoc
D556eKTHA02408as/lKh+w/hXl/vgal7xocVuWlwXdNozOq0B07cDJIylqQB
9/6y1R+MPXD4BaXyoC8NDn+U6DtX6Y7vcvIM1wzSYDylzN881g019xmNO76m
gcRWBbs4hhu+3evXeukdDSISL9iU27thAfuB4zrfafDnSZnaym435DFysT7A
R4eTrSlJp8ddUfiBVsx7czos/WEvETB3RcOgBeu2Bjo09z+UsRN0wbL9F292
tdJh/+43Rl2rXPB8Fvum7k46cHK0ENqzzriolM3dOEyH8p6PI/86nNFQ8EKL
xQ86/MlKes4R54x976T8p2QYkPB09ta7ISfsKZXxj1JkwHX6XEdFqxOmpYuf
nVdjwDNWxX8+t52wM0H45JAhA7RdwbA83QkD1Ze0Rb0ZIBT5L+20ihMOSHVB
/EkGSLuslA6ddMQjrtFxU7kMaLvUWSmb4IjK/Dhjfo4B7fhEMNLPETuk/gx8
usKAmzWxX4Z0HTGN5eHp/AcMyFyYP84z54CFf1xuX2lggIBzbcmfVw5IMJiF
l5oZsC+o+vXLDgfMfO+hsb+LAZUoVMIsdkD1U4v/RY8xYK3QB2seawc8vBJX
teEdA47xtqrkajhgif7jjZenGOAg9Eh9rYQD0i7RK3K+MuBe27vLLxbtMaM0
L69xFQG2HkRlf4U9dq9mK9ouRkD2i8IHYf/scEd4XPsjCQLkap/JyH6yww9B
p9Y4SBPwReo97eWAHd5vlnTUVyBgsbeXKVBph5c/hHjYahNQdPSdyW9Hcs6s
+3HTDwignXfa4aRrh1q/dwuFGBBwwLMxqFTaDsV7w+/qmRGw21cvzHjRFp9v
ujLO60hAXd9fVSVLW/Qccbmb60yAwqGCDjVRWwz6YvWA3Y383pL1j13zNuj8
VufHbS8Cfs0aibWft0HJRMPFaR8CmJxml6PDbPBa7+WedVQCAjNf4XoDG/SL
7D62gyBgtPXmR96P1ui/Xt+Qx5+A3v5Xh8IarFHlvWfEZAD5e9PEs/osa4y+
ZDngHkLAVuf11dvUrFGOnjyxEEqASsbVcSUua8y6tmXjoXAC7BcPfVN9bYUb
5EfOukQRkFtz6dfqI1bIWAqaamISYNS1fGy1vRUWectn8kUTwLJqwem7qBXO
dPj6m8UQoD1/ETtnLTHinkBYYCwBQbmX1LIbLVEtT/NYVBwBa7t2ShmesMSQ
80XX6PGkXtt7/r3zsMTc85MPtRMI4N7dqsiUscRLzWdvLpOsJJu5+9svC9zn
tCmqPJGAex58dJ8OC5z0LPujlkSAGO2iZf1pC9xjQajdJvnWxUGPNXRyPdtV
hO8A+X3mOU6TvRaoruBT5EKyehxf5/5/5vhCWftWGsmB98+LnOk2x80qZ02K
SO7veBJTUWiOq2q/e54nOW7OwfVGoDk6FD58n0yyuSr3vlJ1czxP13xt9f/v
E8NFWRzmKHz8gsYqko9svLsS1m+Gw49+/ygi9/O54NQbg8tmyNymx7OD5NwV
n0drw81QzNoq4Rh5nofT7OKd2mZ44tZLrdfkedkPmR87yG2G1X4ZNoIkf7Qc
iJcZNsXewNd3VEm9BHh3xnSVmSLE69B0SD3/5iSyE0xTdN70iyZH6u149Evl
gp4pegZp3GMl4/HVaN/XQ+tMMV58o9uj/QQcz3/lyf7aBGtMDtkTZDw/Hv0U
ffiaCYbstXcmIgi4Kf9qOMjIBGUP8gc9CiNAhvu9yvB6ExTM3/iRlfSLj0MJ
of/GGPXKXYx0A8n1cvZIrgRjTDdb3qtO+u+MRiEt0NQYL/HV3RAi/Vn0rM7l
8UZj3Mb/LjqLQsCdZce45NtGOCJZ+1qS9PctKQa+SjLCI4/DVpV7EuAuKKCt
ZmGEz8b6mzxdSL1zce3XSUP8WPmkr9yC3G9176GDwoZorz358YApAaW/n8x9
mjLAA/0PLHSMyN8vkF3lVWOAPj/+akXrEKCDW/Rt7AyQOzqQ+lSegGslfOVH
0vWx8tKAzrQseT/YhQrEnfTReIua+IwkuV9rvjPdYvrItcch7u52AtaUE4O6
jXo4e2VHqjwvAdaHBLUtPwKeberOn1xD6hEYHDB2HNA89XTcUXZSD9md/2XI
Az49+Jbv9BKZD28r50ru18Wfx97XdU0zQGQ2QaaYRQfv65/90IMMeG46q6sh
ug8/+LSPUR4yoKhSIqikVRMfJjsXjd9jAH+A77JSgCbaBCT+unGNzIe2qTEt
VRrobmCqfoDMzwvVA7y1Jup4fajt4jYqA2pWRC9ciVPBKcXdD294MKDHSLvy
pqgKhtoM8uxxYsALi4K70x3KeJhrnIPVlAGbzkY7fBNUxgkFOU5WOQYcn+2+
4HN/L3ZSr/oenqeD/OCkJYVVHjmbCr+3xdPh4+21Jq2p4phSU166FEmHsB0X
5/ZN7sSRworHMkF0MKJ//7jHaCeGP5zdFupBB4mLOlYZHGL4MuORzpl9dDAZ
y/+rs3Ubyn3pWXPmDw2KfvqezQgTQJeU4yLu32jwTvPWKEVnAwb8Is4LfaSB
6L9fnbq867HvcFBh6jANmI25zSIUXqxkjR8Xf0CD19nmhrzs7LiqfOexR7do
oLpxebPK3VXYsU13q3s5DdItJ4lXbStNmvyM+wfP0GCVSLuqYu7PpuNx+7fy
nKRBErevreC/r02HUlckz6bSwEOF75Xh+HRTpV4N+7YkGlxxNc11P/OmqURC
evISkwbhla38+T87m3K7B6TDw2kwEH65t0vvrq6JdeXdL7E0SNW+LXL8ygvd
lQw5Z/9DNFB/FfOwmTapm+Yy9nYsgwbLoX29J5NmdF2Wtsk65tDggYlehZPt
vC6xR+pfawEN/Dyab2VO/tJ9ajiZd76SBo0JUyeqT7LAazEfPpMZUq/trnfX
VayHwzi1ZUcYHY7KLXuLndkJp7RKms/G0IH3F99hHkNxyOEfVWVLpkNnt7Bj
xjdxEHogkNeQRYcPTZ+K5e12QdPwndOVd8h+Iic2aetGaZC8Xv8PvtLh2mC6
QmHNHrLPEb706xcdVrdrX9waIg+3zgfQLv+jA9va2vlt4grA4vMwuHMd6e/z
caetzRUhy0P1QAjpH96r/6nerN8Ls9VWes0MBuxQjj3kcl0F6Gu3+x8OZgCK
8g4bcKuCvbqgu2IUA37eHoqmB6oCb86hYfdkBoSd81XWlVaDO7SbvwfJfiP9
x9is/lV12NN6SZrzIgPC2XjaatdowC/5grJdZQzQVaAteQVqQGW14HOZKgY8
nFH8KrNbE061vJS0+I8BTn8/bGi4sw9sqwu+jHcz4OTFEtnUDVrwPIS9nN7P
gF1hPruj9muBTg6foxzZf6yTus7eoKEN7Q4ezh3fGeBZ3pf4uUUHzv/wUF4W
IiA9Ye+N4DA9WP7sGvtHhAARyWCD2SI9iOno8ZoQJaDxS7h1QpcevH68cjNe
ioCYMA2um9L6kN0du1CvSr4vzPwT8U4fWj3De4Q1CTCoCxJW3mAAyH27iCD7
Db48S/UlPQNISbz/X9P/+4tbP0sKiw1gIPlR/AEbAkweXV/i9zCEorIrbPvs
yd/X2XpnIcMQXI9tWHpL9hu5LOtejz0wBHt91qV5sr8wD4wZuidoBJoPTD96
k/n13r3M9stGRrCNqOCv9ibrxSpGQBbTCJzp6qPbaWS94L/GHdxnBFNn9UJV
GQRUcZyQcWMxhs62TTzqfgSMTylpGykYQ+2naYclMv8X058fEDppDCkt458a
g8l8rjnVvVxvDMlbiiODyXpxj4/D6e0nY3jzLFnpKFlfXtc1mRabmUCobw/1
ZyQBorTJ4ZhYE9hM0wqyIevREUflKYtyE5jKWTTNJeuVjjrBITxoAjFfPv16
RPYb2xcvdbxjM4W1b3NiX5H1bffWw00VSqbQE7e1fYysf/b/thwmqKawJc73
TTdZH5dUWEq2ZptCa9xQewVZP78+sal72mQKectX40LI+pqZfdM9esYUag5e
+i1C1uPyAFfhTVvNQCFcyfQ+ybvTduTesjCDRK1EPy2yfvfcSnLTjTcDXn1w
v07yw5Q0jvYKM2DFTztXk/V/tJpFyeCFGZRgzmNLkkM1/WJr2M1Bc2nOMonk
vJMfwrcrm0NedUBNPsnJwxH3k6jm0JexmruYZMFtdR96ssxhi2miXRbJab66
F4SazMH8pmh2MMlnOuxiHb+YQ5fcfK8SyYkPhARShC1A50qhyHtyP2mf8/nK
zSzAh5OIP0Ly2+Q6noYYC7izTf8HN8kHVqyvt5VaQMyGx2cPkufzomw6ic8t
IEJEOWSU1CN5zROnGyyWUM/jd0iKZK8HQuXH5C2haWryjRepX15MzS4PL0vY
Rh/OP0Dquz/JK174mCUUBPPczyT1n189YNr1wBImHub6Msh4+d2o+fl3gxW0
btJP20zGc1ri5i0rIytQeMnRco/sL283fTqZEW0FnEIBw2Vk/ylwp1GodYh8
/vrPN4ukfyZHH3x/tMYaRhpiPTTI/jU09rnTNU1ruGqbxxtK9reyuwV3ahRa
g92fdwkM0p/GF452jXZZw94/p9uMSP/uUcC4kL/W4CB13feRLwEXwl3DDb1t
ACP2s1eQ/bhN6DP5Z9tsAccaiqcdyP6Womp519oWruZc4ttoR/bLt39i0gFb
8FGKXCVD9h/XAqJTWl/bwr93uMuW7C+Emlrt1ljbAW16MvwdeZ/D3lf0ZjHs
4MbnFw00NQLOx68O4kqyg4/3rNjEyflCMWhf9PNKO1iWcJ26ReaLT09OsNVx
2oPsj4Kpi2Q+4apw9n623R6udMsaHyDzjcS6XM5BVXsYuWjzfHkdAQ+q1rDc
p9uDrxpXuMgyA5qYqyrbmuzBIXU55ccgA2TbVvtxRzmAfGZXaEsvA3ZK9HvL
ZzhAs8vviWRy3kr/7+5qw2IHCPvFZdP5iAFztWlRup0OZJ4scS2pZMD42hiF
g2KOoIk+0gWJZH/Rz31PptsRRmf4DuZHM2CgTDzuz1tHCMhYfygznAHdUXaK
9QuOsGFpM9OczoCpH5VDG3c4wb4bmAkWDNCSbugQj3KC/hWVZxqbyPqwV+pY
p4AzXD8bqsR1lQ4/wsSy7G1c4NRhqeu2j2gw1OP+r+eGG3yW+ll6oo4G26/a
HLJrcgMui/FjXXdpEKhdeKmvxw2yBeZqbctoULB1cuzFdzdo1jj4IvoYDUZU
pox+ariDZflGV3dnGnz0DPRuaXeHQybc44xZKnwPlCq99c4DlEa+3N45TYVq
Wkpq/08PCBba5PfhLRX+PokMZ13jCS0cd8aSB8nnv0SdSZbzhLGpaLvlBios
v1sI/hftCVqiC5eVTlJBRjRtzGWtF5SftO2YVqIC7yVJC6q+N5z8ct973R4q
pHznh9Wu3pA7wdmiLUUF5Yulmc0h3pCl2LxYLUIF8fIdjKRz3sAedEiHh4MK
LIXM12u/ecNh5fOt1JcUCOPIshgo9wGvLa1JAgMUUBEIbGJt8gEL3hft3c8o
wJ9oL2816APxZoMjnm0USDzIxbWX3Rcy6+/Uvr5NgTaThSJzui805f7upmdQ
oNHon3C0AAUMhbv78lMo8D29NPa7KAXe6v7x7T9IgbSSo6LJchRYMb7STImm
gHuZ9Z0OYwqED75nfU6jwLfBJ7br48nvvg3v+qVLgeYpW0b5BAXYDpXmLS/4
QpF8ZAm0UEGJ95G435wvDB57bt7XQ4XhfVGKg1O+cLLAeTxylAqtTrNP2ofJ
fTV6zL75TYVAo4Tdnx76QoHq/U/hijQQXu31gPOQLxjyKX+gXKGB+SWmR9ta
XwiWHks7kEMH7i2KW9YK+8Cpzcm9AoXkPV+2eya9wQeoCic8Pl8n4LnvP3Vt
bh/wfdDn2NNAwMmqtzsMF71BW3qvRcMYAbYVc4KdL72h67KnorS4H0xGDfmk
nPWG5JkWZbVbfhD0WK/rLbs3RIX03T351B8Ufr6o0VjygpbwuitPxvzhulKD
54FvXhAnNbyd75s/WF14+eHZqBcEdH6yuC8YANwhPMSJGi8IsUq0jPINgKW9
xmI6VC9oDlGqTv8RADUQxJis8ISj8SWfdSWC4OdMJSvzvCd8e/Bn3wbNILiq
e6vl3QlP2Csq8PmzdRAU7zlyKSjSE1wei1RWxQaB8D7xh6s1PaH076LS4a4g
kKfpGOq3eMBzEbNktv3BIDApIzlw1wOuxGjy7soMBum9P0yNSzzANvltvXlx
MFSkM2nNKR5QssauqPC/YBAyC34qbOgBvFWzGp7bQiAjYLuBeL07pMrlr2x6
HAIXZ9uDDl1zB5aAE+dsX4fAYT3zlNp8d7DKFK84+i0EFr9LPK5lukPfyHaZ
nyKh8KGq/NwPGXd4ILtlpCkiFDLi3jcqZ7kBrr+fN7AlDLw1DYe7tFzh3ybO
N8oB4RDYN7S3SdIVTki4X49PDIdOn5WIE+tdIfXz2YoHp8Kh/mKqZ8MHF1Da
yGIkUhMOm+d5ZAOyXKCl6I1pI0sETM5ru0y+dAaZLW8PK1lFwMmpoSOnWpzh
55anHzOcI+Ac+48hgevOsIbRmPHSJwJ45V5+uJ3oDNvdRb8FREbATje7vXtE
nMHzvgCfztkIqM9aeqfl6AS9M5KxF8ci4G4sa1e+phNo96WOHJuKgLItJ949
E3WCgwubM8K+RkB6zpvHzz47wo+TnjrbWSNB8bMcfdMRR4j8635HZFcktK7J
f95T4QAcdqMHmIGR0Pb0bVH4sB3UpLNpNX2KhMPH3Ds7HtiB6x4h3a3zkUCr
q3r086wdrPs0XBGyFAlb35Q/HHGyA1nsEZpcGwXzLbv4z1+whbqzolYyclHg
50rhnIyxhl9fmgq/BEZBb5+g+kNFa5CSsTrjGxkFrw9WFpl8sgJast21lrgo
+G2xli3VywpePhY47XY0CuSenz95UccS5lI/VWBJFHyKfk/t/24GFMnbu7xf
RkFo3NbHVlfNQMxvrqX5TRQoP/1qmuZtBtu/rKNv/BAFZyOO7lB7bAoxc7wK
Kd+jQO3NmNa1fBOwMdtVlMLNhJW60QN7LE3guNDxH078TDiR/k8oZsUYQr/f
9xbYxAQ5cevNrgxjSBTdMecixoRfrU48IXuMIJLn8J+fakzozeJul3xjCAZv
lJvltJkgufPeyevZhvCn+3q9rT4TUpi61pvmDaC6wGnc3ZIJYYG2r9Jq9GHj
Vs0dST5MKNdUS1mk6UKnNDPo3SEmFK9u/KfUpQOXl26NZqUyIWJ/5yFxZR0Q
0ArpkMlggvLgxQ1KrNogOdR8f1cWE8quusfIXdCECmaKm3YRE9JuyHJZsWmC
oJ5LvcNFJnh8vjwsT84ha7LDNrtcYYLVgdgZQxV1SAwYyBS/ygSjUpasgccq
oCXj+WLoLhOyY93Oq8mpwO5u9rNONUzQ4xw96Z+tDI7y6h8bHzBB48nPHdpu
SmD3e/s2lwYmTF961ThBzlWyXaLTqU1M2N0aq+MjuhfqP+mJXHrEBMLV9XV1
lwI8vK+SW9jGhL/JG2we5siDkRZ3a2IHE2b595TGuO4BdtpqNbP/mHBr2x61
bROy4FWo96isiwluPh15vBUy4Gpm+FitmwkUnz+bHwVLw4rHwlz1Myaw8prM
x/7YBXLdXZlRfUywLPGLT6mVgHrmgZnq50x4+Z4l0ztJHK6nrbi+7WeCy+br
ulx6O6F1KrZ1cYAJb/iYtZlsYhC7GCLL8oIJT1hP7W47KQppXfVHv5H8NLlh
VnbjNqg3uvDi2RATvrwwXLE+Lwy1rmUbzg0zgUNi9yXlHZvhiWSruvVLJtSn
JW+dKBOENll9g1mSReR2NfruFoA1Lu3yia+YkGV3tfvuHX4gVOwX50m+pbRV
rTWYB6TXGFxxG2FCw4DF1GQ0J+yYtJO4RvKkxW3roWRWuN6Se/A9ySfD3wvY
CCzpdhXE3eZ9zYRn3cFJzZLfdLVDemrESM7gPh2aMf1a96Tro+z/88g37X33
89qbLC72wv+f55T60/5G52PT2pq3LZPk96QEJeYUji80XdXZK3yV5HHWX32n
tFjQWsDdxJVkYj591HYvB94xsjX7Tu73GV077pkkN6qs9xOLJ/l4Xs6qFRE+
3DRh2f+ZPO/aO+EzAWs24Dm9tRQLku3XjVUXH9mImk+4O0+Tep3evYfz/N9N
+EaEd2MXqWd663yhU8wW3PpEUX/mxf/1iZb+b04EA7W/Oi0NkvfRpI8xG7Ad
GSVijj/JeIkcXvm89aYYnpJYFr1JxrfQ70Xtr4mdOCLBlRBJxp8/pJhxebME
HsxSO7ezlwkfkvLPO6dIYsWWCDVL0j87BzeYe9RK4bLL2pYW0l/963REd85I
45X376WlOpmgNO1SNOe8GzXY+Eruk/78Ohq1fy5TDv+7ndH2lvRvxLpHL8ob
92Bucv7onxbSL+2H3DZvUETVXvdN30j/F7uc0LwTo4RDg1V5f8n7I/7bQ9yP
TxnDAnsp2dVM6JLqIr5UKCPhcCl0fRV5XxlSzoxhFSzOD4gYuU7mlyqnZ6/U
1PHb3nKH7EtMYL/wi/GlWx23KEk4Zl1gQknQmn2tDA1UT8+eSzzPBM8d6xTq
czSxcru04vbTTGB5oJp1a1oLRyVeWmWkM2FpZsat7YA2XmCRq/h5hAkJDjU3
Tm/QQYX3Irz2yUzgScx56Kuli+k+hprPY5kwtm20stFID3+7jvb+82fCvXXn
S3ec0sPp++pGb+hkfuAl2j2H9LD9eYLxTV/STxLzLG6B+uhLKGsIujJheb4B
XI8b4GXa7KtNxqQfSk0tgvoN0L5ja22IHhOSXfuv2IkYomqYxIMqLSb0qZRO
na40RKZMXSCXEhMCnmlc+9xhhMo7Vg9/20b60eVluvOCCVa9KKHUkfk7iq95
laK+KfI3jmlnfYmCF0HUzK7jpria/dOQA5nvmasuKxruMMP6S09bSsj68KSW
NUTcxBz54h91hGMUXFm493BnmiXarm+zfErWlx0zD3PauyxxaSm148ShKFA1
XC23Y4MVBuq/WKUTHwXHA1auLF6wQkvNk4ahQVGwMGz8Tu2uNVrtK2vmt4oC
jraDFL+ntvjrg8/TIzxRsHbqRaEkpx2mCDFGbNmjwN7+gfd3KTt06C2dXvc3
ElaUl2Q2BNohcft6Hv1zJLw5aLwu7KMdutzgsA5+Egnb73Bp7p+wx/63R/8T
TImE9bneARP3HNFtT4fd9EwEiAG1te2ZI/LpHZF9PxkB25Ig4fC0Iw77b+N/
NUKu/4t7kynihAdVpA7feBIB+W1rfw4mO6Gs9MZjv0oj4MDmh+fc9Z3RmEPm
hoFHBGzwUdk37uaMwZwNR3rsIuDyEfY9+hHO+Fi1PcTFNAIqIhV35hY7I7+t
3F8HlQiovJq0L/KPM36WMD7BvS4Cgq5lucpfdcHdurOt2w+Hw78IKxbfRhfk
z9r+5lxoOESfEP4v6LkLFmY6iqz1CAffcAb7xr8ueHin7tdhpXDo7xc9etva
FTkDxQZ2TIbBxjSWT6KfXLH3ke2OfOMwiDGNvlazxh276k4sNHGEwu7kN8WT
wu74GZrPsX8NAelN7/u+yLnjJcbvSvNXIVD4bKIj084dK7atVe2/FQLN1go/
l8644+ascN/PriFw+8sfrR9bPPASrelCUGUw1Bi8uPSN0xMDlP2cqQ5B8GO9
m0OToCe6S61fI6ATBH2tmW4h4p6YSvVd7JIKgjaN5uxQXU/8eTkp1mk5EHRp
I+t4mZ741YlZ2X41ENpruMbZhzzxg9XUkvOqQHDfc3V44wkv/BPfHZv40B9g
nMco5qwXatZdE39eTvKpdt62S15Ye2LRTzXPH/z5hHkka7yQTWeP4c4Qfyix
3/WdZ9QLJa4u7CjY7g9lIcTmKhlvbNHNs9+c7gc8eS2ed2u98d03rREZCjnH
i3vrmzR743Tv8QJbG3KOz15L7XvijbaXnBLStAnYvYm/6tkrb/xC3J0X20KA
k9sho/C/3ji8yva1aD8DOk8/v3xG1wfPrg0/rUvOybFWquKjj3xw9E2TO2FM
B5W+4gMx//lg/0Tx0YdqdMhmw6vre30w+3jGJlFpOnz1DEm2eeODuxUl6JvW
0kEhevrwx2UfFPTe/r2xjwYzPAzqmJYvDqZs9f1GpcGLIfYn1Ya+OJI6I6rj
RIPONFeBLEtfTI+R0ztnQoOrfOUmbp6+uCzVlpW0mwYq4YpdWom+uEr2z/Tf
n1QIzV6pTmjwxQPG/9iHyLnXtvfP9s42X3TVleDfdJgKpSPruMW7fVE0rGEt
Yz8VNClSyt9HffG/at1rcp5U0Pr64D4HCwU1B6vVw2Wo0M29ml1WnIL8p2VY
b/1HAadH+qwqYRQsZYg4F6+nAMepSt5jTAoWN1w7XMVBAcUbBpXTcRRs+NPp
UTHvC28jrF9gCgVDohW4M9t84eixw8eHCiiocu2RwzV/X+htyoi9/5iCo3YX
jcWqfUD222B4YTcF+30FPnFe8IHfm0suZPZT8HfckuSaoz4QJPGk/PAbCibc
PrvHydMHEj4WFY7/ouBTV5a89Rw+8E8hutxNlorTY20bh728wXyFaOhVpGL+
s2L3vWbeoHiW86W9OhVXFdpNFCt7g9U3rb9hRlTcH3zPtobbGwKqJHIFfKnY
EzIX1F7nBTfkGc6/z1CxwJ/fWVTEC67s7lI7w0VDk3arRq5pD0gLDrM7xk/D
otzL2REvPCDET7Y6VYiGpw+G+o61eYDGu/iXGbto2HzuSnn3ZQ8o/dKt0KVP
Q7YPWe++eXrAH4s6b+FEGp5ik3/F1ecO23p+7Hk1R8OfFrvyLRvcYPX10g9K
v2io8eBX7kKlGzDKUjedWKHhtLBbc3GBG8S7/RQHXjp2alcXvI9xA55dPiNX
ZOnYEqaYb7zXDbZ9N5pUI+g443X9g0CZK4ieZ7NSHaZjLvPHiOZRF+jxeyAv
8oaOWfo8fkHRLlCcm3h06T0dVTUO8ufQXeC9ROVg5TwdD7+sFn4ELjBQyJvU
tI6B/zW2pVz65Qwq3SHXThkyMPZBeIE54Qx+/BHN7BYMst94O/nEwRkSJXI1
o+wYOClyi1tXzxkMFQLTlbwZGHPIa/8qco47XP9GxzCGgXWbcse+9ThB2nWD
rwnlDOTYXCBNqDsB9eRmL7sbDFx35OeQkIQTJB1glRG+y8Did1t4G/mdQLi0
Su5YIwNpErTBsY+O4Gu/YehFPwMD+K7cOFjoCPU2RuFLywycb70vIPPXARR9
P9WtYiNw4OTZLSzTDpAg97L4DyeBFqxmpk/6HYCF/2B243oCHz14Ja503QEG
AjjP5EgQGJc04u7j7gCfIr1CTE0J7Gr7nSBVbQ+35NhGr1sSKFW4ar9HkT24
SCrF/bUlkMyw3QfS7OG3hnE81Y1AtuXRn2dc7WFF8vUL1QACy8ysHq1bsoPP
xN7/FoIJtHedtn38zg7GZ+8cuxJOoCdXDnfkUzvQPfxuoi6GwC/+3EnnLpDr
Boal71II/C/31Md9YAczG6PHFtIJrPtWTj8kZQdPyxXq5zMJ3D9WL1zLZwc8
q4nn17II5HWHumW0henujie0XAKrFS5GbM22BVXnI6PsZwgMlAp/v4NiC/vl
WF6znSfwMo8l5fU/G7D/djmTUkQg7epRodM9NnBJ1PdlWTGBKV+PzipdtIFF
dJz5eIVAn7thUVK6NpCyMythupTAA/uF3hzgtYFtRl+1esoJ5Gdb/NTw2hr8
n3f9dKok8CJ1LmohwRpW/zzTOH+dQNga3vDN3Bp+BEm5JdwksDx2HoY2W4N9
hvTt6VsExqRrB1RMWQFXGP9N3TsExm44f5l23wrS/u7SSaoi0OXdO3euNCtI
bDhkefkugewLkSxFjlZg3MTVfrOawAdlG1eL7LSCiPCk/Mv3yPh08Iymf7WE
037+VUk1BO6tYvvzponkXXtY4T6BF4zYeiRPWsLvPvaEaZKfvwgd9PS0hKp3
i1zxDwhU3rqQkixjCZs7v5V8JblvVb5j7i8LWHP0yj7bWgLPJB1vOt1uAQl6
F5pPk1xrbaJ3NM8CuP8z39NMMq0h0DmIagHfN09HDZAcaoyJugoWIPM0O+MZ
yWP6Ckrsy+ZQeUSVuE2yVmrt7/pOc2A3ucwSS7LijL+d3zlzEHoT57iL5O2/
bevZ/Mzh104t14fkfsT1DjWcVjYHMTX91Wokr1v5O7RllTlge5PnOfI8lOT7
uXnPzEBNvcXxLXl+rvxDUaxFZvCxW+UzP8nX13Cv+AWagcjjV6JSpF602f6G
ZjUz2Bbi+FWc1LN0i4y6ALsZlAhv8eIk9b4WLrjg2WcKHoaH6X1kfLYaeKcU
FZvCs6FBiy1k/MQaY5Q5NU3hbLn006ob5HlXbvSd4zKFiNGnmipk/EvdG2R3
vTIBtheUjwsVBF4dDBpSSDSBsf8KVNRJ/3AtsK6/bWkCPqL3D1JJf7G8du+T
3WoC+4wNZPZfIvBOwWzNlkZj2DYtds6L9GfI5MOWkyeN4b+l1p0KpH8dM12k
WHyM4eZhzdu5+QTuo7d0vV0xgqSBb61OJwnccf21c5meEZyuCt+ddYzAo+v7
5zevN4JrnKyc944SWPRb4Mypt4aQl3bEofEwgakcr2oPHzGErdOZH3r2E1hQ
lR1wus0ArnqPnvGNJPcjdpxt1xkDkM/N1XwVSqC1Rr5tPWEAYTaT17L9yPu5
8WXP4moDSF38R2V3JeNpXKTx3Fwf/Bv/vJtxIPAUlkpcENYHBy2nVa02BBoa
PiciP+uBhkVPiKIJgVUXNO+pn9SDjkyPRmEVAv+tv7om+wrA7VfNT+kKZD6Y
KdYZMAJ4X5NlWCBL4PoXzvuUpnQhln1+6MkOAp2FFNaAnC5kCHM9M+IhsPHQ
Ool7D7ShM/23yY/VBJ718Hw65qENkX/tN+WsIjDi1OvNsitacMepQjNvgYF3
9z/+sctYCzwun9ZofMNA6XdRbU8GNKGYo+BVxy0GKlzp5oteUoOin+1YWMHA
hvS82cyzatAi4qHsdYmBLhI3nIb2qkGih2PJpRwGXjxb1ioaqAo7H6wM6zAZ
eJTrwNCRV8rAXZS+Y1mJgfIhRV6MJ4pgHT+2s1yWgW0OLfv3ByjCl4nRUN2d
ZL6/MtLexakI6UqXxnTWM9D/wPGU8lPyoOWlYZ48S8f/BXgBh/4OHIUdtpMr
P0k+831GpmO/82hzlNi6JT/cy+v4Ap1jvy+ZlmeOAiU/8yp27LKTY797cwB+
6EokP44GM1TugGO/07iKw43dIj8H1DPT2lpjv9IWafC4CiA/ahPNvTpRY78H
CxmyWq8ePwanIlSQR2O/bm7tfJtKHT+2SbigHTRjv2DwrGcrhRo/uIlmiMgM
Y7+m+6V+rQoVP+PdsZ7dAmO/Z/J0hn+vEz/hkHGc6vhiv5pdpoS0VRI/zWAc
be3kYr//SHEWl0wPP1S7bc/j2mK/zV6a816hDD9lkvg309Biv5pvV1b0+Ak/
G7EzOp68Yr/KKrq2jbAEP0LK+mJ6smK/qOb7XpQQAj+nsCGwUKhiv7wqPsTb
5v4+QKz9aCGeYr/+HFh2NrL5PnDPx9Tsk2K/vkBXgjqD9D6qVpk6s4liv7NT
65zSs+4+4Qto4XR/Yr9IR4Xyh2zkPpWrAhAydWK/qVZSZy1h1D41lmiybmti
v4mJypgcRZA+eb6c2g==
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{3.9229465560677853`*^9, 3.9229466277677393`*^9, 
  3.9229466764510093`*^9, 3.923024491167371*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", "plot2", ",", "plot3"}], "]"}]], "Input",
 CellChangeTimes->{{3.9229466188967047`*^9, 3.9229466469435062`*^9}, 
   3.9229467485006933`*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
qeJ3A/7f/2Vr/h+aWXo5
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
     {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwUmHc41u8Xx6nIlkKikC0RKSsce++9n2lvz5OoKMrMKBnR0FAKTWWknIpU
ZhnVN4VCS8hIRvh9fn+5Xtd9PZ/7vt/n3Oe8j+3USCf/NSwsLNHrWFj+//do
rkbpiXsUXOWR/Y/n94nGo8lHF7IfUvAYNyP4d8KbRtPGtxnzzyjI85HtgFHq
58brZl/FSW0UNHhsp/LJ9Wdjhnhu+tMeCr65krt3uHCqcfhdUaHERwo+Do6e
WWafa0xtui0SP0JB+7reJL1Di40iFFrttj8UrLp04fDGOlbkMVqOCVqmoJZ+
yn36/FpkkS4fuslGRdJncv9zHXb8cukUv4IwFXf7xmXeec6F2DIU2KtBRTgQ
0cu6KICVc4nkSX0q9rM9E3aV2oQ2IftT1ppTMXZTr2mFtSDSnl48JexOxeLI
X91ul4TxmcANypdYKnLtkNx23kMMC4Vu5n69T8VJj+RNkwel0Lj0SUnCIyp2
7Jsd+SosjWcfne7iaib2r+tb51YtjaPNXIvsPVT8psTKVTQug5cvW+5N+k3F
Hce3LGcFyqOO5CZuV0Uatn7dRk2M2onVN5zWa6vSMCHNiTd5kzK+2q3kskGT
hmnXnktN1Chjynun3WdMaCgA/IpLKyrYElDgwkGiYfUpq9iRV6q4qZg+ZnqK
hjsmVc6eDlTHjg8Dpu1FNLx1dbxpV5M6uq4GVBtcoKGx6NvGZfE9mClximOm
goYFpOFqpXd70MyL/1hcEw2DTbo6aiw18Fpkq2fIKxryL2zveHlNA/WqFfos
umjYuPdANNs6TWyPzeNr+0DDDtOT3xYbNdFZ5+eaod80bI4uaG/Q0Mbxab7o
3XM0lB5PM+Mo0MZ969ghaomGcq+Nbx+Y0cZBNS//m2x0LON5at9wRwd9LElT
ilvoGL88m16/UxdDTD5F9GyjYw1boiFrli5OrwvdGyhFR/7Y7y9oY7o4PvJJ
0laJjt+m7IX2V+ihr3C1Or8uHX9HDHpWKgJGNfTWrDeg44e/B9WqMgAfZyhf
+GFMx8Z9/mH4A3DXyhWNYGs6jl8wofO4GmBY3zVOV086ko/Gnn4kZIgnVBqk
C33ouOxlU/DX1BArJhymkUTH70kGRzVjDXE4Ocm/w5/4fX7iWNNbQ7RYqR/q
iKJjwYnUDSxnjHBtcEafE4OOKtRBF+eXRnjqdy/7k/103J80p1U+b4T3xfpm
nA7Ssds5He08jbH9jtm5uMN0fCEc4XQpwxg1z9z2Sk2k49mkJf/pemN8dHPo
n2cyHRck6LPZoiY4xX2rV+I4oU/vdto7KxMcEEis6EihY3gqSWfbIROcnj5/
kJZGxzHO6D9+lSZYoWNm9DmdjpKRlhvO9Zvg721nV80y6cisPL6+l9sUi59U
3c0/QccOo2gPdl1T/NE2PPstm45TpvYsHudMMdQ2cepjDh13P7c3MHtliose
qv8e5dLxSf3l/5TnTNHlw+jm9JN0XPNmqz+ftBn+Oq1voX+Kjv/Ipoe/2Zuh
tnDOqUGCI9V96+sOm+GW2/3zoXl0tLH1r026YYYqjl+ODROcd1d2o9Fbghkb
tM1O05FNck/AwhpzNPiWJpFPMEfXokP5LnO0rdgGHQSzS2KUtY85qlR6Xpwi
WNTuOn003RznMmJtWPOJ9c0t7cwH5shjT7H9R6xf9t1stfDZHEG0/uYXgv2f
n0yM4bPAF6864+4T/NBMmndIxwJ3FJc9jCZ4vuFZsWGgBfLVjR8RJdgzIOxV
4WkLnH3P+/YWcd7MEGWjQbTA3lqRNhWCQ0wUK0V/WeDFM2/CS4j7fla7WGUh
YolnH1d0TBH6qOT/mQwysUTsa17cQ7CMeY3EoShLfEKdYKMTeipOXPiWeM4S
FTdfYTlC6N2scXmW8dISzXdyL6cQ8bjGPznrOWuJo7cXeeOz6JjUO1ekKmmF
i69+m3kQ8eONYOT8tbZC/UXhR9JEfGP8wzNvHbDCo7YGyf1E/PeOGYLrFStc
zfx+6wiRH7pvrlPGOq0wx2csP5vIJ/XyPy9HZK1RxjLp8F8i31qDTRPNHa3x
6TSXvF0SHUOb2JPPHLbGhAPHFZ4l0FGQfMt/XY81Dp9+fW/wEB01Cxueiq9Y
48LrloCf8XR86XeaLqdogw/vOdS/IPL/SMGXtH+JNng2D06WEO+D4jV5svWG
DcpUZLF6R9Ox6efS1PFeGwSFyh1Xw+j4g1ts8LGiLV6S0vtHodJxu0RcnU6P
LTKst6y/SrzHse97X/kv26KFaULFW+K9ktbKlh2St0P0GDRhd6ej6a+RjYGH
7HD211JViRUdM8w572lJ2ePbDE5fN3M6HjDn+PrA2h7ral++YDWhY8THypdb
99vjryMxQQp6dHw6Mbir/IU93lhY3VWvQsdP+0LZ3+51wDAv1Q1cRP1RoLt3
9lg6oOipA8k28nTcYWKa2+LrgFnXOh9fk6DjTOKvb5kpDviY7S/nA35if+rF
szm9DiiQzM7jN07Dx1GdwclRjph+5XpF/3caLixL+XQdc0ThiN0ZtiM0JOfU
+gsUOWLYrMpjvn4aHtnj8Z352BGbuTo28ryk4cMbq+wNnE44WX3undhFGpLa
Xr50vOiEvfbq+2dKaKg23SL5954TFsn/sn5WQEMGN19F3nMn/GE+E2x2gobt
jWX1VT+dcJ0iS+/4fhoOufOMRO5xxocm2QKjljSUYJO1sWtxxkSrkprecSry
GC+MHhpxwV9XWS4wv1GROSTws/KvCyrNKmYLfKaiw5548lsuV2QddD5k3EtF
GYfbj8XUXDF/I8k55yEVbcO05KISXFF2wurZbCoVX1dRrZOF3PBtfvDaAkkq
hpY7NWWbuqPa+VOq5qJUvFuxtuqqhzt6Je8lLW+i4jWuKuazUHds09l5MHY9
FSlHRbbx5LnjNeGlnIsTFJyn9In/HHDH/WF1C/OPKfiIRHaQOeiBI+IH7Woo
FHSJuXFUtd4TP3s3xJ7yoaDnk3NZ0O6Jl0z4uhjuFIzj6lb0HfRE9ZFJOztb
Cn79IGz0nM0L2XOct/loU/DCPcslB2cvDPHNUx3dSMFT697eLpjyQvUtGWba
fBTcdXzP0G02bxS+1KFRwEnB40z+zZ+2eGPCE806OguF8AFuV6KNvPFd1YUC
6gQZI78UUzLzvVG28KrGhzYyhvGx37qr64N/j8hfrnpBRpeOqyDq5IPfBLd+
Tm0i4/PODXXFgT64xLj8xKmBjD/PxekO5PlggQSPhnklGePE65KP/fRBiual
wyVZZDRnxIyGXvDFifHlP6PpZFwe6QrxfuCLP6+LlWilkHHtrct/6e2+yG9a
JDOTQMb3XGI9LYu+eK8ugtEQSca3EhobWz38MOMCYyjdhYydei6Tk1tIuOdh
5OF5BzKmT95JubKHhF7z/GKRtmQ8J/maGmdPQolEnrEoMzLufdCTkppCQp3B
tGNNWmQUtjiopzVDQuURE3K6OBm3tZVuTA0ho6H64VK1fhIezezJTPekYA1/
RKFdHwmH+48KbwgmdPudfT6qi4RfW4UybsRRsHZzRv6zJhKu8D9X2HiGgjNP
40ULqkhoH1FBfviOiMtAhHJlIgkdPeWu+3tRsWnG/oGpFAmr//CUc4TT8GwN
nDu8lYRPWa8mMxNpKNLdIHFLmIQdbXMsU7k0XKd16/4qFwnrDOXrxapp6PPH
Wdplxg+pzgbtGos0zIvIvnvwmR92/afCHkfU3dnVoZvphE7qOsey6uv9kWsw
f2G/ox++bw16ua3DH/sgtNvZyg9TrxtfODnkj6ERL6YH9/lha6r0k0vrAzCp
8F2Imrgfhh2aoUa6BWDOxd/39g/64k0Zv51X5gLQf7o0KtrJF1dMinLvGgTh
eNOl9cmWvsgSXFJk6xKEdoqJrAkGvijI/tp1JjAIj6m93KOm4ovfQhpSvHOD
8FTPD5MsDl/MSb1UdHYgCDukKtn663xwZMo360liML7syBmKveWDPJbCxj/z
glGu7/LJhSs+WHLkc7tYeTAKnVPJv5fjg7YWQ70FXcF4niiA41Ri/e5Pli+S
IXi8weOZK7sPLpdmTDQ0h+DYG8ZF00Vv/O+1QLrTfyEoGrt9VWTCGxMZZbUT
4yE498QsJrjPGxUWe3U1N4diYEVlVeVlb2w0WElZFxKKKQNk30xNb8QPDL6w
DWEYq6TCFmLphQJpfrv2kcLRVevNiY1aXjjAy1M6tz8cB3kTuvPkvPDjtDHn
vaxwrNoX/N+WtV4ow9H0Sv5hOPp+U0/RfeiJib8nWtYLReCR5QrvKklP1H34
5JhfawT+6JjgaeDxxPeUhT2LQxEoD28eXJj3wNsdI2dP/Y1AKbcBt5EuD1yO
+B58TyYSb6j7DtIPe6Cy0DDH/cRI/O8ZQ1a8wx1b9dS5G0SiMOBdsENYjTvO
aXNo90lH4RvptfHZpe74sZ7rx0+VKPSYq6dbRLtj3NPt6hymUfg9K8LiwkZ3
PBFxXoI9Ogp/tARfeWjjhro0OuXXiyi8FhCTEHXBBXsrhEpMoqIxnKNZ4scx
Fzz1YuvanvhoFBzVqtUOdsHfRqf5PY9Fo9Hpmp9UdRf8Y/Ezw7owGjfAsbNv
nzuj47Ui05aGaKy9GvvTftgJXUfI32bXxWDHidPSdi1OuM31YMI4bwzet9vg
JHvDCV/U6ef3C8cQ+Sf62y/CCccLuB8VKcSg1W0rnjV/HVGjOccwyzoGx5VZ
mrezOqIYs/6ZRW4MrkmaLX/02QEzH02dyyiKwW26aYzdzxxw+85PQ49LY1CB
J5R0O9kBtw7skWa5E4OhKyEbZlgd8NB5U/bvXTE4MLXZIG/GFvNSkl0VeRn4
tE9hxPaOLT6/uIKnBBmonJQu+TzMFmnrBYvHxBj4+42D0PcRGzQglWxj7GBg
m8BWHZ5ua3TIWKPQacZAvTa7y3svWmKz2dVLJYcZ+DVLydrSyxIrGm16xpIZ
SNfNTpYStMTxBFYL5QwGOp0fK5VPs8ALsbT8owUMXGIpW80MMceIjVML/jcZ
mN7qdPg/KXP8U8A8plHNwOX2d/enPpjh6O6gjLk6BoZNiGYlWZlhTMTNSpNm
Bn4wM0lVkTfFtw+KG4U/MPCUqXTmh08mWPRz9AJ5kIF23qM9LvkmKFC81aR4
hIGv0xXO1LCYoKugc+rbCQZuTappgXdGGOE9WZS4hokmTy7OzxwywDbRNyYM
OSb6RJOlOncZ4NQCf3fpDibRxzcB6wtAXemt3+tVmDjbyjz6JV8fPfeeC67R
YOJBSQ0hBWVd5H0o9bvTlImXqycj0vL2YafjpUl/SyYyXru4Xv6rgymKb//8
sGGidIAkecNTbWTj0O6vc2biaIX04qyDJtZrpyVEkZnY+cpAy+O+Bt7buFMm
gsbER0aHycmbNXC9eDLNI4CJsqy6emqf9mBFZ8Ch6VAmsrEe+FgHe7C230v3
cgQTxX4q7OO9rI7hN9oC9KOZKDCxJCYVsBvNtAvb98US+3fOnx59oYbynavT
5+KYWPCcr/aQoho2RLN7/jzIxIFwnt/W73fhRc2njy2PEOuXZZUOlqigsKRO
hXcSE11Yph96+ijjgb0f7noeY6K7ofyk1uAO7F34OLUljYk/dw9tE09RxNbG
OzGsGUxMc402ebBDAXtIn6hvMpko+t3NYs1rOVz3sLw+I4uJ4iw+Apz7ZXHN
QlfEjhwm/vsSl9GxRQbFhk8drM5loqLJ3XPOjVJYKnm1T+YUE+0MpmzvE8NK
lRI36clpJt4s3FCi7LoNH0zrJP3MZyIqKDkVnBNFifDYD/8KmPjkz52q8uHN
uLh7xP9vIROvT1/ID9shhMpsChIfiphYUav0dyxqI/6dpq65eoaJzKtsad4R
/Jh9UJ3Ho5iJ2zhZ+hiLnDhc9kB7huCAD72PVFPX4fGtx9JjS5hIv9JoZSK9
0pgP1XOfCe5LOzRxW3umcXhnf/Les0x0HhSPTi8dalRo590ZTXB39xP++e5m
fds3/VP5BB/6kvJOnXNM/+1D596LZ/+vn9Gd9oh5/eA21t7/r1NZqY2hVawQ
sjI5FUXw5ZwmA9vt66H679Vd//8+x7bAhcUCHoiYUMj9//6crYeTd7MJAMfp
pY3/P98T/wtP9XAT6Pze1jhNnH8r+aX15nhh0DbnzXcnuNi8cU/t7i3A/63p
TBlx/4SSs3lCv8RgdaXu9X+EPnNrRRJ3XBWHbWFDBv/Xr7rOn/PvLUkQTK6Y
+L++pat1mju5pYC9a+3Q//WX/bi5XzVQGk5+cBF7SsTHeGMIO2uTDGwdSio/
ksfE+Tc5nWfE5cD4+M8TckQ8AywSrWbj5eFoSvDrB0S8NwuGnubvU4DFQJcE
ZSIfOHVm/u3PVIJ3V+T3vCXyR9vP2Kd+ZCe4VGxzXE/k14YQXfab+irQLVXy
T5LIP0sB2bHWOFUIYIvdwUfkZ7Ezxw1DWTV40nWj6fNRJvIYbfyS/kYNaj9x
b7mQyMQlqRjlJEV1KH0qrfQmnol1EbJxKn3qkP3Yf43FASZGPPnvVtnRPRC7
d7y1nMnEPfqf/Ufe7oW06fFgqUjivYhMCSYc1YKE+bFcNuK9XmTl7tDboQ3h
mR4XnpOYGPdfRXVdjzZQlua3Rfow8Vy10n99svtA5uju+kRXon7YBFYeatGD
ZG7VmDwzJq5ZynWupOqDd9kyfcSIibVR7f9OreiDPV+YjjQQ31t54oeiBvDl
S0t3oCYTSfGcd9/ZG4Lir6m7fPJM9H4lpFl3zhD6X/DdeSXFxB+tZi0RPwxB
NWxKOkacicHfJry8k42ATcf00QkhIj+zqyUk7xmDxtWxH8NEPVzNbLt+YdkY
xJp/dPKsEPV7fExgwsIEDvNldUkvMHCHdgfH8oAJWKdMHNo6ycDDAtaxrRxm
oBXhsaBD1OP2RJ3QUicL2GIeKW5I1PduzoqwkRILOMMydNatnIG7ytjXT32x
gIp9gtXelxj4jif1h1+MJVSX5gnvJfrDNeWcmcQcKwg6FJ4vT/QXGZ2aj5QG
G1jXMqcobc7AeHKR78iqDaxM7f2gb8DAc+6zKGdiC6Lelz9YazPQmdy+/0eb
LYTbzIGOEgMl0zZKeL+3g0u0v69D+RioVMzPsIlxgIpcW0Xd7hhUGgq5LVfg
ACy89AM9r2Lw8wTv/Xe1DhA7ptLg/TQGtVw2WD7+5wCr79yeAdFfTxyQtj51
3BFoK0lKXtkxSNVzWqOR5QTlrWI3l0xi8LnqWrPAKidoEDgr92BfDHqp76sK
a3eCde3krdTdMejr/4gyw+0MB4/u3F4kEYOfzgTBeLozMBa4BWIWopHX6o9S
wkEXOLnaUc5fGY1q6RPGI0UusPXYdm3BS9Ho03CLX/yBC5hta/rAVxSNBWWC
JzknXUBq4MrM1+RofJwWuwnJrnCo2WhRzisax6OV2y/sc4PrXw3EuNZH4/eG
+GH9LnfQzqya2e8dhSK5EhKZX93hSIwFf6NDFNb8SlOoWHYHj24pGqtZFCoI
dk8FKXkAcr02PKgaha5bo64PH/cA+1D7B1psUfj+q272l12ekOsXT+f1icRZ
rxC3FBNPKBhJMpA1i8R4nR+HVzw8YbdRSp+maiRePRpCYiZ5wv7/duyyWxeJ
p9om+GJee8J9sZQKs6oIVJ4b6+sJ8IL+86PXzy+F4yUyJflXnBd4lyo/TRwN
R9shofZPmV5wTLKS4ddF+FOe5n6rW14w6StxUvRKOL71YGY4z3hBSI312Amr
cNxL7asyjfWGB7XCbceKw/BN7Fr7BbIP+Jju/rxHOxST7/vIFIb7gO39wY5W
mVAsszw5KXTQB8gJ1gL+G0KxNcZMBPN84PHFl4rl30JwreuRgkfPfEDxzsUw
/8IQ3Frluilrmy+k5cgmfZsNxidJPAfCFXyhvl+ssXsoGG83/rq5R90XbvdV
UZrbgzG+esZ5v4UvOC9mujaUBaNW7Kum5mhfEBPsVV5yCcb17ZSxFvQFhrto
UX9NEG6JEzPd+soXwsLXduhcCcLAxBvHvLp94RorRekyMY/ctjM7mDfiC/60
XS8zgoLwremvkT/r/cBhKMQIRYNw+FsQW52VHwg0fw54fzQQ1Vg82s8/9YPH
J5RcyC4BGFFoz8b5yg9++0ksUQ0C8Oph7Tnyaz/gWr0fH7MzAI+z5W1/P+AH
cQLHvevWBeBYr1jx2KIfGHd92v3lgT8G3H3T9G0XCb7Uyvk+FfXH5CnVLotc
EvTm/S7SnqTh34251I/5JKi7qXVv9SMNxWiBugElJEgTFxTsa6Xhf2G/2Pyu
kkCDx3Xs5jUafl7Kbv/6kAQqH84nbyHRsEkt7GrZCAkiXwUajHRT8flpDa1M
UTI0T8Y3FrVQULZk/YFPW8nA73RoPqaWgq4ps39UJciwI7m3wuc6BXf/e67z
nzQZNFofpntnUlAmkn5itzIZtNRzM9bbU/DV/QRfWQMynNKpKBLtJ+NluXHd
LCMyCF6LKxxoJyN3rGj4HxMy6KwjKd5tJGPK7TTosiTDtXXJ7MmXibm85832
Mmcy7OtjD+wm5u+vrdSP44Fk2IylBa7/iLn46Rvv9BAyfJ6WJt/8TMLfRcGb
5MPJUKsg17P9BQnfBouci44hQ/iTvlhyHgm/SXFt0U8gw5cZ3eHdO0jI+yew
s+00GRa438+Kkvzw4MVdvjWFZNhavT55j5kf2t7pwmvFZLB33ugfrEzMwcvn
PYtLySCj6VEv888XPyX173lZSQbPi0MGAyW+uO2e31nf52R4azXPDZ98sPts
0Pa5l2TIzlwy4mv2wXu6wYOF7WRYPWo7t1jhg4+45y2nesiwuO3uH6V4HyKl
1pZwD5Nhe/Vvvq/CPljfGO73eQ0FtM6mZB5398YDYg1ja9dToGCxxozfwBtv
6a4G7uKmwPnEX6nVCt7ofdh336VNFDC5S48wX/TC626K8b9lKHD5KON8/gUv
rN/icGCfJQXOpZ+NPjLmiemaHqd+2VIg4nfqxsQ+T9xyR5N8zYkCGol6e0+h
J8ZODPxU96GABXn20sxpT0wYLpF4EEmB2XEFUqmeJ+6teitgcIYCYsPnzhnl
e+B6rc1qzRMUOBv+OlHKxh2ngtIazWYpoG4U1uCt5Y43OXUonQsUUB1dIp+X
cce/f8qMf62jgqEPW7zWshsurzwc8BWjQvOP9K9Nt9zw3ZPvElMWVEgvPDk/
tNENB9ZxZR+6SoWbYZUVfR9d8OFK+UbTSiqcHShtj37lgqU3HH1571LBWIkd
uWtcMN3yqlvxIyoMHB/9rZnrgk9mhLzO9FAhyvLjk2BDF1S7+bN7mYUG761J
cvNlznhJjf99rTsNaGzmU1KBTniFpltxwocGlQu8bzxdnPDw5dlmdwoNdCh1
lemGTnijppX3fQgNFF/8+9gh5oQcnz9lMBJoYJEkrzHT5YhZLE+rxi7SYMVC
3KJAwxFbrvxUVL5KA863o7oG0o5IevzkF+0GDbw+x3V+5nfE6ZNGJ+7cpcEZ
6++nOX444AGXi+pPn9JgLctzxnCJA67oNWUXD9IgcOMo+eSCPdrmHD8iOkyD
jIa9b+++scf9r1aWs78S57/v1o437PHwyzgWm3EafF0573jJ0x5da152SSzS
oFh38eWhOjt0c776XnWZBmfbZmDNSTs0nqjQUmehA9vqpsL9gXZYVugRxs1O
h/Nks93SwnbYeV3vKZsAHcIqpl+fi7FFhc3rS89vosN44N0PWZa2GPAk8rGs
MB0eK/MWhUja4o2YFzrsYnQQ25R+b7LDBrNvBXj5baODCYe7d1GZDT6icOhe
k6CD8BpRK+VDNvggpr19nQwdpBIES2UUbNCJT8hQTI4Oh/1kfVJXrLFz923W
7Qp04LnTw/Ou1xppGgfmF5ToYK2kyGGWZI0Dj0Lm25XpIM2mX0N3t8a+SL33
ObuI8z97Ks5QtsbRw3lvBnbTofJ56hzpPyt895E7MnsPHcrmjCbvVlrhOitf
prwGHSpernZPJVjh5kM8zVWadFgbf3RcwsEKR+3jDbdp0+FeCiNLV8oKx9UG
X8fp0GHdkZBV81lLPBTo5o776KD89E2RUYslSrerfeHRp4OFaU0ae4glXuCU
erAJ6HAlmf3E632W6M6iv5XNgA4F77y5T/Ba4l5nFtbPBB8P+0HVGLTAVp8X
tuWGdHBoyhjvvmOByrJvx92N6OA68ICDkmyBEVauHdME27ge3vTZ2QLf9zv/
d8CYDkMecRHOshb4Rv7l6leCc68S4Z4zxyOHT+4yMKHDnQD20g0vzXFLP8Pj
GMHyXLp6PsXmyHlBKvQOwRVsHx+dDTHHFwKani8IFs+pTenaZ44BLBpCLwn+
YPiHZZ7HHEVVc/PuEXy8ZX2x0IAZeveef55KsIR3Wb3CbTP8M3X9ignBXKT6
LrWjZrj4YFjqF3Gemk66pZqjGR7CcJ0EgnNqfhbIS5nhHh/nL3+J+3w/Vykr
NGOKknXZm3wIvjwsGrLYZIqLq2te3iD04JJ60Pcu3xRbYlMXhwi9Ph+Y67/p
b4qaie+vsRLc95/D1GENU9TJu/aKm9A7w0PqhOl6U0zTPEFe1aNDIrVSguO9
Ce79xBvyUZcOZ1nZ5J5fN8GDdy+PXibiJyC0WTgh3gRPB1f0OBHx1UzPCVK1
MsHX/6L3/tKiw2xqT+GgqAl2Oe3mjSTyw+/OquiJMWM85yy6U43Ip1dBdzb8
l2WM9uPWh6OIfAvfnRZ/2NcYdyhluBSr0sF3tU9OXMUYR96a15fvJO5LsjT2
6zLC8/K51nXSdNBJc7caFDDCrJPhHSbb6cDa9Lc4+YshsqwXk28Qp8OoaZ+k
QrUhijW/KPHfQofkY/Pdh1wMsUFywqialw4JdZktzkUGyB+eqXuSiw6n9m1t
Fw4yQO65w4Xu6+lA+ubFMaRlgAJ+nE+uEu/drC7Qgu8BYIWzQ7DRNA2+mX19
EKqrj0kqN7bUTNAgP7rWv2pEDx8m2RZsHqNBRW/Cq5UsPbQ+f9yijKg/1vsY
g/2fdFHdvlLjWw8NRJJOHs0+ug+LVnn72rpoYHXBhz9GcR9usbZbU9pGg+uU
NWUR3Tq4VmtfrEATUR/H3P/ek9FBp/SOj4pE/VOL312T0KqF+ZFb16dW0eCS
tM1PTaYWclwwvv6mnAbHl6y1NohrYYiVQYfmBRpMZJcIisdoov1EiJpxJg1I
4eXbm8Q0UOd6QiyTRINTpZKbX+9Xx+bDqx/eedLg9gYVzafb1THS8OnXnS5E
Pd/yO6W/YzdWmRfnVlnQIGJvq0aO3G6kGSUmsKvRQDK1SH75P1XsUPa9Z7FK
hUqL9BaO0zvxma/ueo3TVHDf8G3vvfNSmHdIvt44iwq97zIv8rJJYeVv+wGL
FCosnll8+jZsO3r6uO/ROUCFVwkzlff1JFFeL2j6sRcVCt+K7CK9EsOmO6Ls
0ZJUSPveoLvj5EbkJR0d59pCheRzpx5vCRfA4/Z/hUsFqHBofqfqrNUGNC/R
GqlZQwXXfPPX7zfy4LlSdacbIxQ43Zp+e1pqLW6+tn+P6Cei3x79/rx0jAWf
VR/H1D4KuDy8be0attx4zrk/ybmFAv8+5ITWXZptvDHaJHC/kQIi/WMf1hv9
bsyVr13aUEuBTX1d88rt3xqLZO6HhtymQM+C/ptizYHGdkZB9pNyCtyaer70
oO1V4zPh0oy5KxTgFMj87Xrgrr4dH3PhUiUFfA5jh+L1Pn1N2gtVq2oKSNoe
FHx6dFjfy/zN2smHFAjk3sCc2PNL3yK0zOzkMwpolrNP28ZN63dJqXYot1Jg
TP7LwvB/c/pp1zNnff6jQGmopKPV9VV9u4CtoRQhKtDfKGyt/rQB1CsdfbrT
qZBROBbfW78ddtxlNJNOUmGqd1pakyQF3VeeLH8pokKL31K8KJs0RE++Z229
Rvx+ZrmR5CQDFQOknYLNVHD8FGzcNi0H5J5vVUH/qPBZVUTY1GonxH3rENde
S4O2tBZx/b87Yd8a+T9LnDToMC2TLy9Thv11l1bcN9OATfSrajPLLohPjP9K
I/LHx3RX25pBVaD3TxwupdJgKMfbtfaqOiSQSi8lBtGAe/16KnVVHZb6Lona
RhDv78IOYR3PPfDf/jdutfE0uPlgjUkY717QEmbZ8yiXBsnX7g81H9CAzXVl
6gIFNLAUH6A3dmvA+Sucai4lNPizSefPJ2VNOLjBLOVKGQ3c/xx9fmJEE5D/
twetjgb+T+9lZDhrA2m4ar3MY+L8cfNfSm5rgylXTsobwm/UFm5TbePWAY5T
dvTpVmJ/c96l4806UDd8mcfiIw1yji57Gmvqwon0zJzQIRo8zL9E252vC84t
cZ8OjtBAqSTuh9aULtgER0X6/KJBy9HjZ9Ir9YDfa2eIwhINep3Ond28HUAm
WG5P2AoN6mbC+ALjALR+V949z0rUb7uP1s1dAI+mxBJfEfXqu31hghMYgJ7T
5UQjwm9UPmY9wJwwgNSCljXTQkT/XJOgZyFqCA/0dOpyROjg4xXdIGFmCM/6
V5JyCb8Rv9nX7P15Qyj/1Wp4k/AT0UYDcXRbI0g63vivmfATU1UP+63ijUBX
pS331Q46PMjf3Kp21Qi8qjeJF6vQgenXULP6zwiuNo1x0Yn6zdNN+zWqYAxq
jsLVYkR979T13drmYgzySgsSjnvpkPnu5KeTVcagHVrZ30n4iX9CX65HvTcG
3u4yA22if6h04BfbdSbAeL3R5iThJ+pajBUVVE3AP+D1Ug/Rb27MrYquepsA
f1CA3TqiP0nuYnPvTjOBxw+5jbcT/cu358fhS9Um4Md4sXE70d/0JiLW7+Y2
BZGb1ZNrif7Xoy94a1rDFHIkvWN6CP7KfefZTaop3Dviez6X6J/vPr//Rs0x
hS8OnEwtor8mTHU/EXhoCvPT3osdBPs8KJyqHzWF5TOsex2I/rz39DtxbwEz
qNZzVUSC78VzTczqmsH7HPInUaK/N8eHsaUFmYHU6353GsEm3pw8AvlmsL5G
+eIZggt2PruRh2YgqRXa+JDgsnbnNO4xM3Dxdm94RfC2SF+7Q8LmcHGGevE5
wc6igTc+G5pDkW/VgVsEh4p/N9YPN4fkXavWx//vN1JsW0+eMQe1Lz0K5gTb
HGb5+b7JHLyi7UX/Eud7fC/MUXjSHKpnjJTzCc64z37HQtQCcncoRYoT/FLL
qSbS1AJkOFUnCoj7pgZ9FzoRZQHR6jL1i4Q+H8USk0rOWsA15vFBG4IneH5W
nW+xAAPlA9FZhJ6NLEq2+VMWUFTXdqSe0J9rNFwkcaslbGpdEOsl/B7b8KYW
L3NLWHgq6fGRiNeJgDq+Hf//P9wCu3k3Ec/tWzSrxs5Zwu31W/49IPxG0eu7
nqUvLGFgMehEGhH/tqjCHpNpS6jIvslpTuQH/5Oyd/1brWC+bbviSSKf9p5Y
OPQp2gpyz15rWyD8RqZW0HJvqRXkzR28aKdOhy+Szq4PO6zA1mXc+yHhf/1f
HvS1VbSGtBax5DeEP5aIVk9YdLMGz4O1nr2EfzbUjHLKP24N90zPXj0vT4ed
/7lsyh60Bis+BTJdlg6/lCyOjPHYQMNIucdmwp+Q7/lf2qtjA/R4lmIjwo9M
vx+XzMq3AZP3QiX3iPe5fMVOR9fCFvpkjyYNbiDmhWqn/dNMW0gbsfi6QPiT
mxdEe/Mu2ULu+h1v/xLv+0/8JPnUoi3UJu3bt42oDzna5JWkSjsQr6HMPvxL
g6fuztkp7+zA5u3nYvNZGpyzkbaMWWsPld4JESrEfON7p+Qfu7c9jNzifKY5
QINHPV/Hs9c5QFaPoq/TBxowbNTL1EUdgNNVOtH3LQ2kNva87NjlAIVRzxXN
Ogm/8q2WOujlAPFBB3cFEvXQW2evXdwdB9j26P7HLcU0eNelb5Lh6QjFb+/v
c8+nQcI+jvD4CEeQk5x+mE7U4926Ro/9jjmCZWEp/6sUGgwUjqlz3nQE29Tg
D8+jaXDHVDR4aNURwlJlpb+Z06BE9vvG+1ecoMv6oPR5IxqcMBNcc63WCeZV
uZOs9Whg1q2XldvmBHdfhFnm7abBFl6B7VYzTnCNK+VV51YaNI2cIVGNnCGO
K4Cu/ZsKpyTS26wHnYGrzjH0SD4V+kU8W68IucK45AfT2hwqxLkmJc4quMIF
i+usk0R/NDp25KCJriuU/7jyzy+BCqqm8snDVFc4qyOyzjyACj7khONyd1yh
5MSZfn8tKohvCzXhsHaD7R4SbnsGKXCk8Yda0XF3mIzeliP/gQKOK6Hh24rc
oerM91cShL8YXPUOrbrhDuW1L1GijQLjho1vRzvd4a1l+lUy4Sfc1GuPdW7x
gIVeLvh3kgIHlVZv1971gItHOPussygQenv/lV/NHvDk3peJS2kU6Pq5MKHy
3gN23jg5R0mkQMnonaqPKx4QHNalqB5GgW09J1JHbDzBW2w6Ws6SAko/nAu/
jHnCI4vt9qMmFFjBAwO8LF7AhcyjlQYUMBIRbrcS9AIx2sSirRYFdgmVlizq
eoHo1VvfxuQpwHqybV4r1wteDA1vzeEg/NSeTOcATW+4wUFlbV5HgbAeX45X
Nt6wOdTWnZWVAmulv8kaUr3hvuxm87wFMngYjzNisr0hkj5QyjNGhjIXE4nB
EW+I2dcR6dNFBg7RXuA54wMSK26+jW1keHixprbtjg/cOSUepPCSDLf7/afL
X/nA2NiRHMGnZOhUuJJcu+QDVxvY11lXk2G3ikqOFsUXSLya9G3FZFjc/yn0
p5oftFzUdPtbQIYD1+ctsmz84KBm1d93eWTYwpV+wzbQD0z9/r2tyiLD7LeL
h3ad94O4rT6tl46SwUdb5XUMFwnyfKd+nQsmw51H/Z38YyRg3xXp3xNABsdz
thf715Jh+3RnJh+dDF31/KOwkQy3Gs1s8vzIsPW6hJrOLjK8zOArb3Mmw7Ga
J9lzxHfWavWXjuiTQVut8EDeFzJcfa1qVyJMBvmziUy/IQp83bOJzUyQDMn+
9iJ3JykQcID7yJQAGUr3vtu1cZUCveNb9pjzkiHrLF5Z3UYFMrn9+w/iHM8a
fGdSfajwbZTp9ekzCUZE2OcMPlLh6HvmJoE8EpiMBqP0VxrMbzww2JdFgk9v
HmnuJepIhixXy6k0EgTNuc47c9Ah1jng0/hhEvgOyYnXE32fb36/iGogsf67
8ZhkFDHXtQYcKNMmgYRohp37MjF3WfkP5Pf6QcJensN/JQOgpaHx4EiHH/yc
SOHXVA+AbQ5/uGVe+EFiluPBJNMAYH+fohJT7wcL9WzZGiEBoPvwZLAJobvS
isAFifsBMCk/v3KS4geX6VlHP1oGQk/dFZ0WTz/YNZtX+MQnELi+zrN/d/SD
H8k6lrciA2HfcdYjvw39YNqcpHKtIBA6rrvs4d9OfP8m5ym2L4HA5+ad4dbv
C/wGMo8jDgeBd9/Ro7rdvrCfI4n3S24QsHdXd3O/8gX6P6U03ytB8MpH5ql/
jS/0TP89GdYaBM+WkvxYT/qCddIRxe8iwfDK78rfKn2Cz18Z1qsNBk3pjKTM
dB9YMLy588x8CLx2OP5c7ZAPXL7E3nGaLxQM57/srw33gXL+79fyZUJhbewB
fV8nHzh2YcLlqkMoCN1OY/KI+oDFJtmLy9dDQfB15qvWy96wPGhWSvYKg69m
2ufhtDdY8j5bLo4Kg7Jbh07lHvOGm2J3C/tSw+DX1xjhJzRvoGjcLHeqDgN1
p4umflLe8DTsRbwfTzi4F6h4BJzxgrBV019ZjeHQtoOF40CqF8yWNeS87g2H
uC7aAonpBYW/C2c2joUDa8y/xXp7L3AxWRY6vTkCvivwbshc5wVP3sqIH4yK
gBMFfTvjAzxBbv+upqrtkRCid2yxgssDnpPMh39BFPjMUAX4/riDbVzvlbVW
UTD6ck7KetAd1kOLobBLFATWXp93qnaHebUnpSpBUcDbunakyNMdRMszLiuc
jIKz2esu/7rgBmM7m9zkB6NALyni1I9UN3iX8Of9+PcouMpr2osRbjC8i9v5
1nQUSF7yM57Xc4MTv9nubWWPhv7e+ENnPrjCEulRVeXOaLjBFnyokMcV+P27
RmPjoiG4uFNPYdoFNIo+bOtMigah+Z7g0+9cQN2A7rTtRDRo+OtIzl1ygcep
FqpXzkdD6z0tiYk9LnBOnU3b8lk0LLgZjlc7O8P7DFfdL5wxEJb4l19yvyPc
fiWsFHAqBgIjD7STnB0hetZEdmdJDDy7P+SxX80RwCJnYfhyDDysECyRGneA
vRvCTircjwFVVyX+E1SiD+9nFWd9GwN6VlIXj5+wgzGxFVqHMAMkzLXDJ4zs
wHvWNO2COAOOnIl+yEX4gnfTxkIkOQb8+r3w2SfQFuzdL/Xf3MuAICMN41h9
G1AzT2BLdGbAi/mBsaUBS/j17aTSqxMMkKkZFXx9yhJyz0iNHsljwJ4Daask
E0vorYnokC5mwDh7WP2D6xZAMyGV7b7GgGMRUmesI8zhrgq9JwgZMKbwoXCD
hDlke+YFpTxnwH8TXZ2FXWbQP1ylkNPGgLAlp84fu8zgR9PTm7R3DCi4c6iu
cdwEjg3PHxSbYMDvKVOJy+dMwGDorWDhDAOsvmo32FibwJrB2p9L8wxoSLnx
YLHcGHa4vfgvfS0ThB/IbXztZwRNQ73NZZuZoEc3oO5OBci/GLuhcx8TFI53
TXd91wfOd49LK4AJxxtrr2231ocuB5VqhjET+FTqjL/x6cFYQ4hEmxUTHqbS
fGRO68AhpS/K2R5M2HHajjVrRhtyjjz71+bNhA8SSmeqiTlwVF2ldc6PCT9p
/BUWm7RAV8JMZoM/E+Rfiu58kLsX7vjoGzlEMeE812ZJ84k98PDUx8jxGCY0
ZOk6XbXZA6DguTN2PxNQ71xtO4c6KE/0SFodZAJVbu3G4oDdcCVkp2HBYSYs
evXNazarQdEjkadtiUwoT5ZtnUlUBTkj2v3FZCbw2qd0ytftgnWd6zfNHGfC
fxuHx7bEqIDcxY7yt6lM4KjJqpEcVQJShI8dKZMJac3LH/dd2AGUNzS7dVlM
6OuufC/krghXJjgp+dlM6P0y5LnppRxYR7y+sP8kE34lBwTrHZWF/eVqDS2n
iPvVzlLUtWRgrKe6fc1pJtTkcmTPT0pBtd/PdsV8JpDWNu49Wb4d7rm3PthX
wASurprry36SUHezIkmrkAlax9cEpe8UB0F/EyXJIibETi3bdpaIQWvrvZvT
BN/gKirr4dgCjDLGujtnmJAlaMZfGisMp3wClTyKiXhknlLXHNkE15TeiI8R
bC/SX3fZUQDq9dz7g0qYoMnqefJ1Ai8c7F3j94bg7nYOkW0eHLA2wKBM5iwT
7vObkbV2rwXJusFKKsEFBd4pJJF/+iLzmxgnCFYJlt27vX1KX6qLMX+B4B/J
92SMVj/p2zAWdM4T/HZ+SKyR1tLI/mCNTirBLKSkH9pqPxvFOR3/eBJ8osTT
7jj9b2NoLme4CMEcKraZnO9ZcEDowaWnxHnCe0rNipbZ0FDEIN+V4MBucZYB
KW4MeLRo2kvcRzNTWuW79AZcaD1Tp0ew/j1IUq3ZiB1lahOnCD2aHoCdoYUQ
4h6DH68Jvb5Ze49t+rAZlQYuVy0S+gru97xzKVQUvwSe3cdPsFN309zwv61Y
PdxZzEfEQ3Zsi2hvtgSeyzNtmyfi94nFpM7RXQoH6nkeZhPxVV9pKO84I431
Wy/7AxH/0LTNTKEPMvjzGXvrxxwmZOKi5j9veTzOzt774QQTVIMOL+efU8Df
h7+l7CPyK958re74R0XUSZflTE9ngnsHrbvLZyc2F8tdHCHyk2N0ic3lnDIa
z7I2zRL5+1DPOOREvwo2bQrp+32UCfMl5q+OVaniZNf3n1VE/m8W/wa/5dVR
e6fhh70MJsTZOJe5tKjjg2N34q4R70tw0jo7lb4HlRJrnNdGMGFd7qElm4t7
8ahl5q+kICYEKPOx7hPSQi9lo7+nfZggcu2B1pe7WtjbP/s80JMJnANR2tZ2
2pi1MK+u4Eb83kjvnU+qDrJ2FctG2jPBJUH1jtuMLso8fTcnbEjo8fWZw0i2
HnYkUF0d9Yh64+UVpqCgj0WRn1vjtJlg2xCe1+kNGMGdq5urxoSXC1oGNYMG
6OxbKfJRkgkRXi++NykZYvrXa1xJW5kwdzAxqPyAIdrO7CzdJMIE1tR4+3E+
Ixwdcl5i5WfCGpn3VdR9xrh/w7WLbP8Y8GRm9C9PqjEmUw4+3/KXAZ06D5fT
Xhvj+HlTpa3TDLgq6NM0TjfBp7xWfL++MWB6mM0k8IQp9gt+OfmwmwEWH5PX
5XaaI9dPVi+5qwzQ6PbW4thqgWfPslCvXWBAfuXKqH6wBSYUMXU3nWEAX9mG
1c9rLHGaF35UZzIgal9396/dVuiWJV8rGMmAoQKLIxkpNsgTP4nRexgwF3tx
X06nDUZctTnbuZMBIdc/3DXbbIumm2+GicoyILshsvJ1uS0y/mUeOyLEgKNC
Ngyd53YozMWafexPDHSx6AklxDmgu6eEaP69GHg1mPz6SIkDSs22j07diIHb
N/bc83jkgBEGH9YbXooBtn81slmrDriSGz5enRsD6QI7H80ec8TMdx9LfofG
wMoE287rx51wl9ip1u/bY0Cj46rAA7oLrg29f27meDS0/Hdnl8MRF3QAqIw7
FA1cpOMFTcUu+F3fPuhPdDRM3MsVUe90wcTeXfvf+kWD7nlXuz17XTFgacsJ
Ha1oWM3I+vloyRVtlGKFrv+IAh7NL2c+bHJDER3L3lrCn5isFDNfK7nhmq1U
r6d9UfD5A7nNxNsNM089Mnj2NApCjzFaHOrc8PpHww1HiqPgZxVDcDXEHQXj
LpmwWkQB44Xi0pWj7tjHtOp8pBcFIX2Ml9sL3TGiOk2OqR4FtdkfSdefuOOZ
3JUnb8WjgPvu7orhTR645nWl0MDPSBhYuaUrV+2BZV3x/bwmkdA6fSelpM8T
nQ7HXLCYCYenM5W9f7554iN71xXax3C4yJwPkF/0xKDYsJ2Jz8PB4Wa4CJ+4
F57UrVtzpygcJILfKU7SvPCyRtD3DbrhkPAslUPluxcmakswWFLC4F7a1uds
814o4t1ySD4iDFaivLbWrvdGqb4KV0f3MDC2u5JSLueNj+7VhN5SDIOwMeWO
51RvNOj5np7fGQp6pk/lVXq9cXk5lsNoSyiwSAxLP/rsjdOZm1bvrAmFrXNK
F+UnvfGCiJ2x3K8Q4HQ9KXWG0wc3vd+QJIMhcNuq99pXXR+0bfK13u8fAuRH
L2/vP++Dzpc9d+VVB8PZtZxjtha+WLfUPDHhFgTudzXnRh19MeXYx0cjhkHw
77wGxd/bFy9fzu4b3RkEWXRmnFiEL1bv+xHKtTYIpg7Trobl+eK3cf36oduB
4LytKmH4rS8G6/gNf+QOhJOxarK7Hf2w3L1O412HPyRm8F6jbSUhPcTxFibS
4G76Bv/W7SSsvpk5cSiCBnP8pdU75UmYmDz9wMyPBhLPBbhG1Ui4dHNqab0+
DRoh95uSOQn1Pjoa6qxQIV3zWLVNNAkr7vPdpyVRwftXaPmJWBL+FzX9ijuG
Ck/8U51bD5GwQWZ75zMqFe7nJ3w0TyXhXTbnu74mVHgWGDhidZaE5obKRuYc
VBhdy/XrxnMS+i+Wp4/lUaC/OXnD2jYSNls7Pzt2nALvRTP/kV6TkD2+lV0p
lgKf3Mfl5fpJyMIQq7rmSYGWt21lP3+TcIt5uLbTdgrI3L4318xHxtznWi0H
iLnb8ZqgwQUBMnbs7kpcvUqGTzJWzocEySgUMs9ZeIaYa/dftDQUJeOEmXPC
ZAIZQvU4M1ZlybjviBKHsyUZ4tSq1/nqk3HvXf4+4pwQy9l3t8mQjL/Da5cj
Kkiw1+/GK1VTMr7ZvlzsmksCmrj/PXEbMj5Rvnc91ZMErB6TxTZeZFSobdRn
TvoB7ybtQxxxZLxap5LnRcyBb1+7D3w5RMZmrhd8shx+kK9YaPf8CBkfBpCC
+CZ9ITNQ/MblNDJ+K5sb0X3sCxvPV1OeFhH72QvJrvX2BdnTzQ7n68mYGmIg
seacDzh3LlSzNJJxbjMH68XjPhBfNSQS/oyModbbOTyJOa9OfhsnpY2M8/wF
MWLgA1auy7o1n8gof/bsn/+GvSHZYGFQZB0FY0wjA/+peYPN+8vxfJwU3Pjd
0GTHVm+g2Ubt4eWj4OI1r7QIdm94cfTwH1kRCjapJU1p9XvBBvj1smknBQXf
ea9pT/GCmTzz2mvuFOwYfql4YcATVoS6qtp8KOj1MYQlsM0T7uYGjv6lEPsV
/s7Sr/OE1DHnfv8wCmqNFhSK5HmCgfnr7oIkCtLiptdEmXnCsYWddPWbFLTe
9mFL0F0P8A8IxioOKt5NFo5wyXEHS0OD7hN8VFx657Df57A7yOx8URshSMWQ
cwmU4BB3UDAdpIIkFelvrO6dNHOH5chb0+u1qLjhndornlU3UDV2F9wYRMXF
tMDsuCg32HErwa7nJRW/tOudk3F2BY8czasNnVRM7i9+nm/oCj3sDUaXe6m4
7p2QHKuqK0zFvsgLHqLiTv8TNzqIuY4ZEWnQ/5eKV7n7bu9qcQH2jIiNknI0
pNd2TP3QdIG5lnDet0o0PF0+mb1OjpjrenwhTY2Gq3xhqiKCLtA2Fnv0gy4N
GQ4R/yn+doarQ4ks4ExDGy5zmelyZ+jZKQK9iTSMT/kzOCvkDKXyTw3kjtPw
RyInZK91BiG87B2VQUOPWj+nrVNO0CBev/nXaRo+/Q5S4u1O0MuctTp8nYbp
LA7Mm0lOkHJCW7Wvi4Zymn+Svv50hOZb87Onemn4mOJcOvDOESpXMl8b/0dD
P3dRwfZmR/gsvWZT6hdi/YlwV+oFR1iUPdh8ZJaG2nuMHA46OsI+vlddksJ0
/MwfP+T0wAEc35+9EylKR+XvY5snSx1g7bLDgVvidOS64+SQmOkA27gFRhfl
6LhNjvJ6P8kBjLCj/JUGHRdieqtecThA/rXxLXk6dBStZ1m3PGoPhZEbBiz0
6cj99ZmM7UN70DnVeP6oKR0V9w2rX6Law8i2pW+bnOnoU/9xUeyeHXD8VO6x
dKOjn6Jq/aMUO3i8f+ZKmCcdNabXrTH1tIOXnx/ZxJHoON6Z9JOHxQ72JTW/
IVPp+GJDwZhNjy3IJoYU7vWn45s9s9r7r9kCR8AhgyshdJTqNy85YmMLalO3
3+8Lp2P05FkJqoQtfBzcIvwkko6/9CfeK0/bwN5a94lMJh3JSwJfk4psoPhY
L8gl0HH1nWif9GdruN/YJy9yhI7nNk66uldbA4PjftnsUTp+qPDRi02xBrOW
98Nhx+mYfp/7yAFFa2C2ZodypNIxLSE1wWvJCgTurG7MSaMjafPKjh0dVkDx
W3Jxz6Tj5dWgyZNRVkC/l95QcoKOarzr6xWMrOCAy8f/XmTRsSHlW+GtTVZg
K73hzEA2Ha+sLfsqNWoJV0nCgwM5dNyx//D61BpLKLz18MzLXDoWfbfzep9m
CR4brtw+e5L4nnmuoainJQS1OfB7nKLjwVX97TY7LGGbzfayZYJVS0f8IpYs
IGPezjsrj44Z/6vY2sOhzsLwtEzJnVSjm1B40E7JaF1mvsaYMWO7KIVY28zv
97OsFdE9t6Qp90sXKYWllCllTFGkYx+T4lFiixGJbNlHVBpZUtnjz/f5zvc8
5/3e95zv/HG+oCRJYosQnk6MWmieotDr3JM50otCUKtpQ9TMPLbLZ/+YCCH0
1m8puoFxrPWoBQlCmNI579SP8bUkq1/YhkJwGI0smJm/Vn49Hq3d7wnsVK9m
2mkKHdLc+LxZ7gmZUUfLR3Cc+v5pLP6oJyQ7b3VrwDictOVZ++D1qo4/EjEW
drc7KC094docQwebmXnsDaPrfMcEID7fJ63G+2W/Ln34UikAuVJ/JxNjDV0b
/8AzAggP8KjKwvzyoxXi1mABGMwykKpwPd4NJu9wcRJAjm/fg7kYz9/cV3th
tgDeigPOrsX1+yGd9snqBR+a7rJeCXF9X2pbxcrK+RBnrZUvwvU3ah6+b53I
hxMhJk0srM9C3ZNmhdv4YGvpFaqH9cvoHNEwsuED2cM/+DSFQkV7w9vjpjyg
6B/xMAPrHxjJbRYVe8CxnQyfAimFwj4vaijbh/HzB0wD7B9mpiF/tsgDSoby
/BTYX6kdMclVH3hAqKpkb+Mp9Hux0VKdBh44NtUk0bE/1VfG+4JyedBoh3rp
hyiUdmWsaNqNB5q1+hGD+ylkd3kyerMhDzLu9F+8hf195wVjeeGAOwxpTtKM
d1OoanFwDaS6gx5fd7ALnx/tjgN/5XRyIfa30ROmJIW6M6+6Dcu4kNK7ahlf
jPlHto6J4rngrg6ViAMotO7n508MV3Jhh7T+zdWNOL8sWE8VvR60citbRV4U
2rN3l4+/YD1oR3207xRgfge4rq9M18MTc/v0asB8Vt7l0o8CLJEP6OSsxv7x
4Zv6mXHA4j6j5qw9hSrTQ7Z3NbJB7chITLOh0KWyvLTICDa8u3Gi2mU5hVZO
i52669xg4MX0wRp9rOeWnrTGIFcozHe5YK9NIR7drWSa7grWKfySdDqFNsnK
weeGC9guGm1Z8JVE9FPbXDdOO0Oj4eM6339JdG/+/pDi4p+gVqDwKKoj0cft
pXXxH1jgF/iM6VtNoouW2WONWSwIbMrTmqggkU5AYAasZkG2Sn8D7RKJFghb
uh5EOUICqVtvg+/3PafPTXD/cwAkdLqs5U2itIJTsQ91V4NmaplPrhDHhWHm
ehImpCdXBs3jkkgdIqfPLfsRTOLVe3pwv9nwRR14xGUV9CboesuNSdTcqjLL
I22hN0YedqGNQPfer8mUta4A9qHwx25NBGpJsSpTmK2A0jVth5/WE+iAVHHE
e7clfE/Oqmu/SSBB+3ibaJ4FvHdNtPHKINAjKSWsqF8GHunLVqQfI1DFFE3L
OWwpfNi3+UhDDO6/HV7cSZMlcN5qInReGIGU0bV9VhGmUPPGNRQEBFqYNL6V
YJpAcLHps7VsAvW0dnW0vzYGtmxXvZkjgTLvlZw5ftYI3E1ldq/MCVQwaHf3
4Fx9SLF3WKtgEEhlGaeTeFgHvk2FtCQYEIimdc6P8V4Lsv3eKDW+SVBBRMfA
lx4N2Fqafb1WPfOP+ra3yH8WxAeVOe0akqCwjG7zgOvfOCPOzCuMfgkq7fj4
aFP5BOfmwGz3+504X1TVFq1Qc3x1x71+fSJBrHPDVHbcCKcip5A+qZSgW98f
O/9ZMMCxLkm4nVkrQbKkqEnW6b85U8aLY/Iq8fsmf2mEnJfF+R+evyUC
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
     {RGBColor[1, 0.5, 0], LineBox[CompressedData["
1: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
cKBX8P20Ex1d9YXZL1z1wdpy37Ab++lk3p/035nhg0jZLL+6huwLM3h+Lpv4
oJ/WpehlDQb6nEo6erbZG90VzyVetSaQT3jQm73OGy/ortVM9iXwo8S8SOAd
b6TZdfwjIsm8kvRzRvCiN755sOBIP0Pgl6Y6vflEb8wweFQhPEbgxPcr58OV
vfHtTsN3flF+6DCsweDN98Jfx8Z3VZf54/z+3BfUk14ovE5IbHWtP9rE8S2W
pnjhpQ1PvtE7/bEvMsxkIdwLqWU/CmHOHzUvsF9sNPXCPfWydUzNABzWORRY
Rvo0h/01f3VPAPp527pu1vLE7onk3vOsQXjkdcy3NnlPVG2MKuDcFIQhgym2
bjs90V1Q7b8EmSD8EmwbrsTliUK+LFVMuyDsD/dfujnogbv/ZfFfLw5CUdcD
R3MCPdBvJGKaSzsYEySrTxQmuuOK8Hs24/gQ/CQnd9c3yB2fPtGbHzgVgpVp
QUUrbu7ovrYxhSgNwdykmMkuVXe0/Xz9wNGeEHR4mMUsnnHDhuzI6Me7QrF1
nSP+cnbDHZN0qaW+UCx8arrPzsAN44pZt0ZPhaL0xGLoIXk3PNXr4/H5byhG
Ow56+K92Q/7gUzldUmF4PCjyr8U9V0wXf/nO4UAY/ndWmNtijStK7Ygb15IK
R3632Gqe7y5496Zzjat2OM6l3vhaOuKCLp5zEsH24ZgSuPGR8y0XNB7+WByb
GI6dhy1F79uTeTBHOHF7Tzi+VrrXRMl2ximtz0cV9kWgXNs1pXUzjrjXtaBQ
91UEhn2mj+v0O2LvQ1N7p3cRuG2psdC0zhFXtxuvoX2JwKNX0r0+pjqi/LX9
C4yVCNQ+2S7mL+yIJfla+zh2RuK6vO4zrroO6Hfq/tVc/0hUFj7+fs9OBww/
/XzdlohI3Ng6uPcNhwPKFHoFnYmLxCMVbFv7n9ojV6/tofDMSDx1bcMsq7s9
xpRlXy6rjMTGQxEWhUF2+Pruwc7lT5EYNqG3Qd7KDr0+66UNfI/ESJp11YU9
dminKKl5cTESB8rqhKTHbVEi6RE/P3cUjid3crV+sMGD2hMSXtJReOLzPwGL
KSuUND5zMIUWhXh8VeHecit8+5HtzPHAKFwxPu4yzLBCz51f29MiovC0sC83
8dYSw1gX2e0ORuF/1/9tPzpkgeNxLW81CqKwaMeKvX2tGU71HWc1ehqFuo3/
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
v4mJypgcRZA+eb6c2g==
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{3.92294667665639*^9, 3.922946748766944*^9, 
  3.9230244912012815`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lambda", "=", "1"}], ",", 
      RowBox[{"n", "=", "2"}], ",", 
      RowBox[{"m", "=", "1"}]}], "}"}], ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "=", 
         RowBox[{"1", " ", "lambda"}]}], ",", 
        RowBox[{"theta", "=", 
         RowBox[{"10", " ", "Degree"}]}], ",", 
        RowBox[{"phi", "=", "0"}], ",", 
        RowBox[{"I0", "=", "1"}], ",", 
        RowBox[{"l", "=", 
         RowBox[{"lambda", "/", "50"}]}], ",", " ", 
        RowBox[{"k", "=", 
         RowBox[{"2", " ", 
          RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
        RowBox[{"eta", "=", 
         RowBox[{"120", " ", "Pi"}]}], ",", 
        RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Efieldsint", "[", 
         RowBox[{
         "k", ",", "r", ",", "acoeff", ",", "bcoeff", ",", "theta", ",", 
          "phi", ",", "numberOfModes"}], "]"}], ".", 
        RowBox[{"Pfunc", "[", 
         RowBox[{
          RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], "]"}]}], 
       " ", 
       RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.9229558148577266`*^9, 3.9229558727892213`*^9}}],

Cell[BoxData[
 RowBox[{"0.0009381164411238867`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.00043107594505450796`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.9229558463868723`*^9, 3.922955873255595*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"lambda", "=", "1"}], ",", 
     RowBox[{"n", "=", "2"}], ",", 
     RowBox[{"m", "=", "1"}]}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"1", " ", "lambda"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"lambda", "/", "50"}]}], ",", " ", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Efieldsint", "[", 
          RowBox[{
          "k", ",", "r", ",", "acoeff", ",", "bcoeff", ",", "theta", ",", 
           "phi", ",", "numberOfModes"}], "]"}], ".", 
         RowBox[{"Pfunc", "[", 
          RowBox[{
           RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], "]"}]}], 
        " ", 
        RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"phi", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<MultiDimensionalRule\>\""}]}], 
      "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9229559038720675`*^9, 3.922955913356044*^9}}],

Cell[BoxData[
 RowBox[{"0.003994480836878553`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.007730279732707858`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.9229559623847914`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddata0", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lambda", "=", "1"}], "}"}], ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "=", 
         RowBox[{"1", " ", "lambda"}]}], ",", 
        RowBox[{"I0", "=", "1"}], ",", 
        RowBox[{"l", "=", 
         RowBox[{"lambda", "/", "50"}]}], ",", " ", 
        RowBox[{"k", "=", 
         RowBox[{"2", " ", 
          RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
        RowBox[{"eta", "=", 
         RowBox[{"120", " ", "Pi"}]}], ",", 
        RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
      RowBox[{"Monitor", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Efieldsint", "[", 
               RowBox[{
               "k", ",", "r", ",", "acoeff", ",", "bcoeff", ",", "theta", ",",
                 "phi", ",", "numberOfModes"}], "]"}], ".", 
              RowBox[{"Pfunc", "[", 
               RowBox[{
                RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], 
               "]"}]}], " ", 
             RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"phi", ",", "0", ",", 
              RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", "\"\<Trapezoidal\>\""}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9230172783412457`*^9, 3.923017301177105*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.15552709184082888`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.024752897584575745`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.11045888460639769`"}], "-", 
      RowBox[{"0.01742400515626185`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.07776354592041443`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.012376448792287869`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.01198344249663898`"}], "+", 
      RowBox[{"0.023190839038693213`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.02396681647937867`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.04638196250447449`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.03949208804384159`"}], "+", 
      RowBox[{"0.0754040880228985`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.00399446941322978`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.007730327084079081`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.0004993101040266226`"}], "+", 
      RowBox[{"0.0009662849599455495`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.0015651859110956661`"}], "-", 
      RowBox[{"0.0022578874357255616`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.005750859580322684`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.008296007800264245`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.016366740534998918`"}], "-", 
      RowBox[{"0.023610821624651813`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.042037429811124224`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.06142193557830914`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.001363895044583242`"}], "-", 
      RowBox[{"0.0019675684687209876`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.00004792382983602308`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.00006913339833553451`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2.1738693209666147`*^-6"}], "-", 
      RowBox[{"3.1359547718400835`*^-6", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.00021560897952882518`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.000013379093897702976`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.0012196685752789496`"}], "-", 
      RowBox[{"0.00007568358432454708`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.005215522459725463`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.0003236341944050994`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.019669196375203757`"}], "-", 
      RowBox[{"0.0012214648493589979`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.07001427102907387`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.004028602666930543`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.0009834598187601871`"}], "-", 
      RowBox[{"0.000061073242467951`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.000014487562388126281`", "\[VeryThinSpace]", "+", 
      RowBox[{"8.989838733469028`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2.419977331896724`*^-7"}], "-", 
      RowBox[{"1.5016584190979547`*^-8", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"5.347444928825543`*^-9", "+", 
      RowBox[{"3.3182276530808053`*^-10", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.000011172069796061557`"}], "+", 
      RowBox[{"8.385520611664532`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.00008832296425720365`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.00006629336013813658`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.0005204480754683743`"}], "+", 
      RowBox[{"0.0003906373762175147`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.0026558970616521026`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.0019934647592685286`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.01254670212351659`"}], "+", 
      RowBox[{"0.009418306398169065`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.05678520105400553`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.042908612997387595`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.00041822340411722065`"}], "+", 
      RowBox[{"0.000313943546605635`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"3.1617822162523326`*^-6", "-", 
      RowBox[{"2.3731723324627506`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2.5815876759073894`*^-8"}], "+", 
      RowBox[{"1.9376853978940513`*^-8", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"2.433944120905128`*^-10", "-", 
      RowBox[{"1.82686728784284`*^-10", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "3.078722946109671`*^-12"}], "+", 
      RowBox[{"2.3108247010445392`*^-12", " ", "\[ImaginaryI]"}]}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.923017320500504*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddata", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lambda", "=", "1"}], "}"}], ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "=", 
         RowBox[{"1", " ", "lambda"}]}], ",", 
        RowBox[{"I0", "=", "1"}], ",", 
        RowBox[{"l", "=", 
         RowBox[{"lambda", "/", "50"}]}], ",", " ", 
        RowBox[{"k", "=", 
         RowBox[{"2", " ", 
          RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
        RowBox[{"eta", "=", 
         RowBox[{"120", " ", "Pi"}]}], ",", 
        RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
      RowBox[{"Monitor", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Efieldsint", "[", 
               RowBox[{
               "k", ",", "r", ",", "acoeff", ",", "bcoeff", ",", "theta", ",",
                 "phi", ",", "numberOfModes"}], "]"}], ".", 
              RowBox[{"Pfunc", "[", 
               RowBox[{
                RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], 
               "]"}]}], " ", 
             RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"phi", ",", "0", ",", 
              RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", "\"\<MultiDimensionalRule\>\""}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9229318904448795`*^9, 3.9229318904892993`*^9}, {
   3.922932152302081*^9, 3.9229321800394974`*^9}, {3.922947198095834*^9, 
   3.922947214686384*^9}, {3.9229474002949443`*^9, 3.9229474003747315`*^9}, {
   3.922956397053383*^9, 3.9229564089527206`*^9}, 3.9229616413718576`*^9, {
   3.9229616923477945`*^9, 3.9229616993345904`*^9}, {3.9229618231776943`*^9, 
   3.92296183283874*^9}, {3.922961934156605*^9, 3.922961934701848*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.15552700992066543`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.02475289241475841`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.10997420319254333`"}], "-", 
      RowBox[{"0.017502938122051184`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.07776350496033274`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.01237644620737918`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.011983442511471775`"}], "+", 
      RowBox[{"0.023190839197352788`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.023966885014541507`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.04638167839390957`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.03913775925803596`"}], "+", 
      RowBox[{"0.07574096376775588`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.003994480836878553`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.007730279732707858`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.0004993101047230124`"}], "+", 
      RowBox[{"0.0009662849665359328`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.0015651858574196572`"}], "-", 
      RowBox[{"0.0022578874007871622`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.0057508600544705765`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.008296008043719952`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.01636723464894448`"}], "-", 
      RowBox[{"0.023610852812727234`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.04252332315943031`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.061342795078245964`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.0013639362210697986`"}], "-", 
      RowBox[{"0.0019675710678285652`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.0000479238337887167`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.00006913340036165185`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2.173869246330832`*^-6"}], "-", 
      RowBox[{"3.1359547234957086`*^-6", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.00021560897993604138`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.00001337909390716199`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.0012196685743770983`"}], "-", 
      RowBox[{"0.00007568358423787207`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.005215522206196859`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.00032363661931105397`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.01966896597144385`"}], "-", 
      RowBox[{"0.0012205101251155795`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.07036983191516673`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.004366629941907931`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.0009834482985148472`"}], "-", 
      RowBox[{"0.000061025506254144474`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.00001448756168446435`", "\[VeryThinSpace]", "+", 
      RowBox[{"8.989906091034025`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2.419977330163889`*^-7"}], "-", 
      RowBox[{"1.5016584184709362`*^-8", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"5.34744493897495`*^-9", "+", 
      RowBox[{"3.3182276557013135`*^-10", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.000011172069724694902`"}], "+", 
      RowBox[{"8.385520666807598`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.00008832296628471218`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.00006629336168530219`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.0005204480699647838`"}], "+", 
      RowBox[{"0.0003906373799752439`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.002655900435420389`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.0019934630319373937`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.012547950105954038`"}], "+", 
      RowBox[{"0.009418227553523898`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.05727329445935671`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.042988130642290075`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.00041826500349833933`"}], "+", 
      RowBox[{"0.0003139409185216286`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"3.161786232545599`*^-6", "-", 
      RowBox[{"2.3731702760539185`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "2.58158764878967`*^-8"}], "+", 
      RowBox[{"1.9376854164676375`*^-8", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"2.433944176777725`*^-10", "-", 
      RowBox[{"1.8268673303636086`*^-10", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "3.078722918361484`*^-12"}], "+", 
      RowBox[{"2.3108246999000993`*^-12", " ", "\[ImaginaryI]"}]}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.922940006029087*^9, 3.922947523642766*^9, 
  3.92295578972379*^9, 3.922960364327253*^9, 3.9229619316614547`*^9, 
  3.9230171251216497`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lambda", "=", "1"}], "}"}], ",", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"1", " ", "lambda"}]}], ",", 
          RowBox[{"I0", "=", "1"}], ",", 
          RowBox[{"l", "=", 
           RowBox[{"lambda", "/", "50"}]}], ",", " ", 
          RowBox[{"k", "=", 
           RowBox[{"2", " ", 
            RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
          RowBox[{"eta", "=", 
           RowBox[{"120", " ", "Pi"}]}], ",", 
          RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"b2func", "[", 
            RowBox[{"ddata", ",", "m", ",", "n", ",", "k", ",", "r"}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
    ",", "1*^-8"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9229615437067757`*^9, 3.9229616030518284`*^9}, {
   3.9230171860273304`*^9, 3.9230171894528446`*^9}, {3.9230173980727053`*^9, 
   3.923017401238141*^9}, {3.9230174476015215`*^9, 3.923017451640202*^9}, {
   3.9230181061015096`*^9, 3.9230181396661167`*^9}, {3.9230239076029296`*^9, 
   3.9230239417853446`*^9}, 3.9230239748492002`*^9, {3.923024112433352*^9, 
   3.9230241168106823`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{
        "0.9999999997941089`", ",", "0.999999998256269`", ",", 
         "0.9999999997941093`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.06249999999560711`", ",", "0.24999999996057226`", ",", 
         "1.0000000006020784`", ",", "0.24999999998531053`", ",", 
         "0.062499999996630924`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.0013717421124409559`", ",", "0.01234567901247884`", ",", 
         "0.11111111110521157`", ",", "1.0000000018762418`", ",", 
         "0.11111111111765326`", ",", "0.012345679012277688`", ",", 
         "0.001371742112476715`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.000015258789062442681`", ",", "0.00024414062499870462`", ",", 
         "0.003906249999706797`", ",", "0.06249999999925521`", ",", 
         "0.9999999998594788`", ",", "0.06249999999561839`", ",", 
         "0.0039062499998621394`", ",", "0.00024414062500444626`", ",", 
         "0.000015258789062687133`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "1.0239999998761931`*^-7", ",", "2.5599999999725308`*^-6", ",", 
         "0.00006400000000102995`", ",", "0.001599999999962632`", ",", 
         "0.039999999999113973`", ",", "1.000000000662739`", ",", 
         "0.04000000000031924`", ",", "0.0015999999999159315`", ",", 
         "0.00006400000000257784`", ",", "2.5599999999984237`*^-6", ",", 
         "1.0240000001458868`*^-7"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9229615756134005`*^9, 3.922961603369499*^9}, 
   3.9230171901212687`*^9, {3.9230173938461943`*^9, 3.923017401755129*^9}, 
   3.923017451924982*^9, {3.923018107697564*^9, 3.9230181401253014`*^9}, {
   3.9230239146268687`*^9, 3.923023942089966*^9}, 3.923023977717022*^9, {
   3.9230241133645144`*^9, 3.9230241172951293`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "bcoeff", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9229461411144433`*^9, 3.9229461471577253`*^9}, {
  3.922946221213826*^9, 3.9229462212994556`*^9}, {3.9230174821323357`*^9, 
  3.923017485303297*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.0625`", ",", "0.25`", ",", "1.`", ",", "0.25`", ",", "0.0625`"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.0013717421124828531`", ",", "0.012345679012345678`", ",", 
         "0.1111111111111111`", ",", "1.`", ",", "0.1111111111111111`", ",", 
         "0.012345679012345678`", ",", "0.0013717421124828531`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.0000152587890625`", ",", "0.000244140625`", ",", "0.00390625`", 
         ",", "0.0625`", ",", "1.`", ",", "0.0625`", ",", "0.00390625`", ",", 
         "0.000244140625`", ",", "0.0000152587890625`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "1.024`*^-7", ",", "2.56`*^-6", ",", "0.000064`", ",", "0.0016`", ",",
          "0.04`", ",", "1.`", ",", "0.04`", ",", "0.0016`", ",", "0.000064`",
          ",", "2.56`*^-6", ",", "1.024`*^-7"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9229462222179193`*^9, 3.9230174855971556`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"edata", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", "=", "1"}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"1", " ", "lambda"}]}], ",", 
         RowBox[{"I0", "=", "1"}], ",", 
         RowBox[{"l", "=", 
          RowBox[{"lambda", "/", "50"}]}], ",", " ", 
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
         RowBox[{"eta", "=", 
          RowBox[{"120", " ", "Pi"}]}], ",", 
         RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
       RowBox[{"Monitor", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Efieldsint", "[", 
               RowBox[{
               "k", ",", "r", ",", "acoeff", ",", "bcoeff", ",", "theta", ",",
                 "phi", ",", "numberOfModes"}], "]"}], ".", 
              RowBox[{"BSinfunc", "[", 
               RowBox[{
                RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"phi", ",", "0", ",", 
               RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Trapezoidal\>\""}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9228740863903913`*^9, 3.922874108895547*^9}, {
   3.9228747842112894`*^9, 3.922874797192943*^9}, {3.922874910787367*^9, 
   3.922874911046118*^9}, 3.9229474302082243`*^9, {3.9229632009518743`*^9, 
   3.922963214842224*^9}, {3.9230175103236217`*^9, 3.9230175122757354`*^9}, {
   3.9230176531596923`*^9, 3.923017653242642*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lambda", "=", "1"}], "}"}], ",", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"1", " ", "lambda"}]}], ",", 
          RowBox[{"I0", "=", "1"}], ",", 
          RowBox[{"l", "=", 
           RowBox[{"lambda", "/", "50"}]}], ",", " ", 
          RowBox[{"k", "=", 
           RowBox[{"2", " ", 
            RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
          RowBox[{"eta", "=", 
           RowBox[{"120", " ", "Pi"}]}], ",", 
          RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"bfunc", "[", 
            RowBox[{"edata", ",", "m", ",", "n", ",", "k", ",", "r"}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
    ",", "1*^-7"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.923017627997202*^9, 3.923017630625004*^9}, {
  3.9230178339721603`*^9, 3.923017834298828*^9}, {3.9230180548905487`*^9, 
  3.9230180553416348`*^9}, {3.9230192734333763`*^9, 3.9230192783648252`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{
        "0.9988145693796386`", ",", "0.9999987149158147`", ",", 
         "0.9989030908463593`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.0625001404038159`", ",", "0.25044905596543127`", ",", 
         "1.0000034885145277`", ",", "0.24859968765686696`", ",", 
         "0.06250009551299783`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.0013717581092639799`", ",", "0.012344648600875172`", ",", 
         "0.11562740016820683`", ",", "1.000010682620141`", ",", 
         "0.11276953551533297`", ",", "0.012346881845907001`", ",", 
         "0.00137172392137243`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.000015258626198249526`", ",", "0.00024427727069213786`", ",", 
         "0.003903976824357661`", ",", "0.056408426116912116`", ",", 
         "1.0000254805651547`", ",", "0.06909029410194012`", ",", 
         "0.003908156901912483`", ",", "0.00024400177921240197`", ",", 
         "0.000015258953174337198`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "1.0240000222771892`*^-7", ",", "2.5592659580525603`*^-6", ",", 
         "0.00006421152138827526`", ",", "0.001602518640647132`", ",", 
         "0.04771673019092448`", ",", "1.0000366119161954`", ",", 
         "0.051698385489249966`", ",", "0.0015976685331394677`", ",", 
         "0.00006399697960867315`", ",", "2.5607357296990197`*^-6", ",", 
         "1.0239999946047003`*^-7"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9230192786846333`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lambda", "=", "1"}], "}"}], ",", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"1", " ", "lambda"}]}], ",", 
          RowBox[{"I0", "=", "1"}], ",", 
          RowBox[{"l", "=", 
           RowBox[{"lambda", "/", "50"}]}], ",", " ", 
          RowBox[{"k", "=", 
           RowBox[{"2", " ", 
            RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
          RowBox[{"eta", "=", 
           RowBox[{"120", " ", "Pi"}]}], ",", 
          RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"bfunc", "[", 
           RowBox[{"edata", ",", "m", ",", "n", ",", "k", ",", "r"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
    ",", "1*^-7"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.923017627997202*^9, 3.923017630625004*^9}, {
  3.9230178339721603`*^9, 3.923017834298828*^9}, {3.9230180548905487`*^9, 
  3.9230180553416348`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.9988145693796386`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.0003696284268819572`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.9999987149158147`", "\[VeryThinSpace]", "-", 
          RowBox[{"2.2583565764677793`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.9989030908463593`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.0004598150951083124`", " ", "\[ImaginaryI]"}]}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.0625001404038159`", "\[VeryThinSpace]", "+", 
          RowBox[{"3.548299157517254`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.25044905596543127`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.0021539219238233404`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"1.0000034885145277`", "\[VeryThinSpace]", "-", 
          RowBox[{"6.538253375043546`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.24859968765686696`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.0020004957388784494`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.06250009551299783`", "\[VeryThinSpace]", "-", 
          RowBox[{"3.745675132803272`*^-7", " ", "\[ImaginaryI]"}]}]}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0.0013717581092639799`", ",", 
         RowBox[{"0.012344648600875172`", "\[VeryThinSpace]", "-", 
          RowBox[{"7.716314131068006`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.11562740016820683`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.00268047657644066`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"1.000010682620141`", "\[VeryThinSpace]", "-", 
          RowBox[{"8.359582388206555`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.11276953551533297`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.004749228775632851`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.012346881845907001`", "\[VeryThinSpace]", "+", 
          RowBox[{"7.472039450073104`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
         "0.00137172392137243`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.000015258626198249526`", ",", "0.00024427727069213786`", ",", 
         "0.003903976824357661`", ",", 
         RowBox[{"0.056408426116912116`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.00086193548499457`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"1.0000254805651547`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.000028208704197896228`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.06909029410194012`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.0017858382362287654`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.003908156901912483`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.2926480424988547`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
         "0.00024400177921240197`", ",", "0.000015258953174337198`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "1.0240000222771892`*^-7", ",", "2.5592659580525603`*^-6", ",", 
         RowBox[{"0.00006421152138827526`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.0817047089517142`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.001602518640647132`", "\[VeryThinSpace]", "-", 
          RowBox[{"4.488596032634464`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.04771673019092448`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.009799885529991056`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"1.0000366119161954`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.00003587755309580887`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.051698385489249966`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.0024269833987126226`", " ", "\[ImaginaryI]"}]}], ",", 
         RowBox[{"0.0015976685331394677`", "\[VeryThinSpace]", "+", 
          RowBox[{"5.159289265776936`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
         "0.00006399697960867315`", ",", "2.5607357296990197`*^-6", ",", 
         "1.0239999946047003`*^-7"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.923017631317712*^9, 3.923017803177534*^9, 
  3.92301783458867*^9, 3.9230180563694124`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gdata", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", "=", "1"}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"1", " ", "lambda"}]}], ",", 
         RowBox[{"I0", "=", "1"}], ",", 
         RowBox[{"l", "=", 
          RowBox[{"lambda", "/", "50"}]}], ",", " ", 
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
         RowBox[{"eta", "=", 
          RowBox[{"120", " ", "Pi"}]}], ",", 
         RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
       RowBox[{"Monitor", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Efieldsint", "[", 
               RowBox[{
               "k", ",", "r", ",", "acoeff", ",", "bcoeff", ",", "theta", ",",
                 "phi", ",", "numberOfModes"}], "]"}], ".", 
              RowBox[{"CSinfunc", "[", 
               RowBox[{
                RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"phi", ",", "0", ",", 
               RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Trapezoidal\>\""}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9228748267704706`*^9, 3.9228748317701178`*^9}, {
   3.9228749143654757`*^9, 3.9228749144532413`*^9}, 3.9229474375127583`*^9, {
   3.922963224976624*^9, 3.9229632336993837`*^9}, {3.9230178595692015`*^9, 
   3.9230178708767385`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lambda", "=", "1"}], "}"}], ",", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"1", " ", "lambda"}]}], ",", 
          RowBox[{"I0", "=", "1"}], ",", 
          RowBox[{"l", "=", 
           RowBox[{"lambda", "/", "50"}]}], ",", " ", 
          RowBox[{"k", "=", 
           RowBox[{"2", " ", 
            RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
          RowBox[{"eta", "=", 
           RowBox[{"120", " ", "Pi"}]}], ",", 
          RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"afunc", "[", 
            RowBox[{"gdata", ",", "m", ",", "n", ",", "k", ",", "r"}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
    ",", "1*^-6"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.92301796822736*^9, 3.9230179711602793`*^9}, {
  3.9230241590164394`*^9, 3.923024162882205*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{
        "0.9991090418124852`", ",", "0.999997957606072`", ",", 
         "0.9990412753893851`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.25000629191767515`", ",", "0.5000351681594359`", ",", 
         "1.0000023091723969`", ",", "0.4982836699541664`", ",", 
         "0.2500066393447498`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.037037008835762525`", ",", "0.11111170749437413`", ",", 
         "0.3358934055397167`", ",", "1.0000082873827532`", ",", 
         "0.3350401469043331`", ",", "0.11111200414239855`", ",", 
         "0.03703700845456449`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.003906250159600522`", ",", "0.015624931407819937`", ",", 
         "0.062499980545070166`", ",", "0.24440944896425199`", ",", 
         "1.0000260753454613`", ",", "0.2555641582520532`", ",", 
         "0.06250016991840848`", ",", "0.015624927786058338`", ",", 
         "0.0039062501598778505`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.00031999999883461794`", ",", "0.0016000005261520597`", ",", 
         "0.007999881176316045`", ",", "0.040001830124196204`", ",", 
         "0.2032594833311371`", ",", "1.0000453112569956`", ",", 
         "0.2052335477970197`", ",", "0.04000047332530815`", ",", 
         "0.007999998360152348`", ",", "0.0016000005281401252`", ",", 
         "0.00031999999883319677`"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.923017971592617*^9, 3.9230241632305064`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "acoeff", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9229461411144433`*^9, 3.9229461471577253`*^9}, {
  3.923018074459525*^9, 3.9230180775867276`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0.25`", ",", "0.5`", ",", "1.`", ",", "0.5`", ",", "0.25`"}],
         "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.037037037037037035`", ",", "0.1111111111111111`", ",", 
         "0.3333333333333333`", ",", "1.`", ",", "0.3333333333333333`", ",", 
         "0.1111111111111111`", ",", "0.037037037037037035`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.00390625`", ",", "0.015625`", ",", "0.0625`", ",", "0.25`", ",", 
         "1.`", ",", "0.25`", ",", "0.0625`", ",", "0.015625`", ",", 
         "0.00390625`"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0.00032`", ",", "0.0016`", ",", "0.008`", ",", "0.04`", ",", "0.2`", 
         ",", "1.`", ",", "0.2`", ",", "0.04`", ",", "0.008`", ",", "0.0016`",
          ",", "0.00032`"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.922946147705758*^9, 3.922946176540524*^9}, 
   3.9230180779025464`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Definiciones del campo de un dipolo (Balanis, ec. (4.10a), (4.10b))\
\>", "Section",
 CellChangeTimes->{{3.9137028848286033`*^9, 3.9137029474050255`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Edipoler", "[", 
   RowBox[{
   "r_", ",", "theta_", ",", "k_", ",", "eta_", ",", "l_", ",", "I0_"}], 
   "]"}], ":=", 
  RowBox[{"eta", " ", "I0", " ", "l", " ", 
   RowBox[{
    RowBox[{"Cos", "[", "theta", "]"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Pi", " ", 
      RowBox[{"r", "^", "2"}]}], ")"}]}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"I", " ", "k", " ", "r"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "I"}], " ", "k", " ", "r"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.913206954070815*^9, 3.9132070565034614`*^9}, {
  3.9132070878933434`*^9, 3.913207090154496*^9}, {3.9132074408272057`*^9, 
  3.913207441315274*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Edipoletheta", "[", 
   RowBox[{
   "r_", ",", "theta_", ",", "k_", ",", "eta_", ",", "l_", ",", "I0_"}], 
   "]"}], ":=", 
  RowBox[{"I", " ", "eta", " ", "k", " ", "I0", " ", "l", " ", 
   RowBox[{
    RowBox[{"Sin", "[", "theta", "]"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "Pi", " ", "r"}], ")"}]}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"I", " ", "k", " ", "r"}], ")"}]}], "-", 
     RowBox[{"1", "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", " ", "r"}], ")"}], "^", "2"}]}]}], ")"}], " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "I"}], " ", "k", " ", "r"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.913207061327961*^9, 3.913207081848273*^9}, {
   3.913207125762285*^9, 3.913207165071419*^9}, {3.91320744507514*^9, 
   3.913207450138739*^9}, 3.9132074882920794`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Edipolefarfieldtheta", "[", 
   RowBox[{
   "r_", ",", "theta_", ",", "k_", ",", "eta_", ",", "l_", ",", "I0_"}], 
   "]"}], ":=", 
  RowBox[{"I", " ", "eta", " ", "k", " ", "I0", " ", "l", " ", 
   RowBox[{
    RowBox[{"Sin", "[", "theta", "]"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "Pi", " ", "r"}], ")"}]}], " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "I"}], " ", "k", " ", "r"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9228736900874276`*^9, 3.922873697386981*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lambda", "=", "1"}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"150", " ", "lambda"}]}], ",", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"0.05", " ", "lambda"}]}]}], "}"}], ",", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"Edipoler", "[", 
         RowBox[{
         "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
         "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.913207182064152*^9, 3.9132072491145945`*^9}, {
  3.9132073688907413`*^9, 3.913207433923309*^9}, {3.913207474243801*^9, 
  3.9132074748447213`*^9}, {3.9132076914762554`*^9, 3.913207734118306*^9}, {
  3.913207764633556*^9, 3.9132078093828287`*^9}, {3.9132078462030582`*^9, 
  3.913207863920182*^9}, {3.9137070324153004`*^9, 3.9137070325384207`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{
  3.9132078100696063`*^9, {3.913207846676923*^9, 3.9132078650782804`*^9}, 
   3.9137070329274974`*^9, 3.913788516827322*^9, 3.913812927026935*^9, 
   3.9152937557563505`*^9, 3.9228734814792337`*^9, 3.9230185597347*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lambda", "=", "1"}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"0.25", " ", "lambda"}]}], ",", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"0.05", " ", "lambda"}]}]}], "}"}], ",", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"Edipoletheta", "[", 
           RowBox[{
           "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
           "]"}], "]"}], ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"Edipolefarfieldtheta", "[", 
           RowBox[{
           "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
           "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9132075021199336`*^9, 3.913207503822548*^9}, 
   3.913207871014259*^9, {3.9228737762979865`*^9, 3.9228738134837503`*^9}, {
   3.9228738477141314`*^9, 3.9228738800430875`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUm3k4VV8Xx80ZSjLLPM/3HvPsrDSYGkSSKUWGkMwVKfUTDcZUUpJUEkJK
KHVWKmMpQ1HKUChKSITEe96/7vO597n77L2+37X2Wvd5rrz3fkdfNhYWlh8c
LCz/f53++JCdKf2rtme2f17y7/WaBq7SdahXTiVcznxeOStLyR95t7taD6nK
ixULd2ZJ6vf50p74TY1U2d5nZz/83UpZ+6a9u6j3hrJ+ZPEpddaLKmp7cmg3
dFIWjOhd0vMBlBFDzk90Uzd1OVqIee9vGPXV7ljRPdeP1ODXpA98MQepubgv
Rav1+imRYo9dgrNHKbnYg4/sTT5TYWeqH/aZJlDWban8QeQgZe7yJfDE3EnK
ara+OHr9MLX/7Lr8aaNUyiu781Kw/TfK+wPndZG/GdT2g/Ff7LaOUp0+/3kJ
rD5Ppe0sSlnp8oOCHx0LXw9epMpZzYQUdCYondWLsXIzV6mu7juC3XqTFGs7
xWPBm081pCg7xRn+oviTzv91MLlBtUsLF2aY/aZaq2LvKv8ppJTcmC8WLaYp
niNjXQMniqkyuUv6LjBDUdZmI7H6pVRTU5xU/bpZij154srV2btUk6h57ocN
c1R5e1XE3aP3qB0l7xLe2cxTA64qt0tEK6nMrVrn4jcuULUFz37tiKymZC6N
KK1RZ8GN+a0fXX9SlKqpCvTcZkH/W8sX1s4jJaL0SMFXgxV9JvTLbTjrKFO/
WNsNmmyYl5zzW1TvOeWl1RtGaHHgLvJbduFYIzUSOC9pVsKB61U7H/MTzVTH
NfsCHS1OZL/Ek+Ea00LZC3ns7dfkwnqtJKOLKq10HDz4jTS40fzaWrPmn23U
7Zd1Mpm3ufFwjEpuXFk7lbhaTrtLjQdZNul/lY7soFzT7LaJqPLiJnNPDQWe
t5RrTNR6D4XlOJEhcF7Ru5tarNoQ0MkjgG6FF+M3v+6j/v4c3DW2SQBNbnIm
c4f3U78y+SumMgQQIj3J8sV+qrq/SaVBYhVK817e/kbmM9VyZ/XHeDVB5BN/
wrMmZpBicI10/F0jjPv5jojbXRmh9q1r5KtPEEbj43ueo/0o9YLqazrYIIyX
x1+cDV8YpTgenLt1YaMIejo1ByXs+UHt71HPKnYWxXXL2B3ttoxTXwpPisx6
i6M3r6qHQ8MvavF9prrqDXGcL+fJ1SWmqPJgz+WmQ+LYYr6YpHlpitp/Kk6Y
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
3HQBHHyrcqvrHitW1z4ZeLwDcHnRjsGTlSzY2iMf3OUGaH75jLetIQvuWphJ
7nYHfP207P3vfUtUW+alkTYPQMcwV9Fdof+oTZ1XHO/sBHzmJa8UFLZAZe8w
9kzzAsysTRJxD/9LjfOJ5e3dBfjtO7V/LGKOilkb0MLlDXjNSozKiJylts84
VDTRnA6ilEzUH4rbKLA1wQcwb1bg6kzUNHV0X/D1L3sA3fYaiSbu+k39fH5j
5JwvYMiKkbJFO3qO3+zJYuEHeFMq/fpug18Ub8j74R6ad0qUqZXLTlIVb/1y
wvwBAyP6or/zTFAXT3rKLdJsui3vjPq3MerqB9nwYwGAq08rnQ5OH6HS1j0/
HLyX1tPRqnn3nq/U8qu5+p0083u0NZsbD1FLMgbVuoGAA9D7d4nvC3XmgfSy
kzTfdEx/daevn7ItmZXrpPnd4027Mvw+UTcvh3KKBdH7HfyhWrDiPbU+yvS+
A80vDV62597vpDyPimgfo/mO2/s18e5vqD/OLfsLab4iaVySy9FIMb4zD9fT
3HOqrm7tjSfU7iR5xx6aQ7cLX9hypIhyazo5OUzzYeWzqssvppN+BTvcRmgu
TFQyUj9TSfoGpiZ/pnnjwuhlyYPPyNdVOifbaS4Tu/QsWeMleTNp26Yamlf0
a6jtD2kn96gLfbxAc3zLX/K/hnfkgNU5/SCaxzrWNsbJ9ZByb7hdDGk+fUex
3/VQH7lasWTtLH3ew6v3O/GMDJBHvzybL6d579TPK1tFBkkf/rzDu2ge1fL0
+m/NMDkyfamJi2anj7mqOfu+kZ0g8fk6Hd9EqcrE7OxRUm30VL0RzVubqeWH
XvwgL4PfgTpanyRgsTOe/EmKDutMr6X5N0+If2DqBCn/OgZqaT1Tv46LqNyY
JNdYvXfVpLnuXf/sq5pfpGPX+JoM2g/JmhXdu15PkfXRQXNjtH/eZenetZqf
JvU5D70/Q/uL7S5plrbyD6m49SL7K9p/Q2PfB58qzZJ5XkYsnDQrlgk96tw8
T5a/jI903Q0ovcSMSr22SGr4Ou855wm4qMGxOFK5RIoqkRbJdH44/+ydFfBl
gXr5lxMxdP5sGZOXX3WIFY403Phh7gpou6bVWT6PHfpdd7s7bQO0SLXpKlPn
gEPN2tpsTrTe7u+qVe9xwNYHWwdv0fmstn+tXtsLTgg/WMvdvZn2d9onrfmR
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
IkWW0opkL21vHltoeSiyhKQYEmXubKV6Itm3R0ZS5CGqifD+3n/fPz/Xua5z
3ff9/d7nPv+cI3aOAbo0ZecHMmaIcT12b/VVBmgxTotK/zZF/n8WalfeZkCH
dePGyj5TFMK7+nhFIwNKg9skWjNNUdCVZTpJFIO8kFFHIwVTpOQqQkkTx+Cv
piALX2FTVF4guKUohYEVpan05gwbvSjHB0bkMdDQ1T68/I6NbnQIB71cg0ED
5UZbTiobLa0TedWnhUHHBm5OfTwbHROLvjioi8F2s72nhk+wkYaGoyKXgkFw
84CH0k42UmrfTM43xQg/HOdzlNhoSqhujeVaDDbPnz92QJSN0sdIQTwLDGJO
pkcEzrJQ35lNXTetMNh18/rmk+9ZyFbl/L/TCIMCjQvapxpYqMLOyH7tZgw4
d/xqTlSwkDut68E1OwymR+U8AtJYSHQqr7pkKwapq/hxPudY6F6A969yRwzm
JRpyOCdZqHG8dVWqEwYHZTulrHayUAfJMT11Nwa6TjNm3xVZqPLSWx3jPRgI
CzX1DImw0Lt2Zm+FOwYQgc00f2OisVJuTbonBqws9vPUdiZS0ZTkT3kR+bCF
r4fWM1EBudBk3f/eP7q067iXM1FSZDv1lg8G+6x/paqmMlEGrOzlHsDgh1xS
5q84Jsqy+5Ff54uBBX7vz+7jTOQYdj65+iAGiWc/XeT6MJGp6svM3EMY7PGd
Tk12YaIW76GaSD8MRiP9eUHWxPrIrMDWHwOqwTd1WyYTqWXZuAgfxqA0wbxW
U5uJAgVqDSUE7z3bXySQZ6Klho7ttgEYOKZcErQJMZG1Re90G8HZkx+r7k1j
CBZySxwDMfCw+msuZhhD98m1UVUEY1y357vbMLRNpsZPIYjQ+3M1jQ4Y8q62
8/Mk2Kz7hK3oQwxFH1WLzCQ4vZmm0XsbQ84TC4X1BCuglIYHSRh6zeF9HiRY
dtHB9nwMhg5sdbT+THBKD6nKPQRDyvXXHowSLAoBOoz9xH7YHWYbwcp5erdI
ThhqDYl7VULw8YBhRp8VhupeeJwJIziv1266zARD/pM+VmyC59LEJhM0MCS7
1En+h4hfZamB5SmHoYSav0aOE1weV6Z5/xcDWeV++TFD5G9UL+i608VASWEu
nP0Ej6x0rcioYCCPbeGkGqJ+m0PuDSQmM5BvnNry/+prGfAp4sIRBtrbJGO/
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
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwUmHk8Fe8Xx5Fd9p1E9t29Y1/nuCWU9kIoSpvoKyUqCiVESkiyJEtlV1RK
mGNJKio7FSlZKlISJfKb31/39X7N3DvP8/l8zpnn3BW7/Tfv5WBjYxvnZGP7
/2fexJmKtufT1RgVWH5g8tajpufhnlzXyqmAwQsG/tuVqTXPtTbPp9ZTayfc
Hh7czqI8Fyf6vIdfUD5tX8ou5W2l1C3GlvWmtlOfu9Pfum7fTYlEuhDjNj3U
ra6IsXNFflS435Nbnz+9pWJerT2xOy+QCrH79Gev3SD1rE2jL1ImlGL+iHG0
T/1IpaRr+4huP0MN3TYLk/r6iZIxbeNIM4umeGbHXdqsRylZGbmQnsIL1IJV
RcKxhM+UcIk366PLZUpxsHSEbegrdYZzLLskN5n6ESYvHWD8jZoaLb/13CyV
iku+Pflh5XeqMWOhw1g6gyq5dFKKM2WKus+Uzv/pkkNtr+pKmav9SZlc2HND
7H4eNZ7nNtA/Ok1tPle4/rXJbark01ebfeazVJxn3ohCfjGVNGkgxbf7N1X2
YUlk/tUyytZVmJkc+4fab+KRNbTtLsWrxV228+1f6tjJN8fe3LhHnVAUaktf
skAVG+6rqt31gNKvT75XrfOPKuLyzxsxekitn0nMardmw7x7mlZzotVUUwX3
j98XOPBYYK/+qS31lHfd2acpSkvwL5uw9FBoA6Ww021xxb0lePbqjtrdZY2U
hmvu1n9vOHHnsqmrhQZPqS989Z9qNXiwcYfWbfPMFuqfaanEwyoefDuwY2aN
8EtqQklKJ20dL8ZoSFT5xr6iFlTDXkkd5UPVHb/Hvqxro5KVxlw/Vgsgz89V
/QlXOqmY8jXLxTcsxY1pbsz6I13UHqMvWzU/LMWWCn22Y1u7qVxFzf4FTiF0
mu9Lc1frpWYjt3/OURPB7R4B+eILb6kNOt9qRg6IYbmT7+8i24/U9mgvB9FK
MXwdMit/dvAjRQ05+qhzieM2h7aGmYghagPnSj7hbHGM+ZpQdaflE2Vpl83x
ukcCa+RWbXWLGKViiZdmDSCNk46X/rTvm6CSxarOHoqXRsOgkDWSBt8oVHd8
N98njW8m/hqM/vlGlR8XcX12RAa/C7Xyp6/9Tv0ePTghnCuLTgujMoa/f1Da
JtuTef7J42aZiiK5i7+o3zu2/OhzWIb/lv83cpp7hkqJ+vYjLmkZTqaWzyuH
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
rXs6pAxrN/pahcTo4dqFYx5lz5XBKOTM/BNvPbS4qHvhpLkykKRWg0cSehhw
rDJ40kkJLPc6aZ3erIs7RJLN4mMVwFx6dgOvSBsjv7I1p82Wgd4VRtHrJG3U
nEmivISWQc7fD6y8LmnjTr5/7GWrZWF+iYjGXzbaKHAvxHXVX7JgKh99tKuR
gQWb3HnKgTLgsVSi9PKgFm7U32v89L0U6J/Z3+BfrYUeOlnzv+9JQae98CKH
p1pouKchKuyAFPSm1R3I9tHCkV1zSz3mJUHb7OEDxrQmFi8S5K4kktBHmg5K
8TQw54vEdPemJVAjoNvg1KqBbR9xXebXxVD+Q+5W6CsNHFjEMOYPWQy/GPWX
os9pYGnH3LxJhQR0xk9uC5ldjed5L8Ik7cThA/+9w+8mV2GP9nHfNN+FMCcn
NM9rVMcswe0l+vpCwLpnm5TxQh05z4K29HYLgiz3+yhEq6MLb8GIUpwgXBjS
0zR1VEfe5x1+YqKCcMwi0MXpgxoeKNmYMDHAD67bJGd3ValixJoUqxPX56kE
3q6ckXRVzHeS/bFSdJ7KcLRS+0+IKhavMrVuDZ6jup6z4202qKKepOPCwxd4
VNG1kD1nz6zA9bcKbouE/qa2vqbCIncsRyEVjbbksmnqg0NYaJ3kcuxJlPCX
s5+mAjfflZ2oVkajqo/2CW1TVHly9LceC2XMz+g/8Xl2krJRXTMToKeELm9N
gvQ2TlDr3lwcfc2Tx3/XZ629LP6D4jzsLXDKk0frCdFK5qNR6nKHvWPLcXlE
Ox3pcatRSvQ1tSyiWw5jLcLRX/o7Vbx+m/1g5TIMkvDo6WUOU+ElvgFB12Uw
oqZptWvDV0pWoZrhYiaDXjvXuVBqX6mS3f06y4elsaFIdrD7WC+lK9KYu8tW
GncNR/uck+2hXi/JissXlUI3pTc/RS92UtYWoenNeZLo127bpd7TQZ161qDY
7SmJxTzGFRHrDmpkkMvNL1uKNxyaxg8YtVGZTcIPu+cWo9XfhnHOJS2U7Seo
bndZjPJSZZL7spupnRJ8Iy/yJVCsar2M2KMmytGlyWLGRxz9hZa8howGam5v
+6KeroWomLzV27u/jvpuNNX7znwhvsj+RyFGuI4yJ4dnYuJEsSyYlXlM+z11
1WfbSIO9CHq9SDm6XvgddULmyxQfVwjt2iMrbH9UUCers66IKQphms+E0bkr
5VTR9ZWxv30Fkevu+UJSp4zyOVTrfFdbACMtTwd4R76mPPjfJ264zI8d/btG
WDuRMnswHvKpnQ/n+GIvlW8upgSNM+qjGfNcpYCBZPH6AurIcbsxuzYe17PR
Inw6P4+KnLmW1hE5y40Nj9XBnFzqVo3ayqTfM9zbN2+bTIw+p7JficjUZP7k
7hRhWLiznlFnD90fbts/zbUz1XE8JfkPVeSYkf7k7QR3UCWeZfszjYrKfZt9
OHCc+23f3id+zBSq2Vz4twx7jCs+rFUZHJ1M8bacl0r/OspdfjTGpd0hkbJJ
HVSxNvzOzfA6nuHfHEt5JVxbrHJvmGu79+NwR94dqm+6ROU9/yA3be4jU248
gjqZnui/z6uPq5JioGApE06x/9hu11zTww09+2Drol8hVDl7bYkhp4trXul3
5trdC9Tp4NCFU0bt3JHjbhbRLX7UlfjFF/4S/MRtaw6dShr3oWw/7LB4UFvP
NeZ/9NfZX54U/+dM6+Q1tVxv773arS1OlPgme77G2jKu2Mh317u/NlKO5z9n
dtXmcLOelrsl/tKg/u+/OuP/AoyFiT0=
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{{3.9228738493506317`*^9, 3.9228738803291817`*^9}, 
   3.923018559813489*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lambda", "=", "1"}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"150", " ", "lambda"}]}], ",", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"0.05", " ", "lambda"}]}]}], "}"}], ",", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"Edipoletheta", "[", 
           RowBox[{
           "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
           "]"}], "]"}], ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"Edipolefarfieldtheta", "[", 
           RowBox[{
           "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
           "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9132075021199336`*^9, 3.913207503822548*^9}, 
   3.913207871014259*^9, {3.9228737762979865`*^9, 3.922873842875444*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwU2Hc4lu8XAPDMjCJKGSkjGkRFZHWMrMrMpmyJ7J2s7L33u+zt1UZxUFGZ
DYnQl6JpRNrp9/z+6vpcz9P1vPc55z73uYk6+Zi6Mm7YsOEz84YN//9369rR
RbFOx7tMZ1vFT+RsbZPmolSEduzG6qvciqvGmZ3HXK8eutAhi0bujEWfjOmd
I51v834PKqJDj5tDBLm7c98bKVepDkBx0UmhQePhzq7Alb27XmhheSuPI1fI
y87rlisGuYO62Ed27bcgz3RavODV+3L/FO5oNpgg/XzXydf6Tkn+rhHy+B+S
PmO81LmemineOG6CaocFDNtGVjs/Zfc8kh49g2fXx5PCgn90lizEipaMmOPe
Ieku1+K/nTmeU6or/Za4yMdy6S6JATniFg7K9Vnj3OeToxYNzCis+oHVtscW
o7fy/oj8sRGlKlfbLFvt8cFHy8uehtxoxRhilzfugLd6XtvlNfCgc+5Y4OcX
jlhZqn7nyPBW7Codyz//xBmlVHRPSAbyo1ftxatJQy64MSjhQ/CaIGaKPE3N
73fFuo31Wuv5wij0tL/C+8F5PPu4+9yZElEUO7v69ViPO9YctT/iKCCOCi+2
Sn/qvID7znx7x1y7B5c6HAOZWj1x4lrt+Mave3FJtiH1fa0PHlLXrx/UkcUR
UZV8T1NftBPJcpUpO4TLFdsZzoz44raSXMb26sN4lfuf1nK/H+5/7O4g8EgO
A61e8lr2BGDHw4xvEx7HUNKvb6YbAvHYgyXPqmolfDga+4u/IxA/dLVLSH1U
RpabF0RTbgfhvgj9AOckNeRqCPzi0RCCO6WU869maeDBhdH2A/tCUecI8ws/
A03kfLR3w7PKUNRQFnDh4NLCyyuGAq/IYRi2Mzi4u+QEnt1zV/tuRjhK31hk
PTKrizcjciesPKOQv05BznWfEVZYWezrWo7Cx8GjjzuEjFGxOiyIQSUazdRv
BMRWGWNRUpzCpq5oLEo2uX4HTXDUQtBR6VEMsq0e2jTEZYYmnZ/5W8Zi0fRh
ydvZ7daYGJL1SkggDk2Wl3f3dlujWU8J1dcmDn02fnr40tsGt3kzMDyfjMNn
21T1k4dtkfHiU8ZL/8Xj1nOPOzY0nEO7s+ekGd8kYtWvNzl9Lk74Tjj62Cux
JHR1W70c2++ELBcMa4qcknCTxWcrYzln1L5ol4wzSThtZM0hxOqCJpHHvW5O
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
wVKPzU8+/+vx4TLBecd9ZvBy47eAaO2fx299ITE577YAitR2gUHf9eP/un2+
G263Ao9kzdspnIzQ2RH6n/hmG7hca8d6YCcLxM/LccX8OgsPDAp3Dq1xQsGI
ZDbLF3vw191nMdDJDWKXP/bcXHWAg2kxp0mzPJB2e5Poxw9OsJ85fEBCezus
7fOq/PDWGVZeHfoZWMkPjkVju1+8dgEuuTe9/mJC4PHv1nH/UTeIf2xqdExN
BBTmTBlFRs6DbD5b79F6UXDy1Vu/9dgdXpWW+MZLioNdT8h/JPSAiXCvCj4D
SahnyRWSqfWGpx/tBYdMDsIjs0eVard94H4vk7GGsyyMKEbd3ebsC2z1OlkW
9w5BYSRQH/r5QcvPi97XGOSgXu/HGmQEwNYR0UOsHxVBRJJXbR9fINxMtD0d
qawERxdY3/8sDYSwN+s/3+Uqw2uFEA7LuiBYO/z5U7KjGki8Y1t81xMCKlHb
8haua8Dc7Vnk0A8FmasbUsajNOHeqpEy73AobJH3rlU01oLoRO/BgYkwOMfu
R9dZPwE3ZBNXXy+HA392K2N+ph6QDOb9IzijYbr1aiWLljEYNV94l2UQDeVq
kwHGA8awGirOkJMZDVMON8f6LU3gshrPb9utMZCxf3zeJMgUXs/ZL7AKXoET
lxZskh+bwT2DS0qh4nEg9WnSiHvKGgKCbOy0XOLgzMVnPtuSbUDwPUvK98o4
yP69QQYUbeE3b/CsgGQ8aFqq+zOW2MHuhJSC43sToImXe8uBMHuoH1KbfLgn
CY6pjd0uH3IC0pCB2WP7JLh2NXjqtowzPPueO3+9JAneCOxJupXpDGE1w/7H
tyTDj0j7JW8zF/gXUTh94BdxXll6unW/d4XSmcofMo9SIasiaXu+6gX4XiCq
UMiYBiKRkxu3NVyAb3nKf9+opEHUKyuxYEEP8Gyq1D3QnAbdwYLCs7894CLr
Jrpzdjqw+jozGDy6CKK3Ow5bm2aC3r/Tiiy6vqBia7G8lEyc1+onfbTifcFj
z2TP+e5MOMFRQFm65wuioWJzf3ZkwUzzm89Zmn6wP675zkh8FrC7uwYtn/CH
1jYhafdz2dBw7L76p7OBoEB6VUdmzIWVm9rpv6ZDwc/JMu3irlz49tCO48mh
MPh46/cFCeVciFDTuL0rNgyubRcrNPPLhTdPevbs2n8JHkkd16iazoU5T5bh
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
nP0+loEL8QWfIuWaQf6GVjuLVjby56Tsi6ptgvHyZ20fz2bjym7WvvfUJpja
OFreGZqNe3V/8WoXNsF9z+q+I83Z+FHbZnQ0vglWmPMi9Plz0KxOfs3KqQmK
OhgmBT7kYGJwufkCfxO41t4+NsOYi6Wzwm/juZtAWrv+v/ydubg/VryZh7UJ
+r9KNfUa5SLnOW5BptVGkHP9F6p1MxePTa5YGQ40Asu92Z15l/Nwn9bQWMbl
Rtg/5xC+Jz8PI8PNC+z9G8HbxqCY1pSHSZc3Su1xbwRO5b3Xbafz0FBX7V/S
mUbwWj3ePXE8H1Xe3vPp2d8Ioe6rpHe/85GlMjjy77MG+OqUb1jqWoiM2x/w
v97dAM5Uu2z9iEK8Hqkaq721Abhs5+mTeYW4JNyuTGVtgKOLHluv3itEn5sG
/dIL9XB4RDuGW6QIZTIaua+11UO4f82j1GdF+ObNX2V/43rQ1L2iH/6hCFPt
9Hy2adXDrwGDDYb/irBxZN9M/dF62PX5VxPpQDF+fXLrzg3BeqAMTxpNRhWj
o6UOw/G3dfCkVtdweE8Jzn1Pr5APqgODXvab88dKcMqBkVfsfB3scT0w/Pp0
Cd68dfgus3UdLL617g4OLMEdOzhY6lXr4Jjxh91He0rwZaGxfDAT8bxZwvA/
y1IEDeUM8cxaWI7ZstPOk4QXK/7c1qPWgG2LxCf5cBKqXZtK0s6qgcPNTQyL
KST0VwpgUSbmf++Bg7ihnoTfTPtPcDjXQNoFy5LqeRKu+5Ku60vWgNmpR0pz
1mSULLQ6cKahGg5CdVH7eTIuJE5XPi2thg1cyYo+QWTM+Wz96mRaNZgtBv0I
yiLjf5IXuiW8qmFTbsLb7/fJyEmXsUqUqQZvn539XXspePb5vd9sLVXgPffX
NFaOgpS7mk47aVVQFLOouAco2PaFi7w/qwosmszmNlhQcKi9/MVh3ypQinly
cc8VCi5pt57+LVsFhT96Lr1Mo6Cwp5/e691VkLlP+4pHIQVfip+q6fhfF3ca
T+XWBQAcUZmJyhDe6lKnIqRL5KxCF6XMmYeohAyVRpHZyRyOe47jnOdxjHW7
pauiVCtTJIkkigZDrqkJJYrzPu/X9+P/w96/tddav7V/+8uWLYE2Rwnb9Vep
/cbMXwZ+LoYEhX2E+AseVri8+hp7rRgOFRw3uvqGh4cdZxeMecUQk7Tm2KZ/
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
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwU2Hc8lf8XAHCyKZFKRFGiUlHSsI6tsiUrO2RkE1L23vtad9jblaaGY1dm
pUiKjFJSifoaSb/n95fX+3U9z3M/55zPeT7nitp7GjluYGBgmGNmYPj/X+7N
ndl7m+0emTgmvVPP4Gtij7QaCHq8G99o91v/Mkhtlj7jZen6WAoTHrTgnAG9
ufrYLf+1vpMokdzKGkJubU4I+Zx26DFg4Pk8tX6DgWYjda2pXUNqqDEudGZz
wJvmJwuPjmT1aeHRtWZvU/JEs6C9kd5ChzZeP3j/EXllpllZtsBR9pE+jop9
OW9s8KPZ6eae3toRQ9Tlked48HyxedM17ujDr8+jScW457Wry80ik7E/8p9f
wBSL28NOeX+bF0pyhRd7TPFfm5nI40JGDN9nI3r8iTnusryRa1rDjDXmPJss
2y4iD7PP29BlNhSpjvhodt8G56nrJVf0NqNaFelP1ogtypCRKbuGF83bDYS/
DdnhsS3GV2UG+JD++Z+B84tLmPj9hKSE3w4UCvjqH9/vgP6UXZ8DfgvivZvl
5jk9jjjrznvxX7YwrkefjfLsvIw5t9aZjfNFcY9Nx9jpNmd8XPj4k53AXryn
enL3XLMLDl7mqGGpFENdaYlrzPfdkClw7CH7Lwms8a28+6XSE8lslS/6NaXQ
zMpG6oqRF/YeKNwgVSSN/FPj1PPPvZCFplH1oPwoDoXzzM33eGN6hepOwWcy
eNzOp8+0zRdd7oq/H3U9hQ3TjEVt4Icyy4ety8tP49KKVbPAYz/cqPh576FZ
OWRZDfuecM8fLZylExziFHH95tpzt5oA/CgsJN+YpoIvNi9TJPcHYlntuwgf
XVXUPjD1ebA0ELsSN+7g4lbDYVE5rnfkIDz2g+t0W746nuj4c/ZxSjAmcl7/
fGxSCwfstJks3ELRX+OqudN+fbTjW73QOh+KHYa/7Zt3GqBZWwv3BvkwvC7z
hSeqzACNeW+/2tgShnP3flg8QkPME9/CIfcsHOUFyc/6uY2x2c7gVcNwJP41
SXwxtd0cm75Z5QkJRGH/eSm+J63muOfYCxtviyh8P5nYNuJhgRQ5tq5X76JQ
rXZcP2HgIm7RvvLi2odozO9xGWesscYrdoubmKZi8dNgrvJTB3vMEvASercn
DmV8fY5E9dhjgmlucp59HG6qBG5DmUtoKmHq1zIRh1R93yc7WR2QYW+K3d2x
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
obvIyGb/Urp3IbDUfr8xvH9OsQ/XWFEK+Bb36tJuE6hcTD3V77Wu9Fjxy1v9
7WbAWlprl8i1AcbGQ4bENlmACul+30EhFigKNzgQsWoFRTqlYgO/ueC5YF8z
608bsFD/Fd7XvBmiPzNeurtoC0mCLr8LJ3lBaqx6cPaLPagU9FDENbbDmwZd
29lpop46Pk/4l+6A3r6V6aFxBzh2ROyJ756dcNbQYrvvayeYHKj/fEpRBPSz
ZKdEnl+GzrDRKyeqRSGnzOXzvW5nUNjlvy9GfC9suMj3noyuoM7GcXW7rjg8
7eZXlKr0AB1LNakBw8PQt6D7XOmeJxSAZ6DqJSmo6VY23XbJC7o0so+YtkvD
YNxftWfe3rCn6avoLUYZ4L5UXq+c4gvW21Z42WZPwpNzD1b3b/MDkkWhXKjc
acjVrKxeLfAD2Qd/f33OlIM2e/Zh0yp/cDntwJhopwg09Oj/3BYAR4+qyX+/
pQLjhvJlXGcDAaXunHobqgocuvlifAOB0Bv80vqUgRoEqOa19r0NAp27jf5a
6+qwSHH882E+GJYv1Mxmp54BHvoVzhCuMPCNV1diVTOAE1tsw9N1w+AUJXSL
Ya8B/Hc0npyRGgaB/24E95oaQnPy+UJLvnBgPXkw28jfCCR6jXLZBCPgYZzm
7oRuY3ArrFoK3BsFQX+F1Hnem8Ofqm9C6g5RIM5yxXVbvAXUH1jTWS6NAns7
VinlkxchdESqWlA8GuI2WYYx5VvCwN2WyyARA7G+Z09LBtmANINyyzOxOOjv
9HUp6bcHF8Ubcj02cXCKTMm4f+QSnGj70X87Pw6qWD4o30u9BP7B4TbAEw+i
slZ0T2MH8PadHZRcjYf7judl2z47gvu1jf+kniXCJ+n3zDkKLmBvXKGUuyEJ
JJLUV7fWuADZ9z3bR/kkCOx5tyNA0BVOPAoxkaxPAk2lHzun/riC9YJWl0N6
Mri0KfLqPbsCLDHx5hZGqaCdwfKCRcsLKvdICf6MT4WOEj0u9WgvMG9p+e7c
mgpe2rMK8+1ekPph142//GkgMjCVmq7qDU7C901fRKdBReo30Z/qPmDXtee5
s3U6uEbuZJyz8gNxjktWlA2ZEH5WPPDPWCA8v/JR2X1XJvCdVl1+IR0Ez1JS
d4vLZULLD6nK3ZFBwLIN9S54E+cXyRc7dx+4BnuiptbKxjJhTi72Zcm1YOBN
qZT+fTsLWO9ROj1kQkCh4gj7hYEs0FfdXJuQFAJUlXOfC79kwbnMmBz+TyHQ
Kahzdlo4G05lhryNyA+FvkNvNfSis+G2cfjo2agwEBP5q+yvnwOGpjY/aWvh
EL/Jna7lnAPTVdk6lEMR8LM+QJ8hPAcyn4y+fG4ZAUbxuY17G3Ng5T/DiFeP
I+BA+ckfUnwkYDp4T9sgIhKsn21Z0nhOgto+/QczW6Ph06kY3VrZPDBdz6P9
sY6Dt/L7HWvP5cHEmcoS6aw4KNbrdEmzyYNKS4dn6c/iwENd7z1TfB6Mdzam
Dh+PhwAptrnst3lAVaoMc92UAEpHHZnOB+bD1BXy7qCuRFjw3GUYm5gPF2+G
7DJeTwTvsWoJCiUffiw99jc9kQRzooWCvh35EC199fhQeRKc+lfVf4+7AFYO
/xWsi0+Gf4qUjHxyAZwoz4R4k1S4xCrz5Ft9AahyvYDetFTYIbVPZU9LAYzv
MCuS6UmFxZzx+0cmC0DtvYPqSZE0mBm2qhoUK4RtsQJDmjlp4GBvlqxYWggj
A6TVguh0Io+KMTsSyXCW3+/sca9MqGYv35NMIsOHps9k1eRMONUVIPmxhAy8
XS2iVtWZ8GpvuxE8IsMGXjGtu9OZwJbHfDP/KxluCvxY+G2eBRvM3gxMqVPg
74+4P+ma2aDze99IvD4FNlePMZg4ZIMtuzR5iwUFGJvrPcQissFiefpQrwcF
rtWk83x4nA3vmX8bj+VQYOA3i8aAbA4Y3Nh/9Sox3x0WLeX2kyCBtklDqdos
BQx4aOwvNEigwJ+wvLBAgeCNovknHEiQvLHj+xITFWpeA/fOIhLMv889mi9G
hXfbNjJp7syFU/6HywMOUWH9Vkz49OlciInbx3DyOBUKeQdrEsxywXOLl+ZF
NSqk811N/padC64mwkanbYn5m99Jk5M3D/p33xTfd5kKGnJiHyel8kDGer1i
wZ0KZx+Lq7bp5YF7akHOsWAqPB6/iVlJeeD1RMJXg5iHL3qnRkWz54OzE+Oa
Yj4VuPp1X6RJ5MPOGAWGHTRi3vfe861IMx/EjC0cvGqoEH+GXfB1VD5knlJi
bmyhwt9vV/4FMxaARKTRK5EuKmzZSYm5sLcADk3TUtx6qFCr3dJxXKMALnZw
Vme9psI904UepvgCiFMo/OfzlgpFk/+0FqsLQKP7/P7D48Q8LbH6Yaa3ANiG
p98f/0yFPknPgXGeQvi+fN02Yo4KT8WbhiePFcLz8PtFNfPE+qpT7GeNiTn0
5UXd9GUq5JxUcWTNI+ZKWk+97hoVvCM7UgUfFkL69++PPv6jQrOMSPGx94Uw
NJ5x2ZiJBslawVPuomTIrez8+IWZBjLefzvS1MhQoVZ6zJ2VBlFTVot3HcnA
dSL/qCIHDXoxq2BjNRnG3od+iOekwfLiwBP5XjIUrdWZdnDRwM7qVpn7dzLY
P7uUt4GbBifjBEbfHKOAhraNHetmGgjkf57mvUCBZ98T5pYI279dZtYNoMCs
/avTwzw0kDjkujUhjwJ7uJXOlPLSYAYs5p4+pEDS5vHtNltocA+nHTnGKDAH
U6VsfDRwCt5roc1A1MmxxJ9kwlVZR4pT9lDB5cShNdGtNDCtEeIfVKeCsYl0
RybhKA6mjB1EnShabD+7SLh34PdX63gq+D7xTlDeRgNfUfb1MiLPxydmY4MJ
1xvoFH3rI+qiSkmllPADzlf1skTcRcaV7j4gvFP1zT8lIi5uG15++v/vc0VG
QScuCdLglcHiywbCE/mvL8dK0kDqSeO1//++1xnlH1ajQAMFUdkxK8ImORNX
BnSJOIzc+ruDcEdsscCiNQ1S998YaSW+H9lcxXe7Fw3aWH55mxHuc9VyOh1O
g8p9aU/eEevtTFEav5hBA/7V92/1CBfuvdl9o4SIy82Q2noiXjv3H9xGvU2D
h7L7FdeIeL43lK3BTuL5h8qSTxK+vNcmaHyIBvt/vaLYEvFX3iB7ZX2GBsNl
Nd4BRH7WdTS8hFZoUMN7jO06kU83790+pzmLYKw52tZjEw0SNhhbX9hZBINR
PpeEiPxn/95aGa9YBG7H6je/IeLitP50rEivCLacWYsKZ6dB/zfxxvs2RbDs
tvyczEKDkQTliYnwItBK/F7NQ9Tf3WDp7b8yiP8/GmvsvYEGt1lk8plLi4Br
UVxh+S8Vbv6cUxHpKoJxs6Z9SatU+Cbjt5NjqAgaYypdGJao8PCk2en5j0Uw
NdDJnfCD2H9N6kxNLMXAem3+5B5if9UsBfHLaBTDh/0RVk3E/vuwofzixgvF
QPr8fU16iAorfdedphyKoV/c9WFrLxV0lgLTE6KKYSns0COX+1SY/GQY87C9
GA5sZZRluUUFFk23s+GDxfDK749eeB0V5uQ5TdSnisGz6sL1ncX/7zdXN7Vt
KIGFc1ut3hB1VvZ0RTlfpQS6zN9Sg84T/e/owt6G5hJQu3b3r6gOFZJHmU6o
9ZcA1TPBvoao28P/fPJevi+BVVq7tZ0sFVyFX2//tFYCf14/X7LYRljfTXFM
rhREm7a1Jw5Q4GXF3CuWu6XwaTHy7JkuCiwJRPaZdJaCs6HtxU+PKKAQuLin
5FUpaBeVaT6posBo+3DF4cVSoCR3agpHUMCn7rsPu3QZeN6+U73nMAUmweHz
k8oy2OhxhEl2DwW6Gmo2X79XBrZU6VsH+Slw/v7A6MEu4vNzc2otDBQYezh8
MHCqDGJavxtnvyRD7a+ju54Ll0NljP7ivBcZflWvKrqkl0PoWtZXRQcyxOhv
kGmlloNg7aZ5D1MyJHAzzm+pLwfG+St6NxTJYP7BK7Gkuxx2773+SIedDKYD
Gr0BTBUQprY9vTW3EFb7nWs++FZAtgunwoWEQgjKFu7pD6+A2DcebX3BhWCX
0zd6J7UC7jTO5LpbF4LJtGqBR00F+G4a/O2ypxAcLq+Ixk9WgMjhw5vsywpg
WWT/hIl+JfRy/33WRMqHjRxZp/7sqYKGqNV7EUTf37P6UYj9aBVE7Dzz67B3
PjDb1fVzQhWc25pYL3kuH+Lufrr406IKfPx/pHat5sFcfbqzSkYVBG8vKUk2
yYNnONo3vl4FqjPbpqNV8mB3SdAZ1Y3V4KYS887uUB5kCPAU5AlUQ4ibtHEn
Yx7MpnsniR+vhnRL1b8KNbkwfv41w33narhFkktnXiGB+YF629qBauhyy6tX
myTBYaXNVy+8qwbVaO1Nzj0kUP/nfG3hczX0Nhz4bUsmwfuRLH72DTXAmjyg
ul2ZBOU9dTtpMjXwMEJsqCwsB7Lb1E8GZNXAzJ5o3P4jCxg2xrI76NRC4P2s
rO9DWVCXPVh8y6QW8joOCTQ2ZwF1WkF7ybYWyq0SUteSs2DxmRvFwr8WeGXO
9xRJZkF+569TaeRaaD2sma56KRPC7Kwe1n+thYJ8+8IPZzPh7PdCmtzvWhCJ
5HvrJp0J9/Z6rzSt10ITR6zBub8ZUBI/+iGDtw5S41enD+RkQMPp6JjaE3Wg
5tfREt+RDgs/9IwDQuqgakCwmbWaOD8v/j5xIrYOGs86RPqkpoPgytT6TGod
bD0R1bfdIh20RB4KiRXVQYxgxOns72lw0EGq/G9bHdhsP+ATtjUNVti9nx1h
roeofVxGpKokuDBS2mt0vR4G72x5O+6WBDKcn2d/R9bDuXqJQbYjSXA2Wi48
LrEeXv9kOL50MxGCVN0Xg/PrYXumRNDF+wkwwPjyX/69eph9/60nEOMgj7kk
uvE7cf+2r59HQuOA5W+Z4tnf9bAiuef3LuU4oG/89LX/Tz2I2tr8u9ASCyy7
9TZVsNOBMs49HooxMBN3kRQvSodx8w49pqYoKH88X8ZrQAfmjQ6jnQFRMJ56
5ErWBTo8/Zzw2+tEFJD5LB6wXKSDicinv+G3IqGrg/z6liMdDgu8ziLVRkBE
yXFrxWt08NJfaCt3jYCC+YYmmVA6pEXte0PbHwHXyq+474iiQ6ylxyeT0nCo
tT73pDaZeL4Jz9jL/DC4MlVey0Cjw3LM/VQVszD48T33qEspHSQO8sSRt4WB
nePBaaykwxuOsDUFkVCQjrNuPnmTDl+485rz2G9AtcBsi0ErHf52fz2vOBgI
UrnveMTG6HA64pUbw4VAGAi9Inpigg6GedOyNUMBoPntoNupaTr4zhmNNI1c
hQ0RipRNs3RYyHGWfjbmB2+8/Y6t/qKDm9l4zbCNH9w42PkweYkOLVrX+158
8AWa7eJl3lU6TGY2rydM+kC7w9yuL+tEfP7eX9/10QtOcPlOzjE1wP3IvWm5
jl5wJkuMd4m5AS51poYz9XpCqiX/mRWWBhiwFv9zts8ddvxu6f7I1gBVqSTe
lr4rEDWYuPU5ewNw7W61F+h3A/fNLfaNHA1wVeBJY1C/C0i6TbPbcDVAO9Y2
RPQ7w1f7/TYHNjZAhcLFGZ/+y1DqcuPuV8K6bgrrG/sdoWC/haMZdwNImiqN
3e9zAEWy/8MNmxugKKXsP/2+S8Ba8GxzGeEvxYdfqPXaQSs1v+EFTwMYdLZn
FvfYgo711z8XeRtA4ob+7olsGzDZLqQ2RnhOMizBKssKWCqqo822NMDN/ayu
jzIuQtNPofZuwkpxX5v/pZlD/luGP8f5GmBy4kLCgVRTYDw7d4hEeEIvqk8+
+QJMS9ww+0m4z6Uv/lTieZB1Mr+htrUB+nXJLaLxhgBLRwqSCcdKznxa2KQP
yy9v3Rwg3HO3TSuSQxv0/itr4djWAMFXuCuWmbXA6lLPE3nCF/zF2U0Z1KBJ
dKHLkTDz1J936kuKkKk0/ziW8M052YePv8nCXG9JbRFhJulzDipPJaHh40LG
LcKpZvvEhl344UVFj9djwhLW17uGgxjR/pSYJhIWGdy7Y9BbDFPaVrc0EebQ
vfIlWfUYNgZcGK4m/MGHxCGiI4cqqaqZWYR7JOgLPQdVsEXzjeZVwlKcgw+u
SmngrYnjC/qEPwo8NN94/CwGVIVkixJWlGHojTuli7u+TUl/JdY7IXmQzY9i
gFqMBR21hA+ZtXNn0oxwDCYNnAiXPFELphYb4zQbwxA/YdbTJ7RJpSYo/ljV
uJWIbw6j3I3AcjNceMLQa09496Tjhh9Vlvgk06sqmciX15Yqa88ia7y08u6q
AOHWO1oHXHRskX9BOJVM5JuHc5dcoZo9Mr9hKE4h6mNd6+O3nXAJlSfKyX+I
+tm0/YxEvJwDFt4+8MmWcKKlo+P+o054UHO37Vai/oaH0mPNDl3GJrUXGfab
GkD7Nrj6SDjjl7ixrVVEvVYpfK61EXbFjpK3HLuJ+r5rvdrPwu6B0+dLe+uJ
/SGUL13ossETh7ecSUVWYn2L30voa54YplVe8ZTYT6v3GAw9l71Qmqz7vp3Y
f70U9o3DX31wZo19/hGxP0VEDz+KcvbFsGcc7A5rRH8pkeze/dEXX7V+Hf2z
QoeXO9REhcb8sEqM1vKX2P8cy/3VIgNXcYxJoO0c0R98EhVOHdIOwJJXnH8D
ZugQ8THDWfRJAMYy/2LLIfrJvu+sQ13Ngfh1U19uKdF/Miq0P87XXsMXq7VL
XC/pIEiqSVDYH4xsL1mZWvrpIC9oJ+xREoztlnz/OfTQIb6k92h43nWM4TxB
C+8g+lGd/mGLqBBscHayZ71Lh+INFuefrofgw8Xb7KqNdEgqcb63IygU83/z
NHrU02HW889R+okw7L3ZIFRQTgee6A1w6mA47s7//lA5hw4qY2e7xbgjkeJh
XtrmQwemew6XXfUjcepX2PMqdzpYUT2O56dFIveDxopQZzqQS8dO3tsShUXZ
FI8lKzrwD9HejW2LRp/tLaw7ztDBYEfuvVL+WCS3npzYI0AHS2d7djfTWBRy
rC1d2kKHS+WWf7aTYnGvLyXo4UY67E/Srdy1PQ4FN8j58TAQ63nYovVxSzxe
HTt+df5jPWRv5DDkZUtEnUyqXGp9PXxoFDLi0UjEtWxakllFPfR9dYqej0jE
yyUNLry0ehhhP+J2fj0RJXsWPhqm1wNX+RFSwWIS3rjd/ILbtx4MmWksK8Mp
yG7exx4mQ7wv956xYlVLx1t3acphlXXwknvI6qtVOvpI9ox9odaB8MArLQxM
x0cP3Q9qkuogmZHqIVOfjgFbD8wNRddBwfWr+8/tyMD187c5LezrwFY2N0Xw
SwY+abvi/H1HHZhkqsxNbMjEyzap/8VsrgPKgnh2jlAm/rgn37KFlbgfb9Kl
J/qZ6JrvK8m8WAsvfgjLqN/JxD1pX5z1e2vhd+7FsazrWdg/NDider0W9O60
Ku7LzsJbH1aLbX1qIcox27KoLguvKOuc3OdcC/Qg+UDLsSz08UbOhPO1cCRk
Mn5UKRu/xj0Maj9QCyp6aVc+/8lGW2316PXBGvARTZAsdCQhPPy248PuGmhn
OOp57gYJd4t/j9Dkq4E/1nkp77NImKf/6zSNtQY0j71ZvNlOwpVs0rPD36qh
x2GnI49ILh7V4Nl4q6kaZLmFbicN5qJ+eaiMr0E1POTsOn79Sy6KT2tf3qZW
DWaVNnN6/3LRtb7uTY1sNXB0lBWQD+bhDl7FxjuC1TDbVKv8PjQPlxS7fytN
V8HW84c1novlY6LqSqasfxV8OlxXO3MqH6M7PzPuvVwFP9wSnnzQyceGgYwa
FvMq0O6Vehjgl487XW0WqxWq4KMLWehEWz5a3IkXCWCqAlE5G4MJ0wKsHdp/
VSy1EtaqffdbuRViK98W0llqBewP37UsG1yISpaOlzXTKkD6j9zmHwmFGNB/
ZUqOOP/HJH3oY6wuxPBXFaJclypg+bNmTcWnQlw4IZ9yTrwCBMRW9D6ZkzF/
tweDcQ0xbzwyq394mYxO1XbXBgvKIXflka6XPxk9Hc41aCeVg9W2qs0BaWRU
DJHJFncn5pG8qr/LHWQUr646EHekHOSspmdaJSh4WS7rKUdDGYhOHveKkqEg
Q8v1I8K0MkjQz7ywDyh4xKzR+WBaGUzZv2DaYELBo/I7io55lRHzyI+kfREU
fHpxYOuaVBnY52kUjCRRMNx6fvOH3WWQVyhZ4kaiYBce9WjeXAb/6+Jc46nM
vjhORHQctymVS7fBCBnJPWdFuZVGKCOim0ouoQbDuEud3DnIcTjPczBUkoow
xEJySSQqoozkmkShovB/5u3/5fez9ou11/rttfb+fPbe2ddLfVRucdHJcJ7j
PpUHO4V960Wfc3Honsr9yNt5oJkw7VT0hotlX4rrDLl5UKO5kKo+Stmn/qmb
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
EuHgX78ZX8SMF7zgsBj/91+d/v8AiYyIfw==
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{
  3.913207504256756*^9, 3.9132078724218016`*^9, 3.9138129298753996`*^9, 
   3.9152937586269484`*^9, 3.9228734927727327`*^9, {3.922873817867066*^9, 
   3.9228738445453587`*^9}, 3.923018559902257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lambda", "=", "1"}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"150", " ", "lambda"}]}], ",", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"0.05", " ", "lambda"}]}]}], "}"}], ",", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"Edipolefarfieldtheta", "[", 
         RowBox[{
         "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
         "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.922873728592558*^9, 3.9228737445757666`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwU2Hc8lf8XAHCyKZFKRFGiUlHSsI6tsiUrO2RkE1L23vtad9jblaaGY1dm
pUiKjFJSifoaSb/n95fX+3U9z3M/55zPeT7nitp7GjluYGBgmGNmYPj/X+7N
ndl7m+0emTgmvVPP4Gtij7QaCHq8G99o91v/Mkhtlj7jZen6WAoTHrTgnAG9
ufrYLf+1vpMokdzKGkJubU4I+Zx26DFg4Pk8tX6DgWYjda2pXUNqqDEudGZz
wJvmJwuPjmT1aeHRtWZvU/JEs6C9kd5ChzZeP3j/EXllpllZtsBR9pE+jop9
OW9s8KPZ6eae3toRQ9Tlked48HyxedM17ujDr8+jScW457Wry80ik7E/8p9f
wBSL28NOeX+bF0pyhRd7TPFfm5nI40JGDN9nI3r8iTnusryRa1rDjDXmPJss
2y4iD7PP29BlNhSpjvhodt8G56nrJVf0NqNaFelP1ogtypCRKbuGF83bDYS/
DdnhsS3GV2UG+JD++Z+B84tLmPj9hKSE3w4UCvjqH9/vgP6UXZ8DfgvivZvl
5jk9jjjrznvxX7YwrkefjfLsvIw5t9aZjfNFcY9Nx9jpNmd8XPj4k53AXryn
enL3XLMLDl7mqGGpFENdaYlrzPfdkClw7CH7Lwms8a28+6XSE8lslS/6NaXQ
zMpG6oqRF/YeKNwgVSSN/FPj1PPPvZCFplH1oPwoDoXzzM33eGN6hepOwWcy
eNzOp8+0zRdd7oq/H3U9hQ3TjEVt4Icyy4ety8tP49KKVbPAYz/cqPh576FZ
OWRZDfuecM8fLZylExziFHH95tpzt5oA/CgsJN+YpoIvNi9TJPcHYlntuwgf
XVXUPjD1ebA0ELsSN+7g4lbDYVE5rnfkIDz2g+t0W746nuj4c/ZxSjAmcl7/
fGxSCwfstJks3ELRX+OqudN+fbTjW73QOh+KHYa/7Zt3GqBZWwv3BvkwvC7z
hSeqzACNeW+/2tgShnP3flg8QkPME9/CIfcsHOUFyc/6uY2x2c7gVcNwJP41
SXwxtd0cm75Z5QkJRGH/eSm+J63muOfYCxtviyh8P5nYNuJhgRQ5tq5X76JQ
rXZcP2HgIm7RvvLi2odozO9xGWesscYrdoubmKZi8dNgrvJTB3vMEvASercn
DmV8fY5E9dhjgmlucp59HG6qBG5DmUtoKmHq1zIRh1R93yc7WR2QYW+K3d2x
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
obvIyGb/Urp3IbDUfr8xvH9OsQ/XWFEK+Bb36tJuE6hcTD3V77Wu9Fjxy1v9
7WbAWlprl8i1AcbGQ4bENlmACul+30EhFigKNzgQsWoFRTqlYgO/ueC5YF8z
608bsFD/Fd7XvBmiPzNeurtoC0mCLr8LJ3lBaqx6cPaLPagU9FDENbbDmwZd
29lpop46Pk/4l+6A3r6V6aFxBzh2ROyJ756dcNbQYrvvayeYHKj/fEpRBPSz
ZKdEnl+GzrDRKyeqRSGnzOXzvW5nUNjlvy9GfC9suMj3noyuoM7GcXW7rjg8
7eZXlKr0AB1LNakBw8PQt6D7XOmeJxSAZ6DqJSmo6VY23XbJC7o0so+YtkvD
YNxftWfe3rCn6avoLUYZ4L5UXq+c4gvW21Z42WZPwpNzD1b3b/MDkkWhXKjc
acjVrKxeLfAD2Qd/f33OlIM2e/Zh0yp/cDntwJhopwg09Oj/3BYAR4+qyX+/
pQLjhvJlXGcDAaXunHobqgocuvlifAOB0Bv80vqUgRoEqOa19r0NAp27jf5a
6+qwSHH882E+GJYv1Mxmp54BHvoVzhCuMPCNV1diVTOAE1tsw9N1w+AUJXSL
Ya8B/Hc0npyRGgaB/24E95oaQnPy+UJLvnBgPXkw28jfCCR6jXLZBCPgYZzm
7oRuY3ArrFoK3BsFQX+F1Hnem8Ofqm9C6g5RIM5yxXVbvAXUH1jTWS6NAns7
VinlkxchdESqWlA8GuI2WYYx5VvCwN2WyyARA7G+Z09LBtmANINyyzOxOOjv
9HUp6bcHF8Ubcj02cXCKTMm4f+QSnGj70X87Pw6qWD4o30u9BP7B4TbAEw+i
slZ0T2MH8PadHZRcjYf7judl2z47gvu1jf+kniXCJ+n3zDkKLmBvXKGUuyEJ
JJLUV7fWuADZ9z3bR/kkCOx5tyNA0BVOPAoxkaxPAk2lHzun/riC9YJWl0N6
Mri0KfLqPbsCLDHx5hZGqaCdwfKCRcsLKvdICf6MT4WOEj0u9WgvMG9p+e7c
mgpe2rMK8+1ekPph142//GkgMjCVmq7qDU7C901fRKdBReo30Z/qPmDXtee5
s3U6uEbuZJyz8gNxjktWlA2ZEH5WPPDPWCA8v/JR2X1XJvCdVl1+IR0Ez1JS
d4vLZULLD6nK3ZFBwLIN9S54E+cXyRc7dx+4BnuiptbKxjJhTi72Zcm1YOBN
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
yG7exx4mQ7wv956xYlVLx1t3acphlXXwknvI6qtVOvpI9ox9odaB8MArLQxM
x0cP3Q9qkuogmZHqIVOfjgFbD8wNRddBwfWr+8/tyMD187c5LezrwFY2N0Xw
SwY+abvi/H1HHZhkqsxNbMjEyzap/8VsrgPKgnh2jlAm/rgn37KFlbgfb9Kl
J/qZ6JrvK8m8WAsvfgjLqN/JxD1pX5z1e2vhd+7FsazrWdg/NDider0W9O60
Ku7LzsJbH1aLbX1qIcox27KoLguvKOuc3OdcC/Qg+UDLsSz08UbOhPO1cCRk
Mn5UKRu/xj0Maj9QCyp6aVc+/8lGW2316PXBGvARTZAsdCQhPPy248PuGmhn
OOp57gYJd4t/j9Dkq4E/1nkp77NImKf/6zSNtQY0j71ZvNlOwpVs0rPD36qh
x2GnI49ILh7V4Nl4q6kaZLmFbicN5qJ+eaiMr0E1POTsOn79Sy6KT2tf3qZW
DWaVNnN6/3LRtb7uTY1sNXB0lBWQD+bhDl7FxjuC1TDbVKv8PjQPlxS7fytN
V8HW84c1novlY6LqSqasfxV8OlxXO3MqH6M7PzPuvVwFP9wSnnzQyceGgYwa
FvMq0O6Vehjgl487XW0WqxWq4KMLWehEWz5a3IkXCWCqAlE5G4MJ0wKsHdp/
VSy1EtaqffdbuRViK98W0llqBewP37UsG1yISpaOlzXTKkD6j9zmHwmFGNB/
ZUqOOP/HJH3oY6wuxPBXFaJclypg+bNmTcWnQlw4IZ9yTrwCBMRW9D6ZkzF/
tweDcQ0xbzwyq394mYxO1XbXBgvKIXflka6XPxk9Hc41aCeVg9W2qs0BaWRU
DJHJFncn5pG8qr/LHWQUr646EHekHOSspmdaJSh4WS7rKUdDGYhOHveKkqEg
Q8v1I8K0MkjQz7ywDyh4xKzR+WBaGUzZv2DaYELBo/I7io55lRHzyI+kfREU
fHpxYOuaVBnY52kUjCRRMNx6fvOH3WWQVyhZ4kaiYBce9WjeXAb/6+Jc46nM
vjhORHQctymVS7fBCBnJPWdFuZVGKCOim0ouoQbDuEud3DnIcTjPczBUkoow
xEJySSQqoozkmkShovB/5u3/5fez9ou11/rttfb+fPbe2ddLfVRucdHJcJ7j
PpUHO4V960Wfc3Honsr9yNt5oJkw7VT0hotlX4rrDLl5UKO5kKo+Stmn/qmb
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
EuHgX78ZX8SMF7zgsBj/91+d/v8AiYyIfw==
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{{3.9228737303422155`*^9, 3.9228737453027725`*^9}, 
   3.9230185599561095`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numberOfModes", "=", "20"}]], "Input",
 CellChangeTimes->{{3.9137079132054944`*^9, 3.913707920034782*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.913707921926465*^9, 3.9137885216548786`*^9, 
  3.9138129332178555`*^9, 3.913813790938487*^9, 3.9228735042081976`*^9, 
  3.9230185599811373`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phiArray", "=", 
  RowBox[{"{", "0", "}"}]}]], "Input",
 CellChangeTimes->{{3.913708354291813*^9, 3.9137083602212276`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.9137083617783537`*^9, 3.9137885228740015`*^9, 
  3.913812934043933*^9, 3.913813792818364*^9, 3.9228735068610344`*^9, 
  3.9230185599970937`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"thetaArray", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"theta", " ", "Degree"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", 
       RowBox[{"-", "60"}], ",", "60", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.913707989258195*^9, 3.9137080327672253`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deltaPhi", "=", 
  RowBox[{"1", " ", "Degree"}]}]], "Input",
 CellChangeTimes->{{3.913813480125559*^9, 3.9138134867262897`*^9}, {
  3.9228735304214773`*^9, 3.9228735316350346`*^9}}],

Cell[BoxData["\[Degree]"], "Output",
 CellChangeTimes->{
  3.913813487479354*^9, 3.913813798169494*^9, {3.9228735270139503`*^9, 
   3.9228735318944345`*^9}, 3.923018560020214*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deltaTheta", "=", 
  RowBox[{"1", " ", "Degree"}]}]], "Input",
 CellChangeTimes->{{3.913813488520502*^9, 3.9138135013332186`*^9}}],

Cell[BoxData["\[Degree]"], "Output",
 CellChangeTimes->{3.9138135019141855`*^9, 3.913813800650524*^9, 
  3.9228735364675417`*^9, 3.923018560037492*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EpthetaArray", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", "=", "1"}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"10", " ", "lambda"}]}], ",", 
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
         RowBox[{"eta", "=", 
          RowBox[{"120", " ", "Pi"}]}], ",", 
         RowBox[{"I0", "=", "1"}], ",", 
         RowBox[{"l", "=", 
          RowBox[{"0.05", " ", "lambda"}]}]}], "}"}], ",", 
       RowBox[{"Edipoletheta", "[", 
        RowBox[{
        "r", ",", "thetaArray", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
        "]"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9137069467502403`*^9, 3.9137069526619315`*^9}, {
   3.9137070172034225`*^9, 3.913707020103962*^9}, {3.9137070801853547`*^9, 
   3.9137071021739187`*^9}, {3.9137071447554827`*^9, 
   3.9137071944120755`*^9}, {3.913707809885145*^9, 3.913707815144978*^9}, 
   3.9137080358707066`*^9, {3.913708185412668*^9, 3.913708201171393*^9}, {
   3.913788526889719*^9, 3.9137885304528875`*^9}, {3.9137910999935017`*^9, 
   3.9137911273111734`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "thetaArray", "]"}]], "Input"],

Cell[BoxData["121"], "Output",
 CellChangeTimes->{3.9137087105099635`*^9, 3.913788536251167*^9, 
  3.9138129378361754`*^9, 3.922873582542508*^9, 3.923018560057719*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EpphiArray", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"Length", "[", "thetaArray", "]"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9137085871315465`*^9, 3.9137085977423563`*^9}, {
  3.9137086473686066`*^9, 3.9137087276300383`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"lambda", "=", "1"}], ",", 
     RowBox[{"n", "=", "1"}], ",", 
     RowBox[{"m", "=", "0"}]}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"1", " ", "lambda"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"lambda", "/", "50"}]}], ",", " ", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Edipoler", "[", 
            RowBox[{
            "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
            "]"}], ",", 
           RowBox[{"Edipoletheta", "[", 
            RowBox[{
            "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
            "]"}], ",", "0"}], "}"}], ".", 
         RowBox[{"Pfunc", "[", 
          RowBox[{
           RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], "]"}]}], 
        " ", 
        RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"phi", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Trapezoidal\>\""}]}], "]"}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.922939882201295*^9, 3.922939899322198*^9}, {
  3.923018566149925*^9, 3.9230185705944524`*^9}}],

Cell[BoxData[
 RowBox[{"5.014422772275445`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.7980701709602025`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.9229400078998766`*^9, 3.9230185720841417`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"lambda", "=", "1"}], ",", 
     RowBox[{"n", "=", "1"}], ",", 
     RowBox[{"m", "=", "0"}]}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"1", " ", "lambda"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"lambda", "/", "50"}]}], ",", " ", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Edipoler", "[", 
            RowBox[{
            "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
            "]"}], ",", 
           RowBox[{"Edipoletheta", "[", 
            RowBox[{
            "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
            "]"}], ",", "0"}], "}"}], ".", 
         RowBox[{"Bfunc", "[", 
          RowBox[{
           RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], "]"}]}], 
        " ", 
        RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"phi", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Trapezoidal\>\""}]}], "]"}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9229400350988417`*^9, 3.922940075018112*^9}, {
  3.9230185809978533`*^9, 3.9230185828639975`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "5.026554096029985`"}], "-", 
  RowBox[{"30.78276991081698`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.9229400430617027`*^9, 3.9229400523566513`*^9}, 
   3.9229401071518598`*^9, 3.9230185838996058`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ddatadipole", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", "=", "1"}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"1", " ", "lambda"}]}], ",", 
         RowBox[{"I0", "=", "1"}], ",", 
         RowBox[{"l", "=", 
          RowBox[{"lambda", "/", "50"}]}], ",", " ", 
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
         RowBox[{"eta", "=", 
          RowBox[{"120", " ", "Pi"}]}], ",", 
         RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
       RowBox[{"Monitor", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Edipoler", "[", 
                  RowBox[{
                  "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", 
                   "I0"}], "]"}], ",", 
                 RowBox[{"Edipoletheta", "[", 
                  RowBox[{
                  "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", 
                   "I0"}], "]"}], ",", "0"}], "}"}], ".", 
               RowBox[{"Pfunc", "[", 
                RowBox[{
                 RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], 
                "]"}]}], " ", 
              RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"phi", ",", "0", ",", 
               RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Trapezoidal\>\""}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9229318904448795`*^9, 3.9229318904892993`*^9}, {
  3.922932152302081*^9, 3.9229321800394974`*^9}, {3.923018589227719*^9, 
  3.923018601464223*^9}, {3.923018831405472*^9, 3.9230188934181137`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"edatadipole", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", "=", "1"}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"1", " ", "lambda"}]}], ",", 
         RowBox[{"I0", "=", "1"}], ",", 
         RowBox[{"l", "=", 
          RowBox[{"lambda", "/", "50"}]}], ",", " ", 
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
         RowBox[{"eta", "=", 
          RowBox[{"120", " ", "Pi"}]}], ",", 
         RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Edipoler", "[", 
               RowBox[{
               "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}],
                "]"}], ",", 
              RowBox[{"Edipoletheta", "[", 
               RowBox[{
               "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}],
                "]"}], ",", "0"}], "}"}], ".", 
            RowBox[{"BSinfunc", "[", 
             RowBox[{
              RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "0", ",", 
             RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<Trapezoidal\>\""}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.9228740863903913`*^9, 3.922874108895547*^9}, {
  3.9228747842112894`*^9, 3.922874797192943*^9}, {3.922874910787367*^9, 
  3.922874911046118*^9}, {3.9230186169761705`*^9, 3.9230186298966856`*^9}, {
  3.923018670160442*^9, 3.923018670248906*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gdatadipole", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", "=", "1"}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"1", " ", "lambda"}]}], ",", 
         RowBox[{"I0", "=", "1"}], ",", 
         RowBox[{"l", "=", 
          RowBox[{"lambda", "/", "50"}]}], ",", " ", 
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
         RowBox[{"eta", "=", 
          RowBox[{"120", " ", "Pi"}]}], ",", 
         RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Edipoler", "[", 
               RowBox[{
               "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}],
                "]"}], ",", 
              RowBox[{"Edipoletheta", "[", 
               RowBox[{
               "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}],
                "]"}], ",", "0"}], "}"}], ".", 
            RowBox[{"CSinfunc", "[", 
             RowBox[{
              RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "0", ",", 
             RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<Trapezoidal\>\""}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.9228748267704706`*^9, 3.9228748317701178`*^9}, {
  3.9228749143654757`*^9, 3.9228749144532413`*^9}, {3.9230186343750544`*^9, 
  3.9230186360555553`*^9}, {3.923018672615652*^9, 3.923018700635984*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lambda", "=", "1"}], "}"}], ",", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"1", " ", "lambda"}]}], ",", 
          RowBox[{"I0", "=", "1"}], ",", 
          RowBox[{"l", "=", 
           RowBox[{"lambda", "/", "50"}]}], ",", " ", 
          RowBox[{"k", "=", 
           RowBox[{"2", " ", 
            RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
          RowBox[{"eta", "=", 
           RowBox[{"120", " ", "Pi"}]}], ",", 
          RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"bfunc", "[", 
           RowBox[{"edatadipole", ",", "m", ",", "n", ",", "k", ",", "r"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
    ",", "1*^-8"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9229615437067757`*^9, 3.9229616030518284`*^9}, {
  3.9230171860273304`*^9, 3.9230171894528446`*^9}, {3.9230173980727053`*^9, 
  3.923017401238141*^9}, {3.9230174476015215`*^9, 3.923017451640202*^9}, {
  3.9230181061015096`*^9, 3.9230181396661167`*^9}, {3.923018968846049*^9, 
  3.9230189781666822`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"43.33252410674553`", "\[VeryThinSpace]", "-", 
          RowBox[{"14.539312188287536`", " ", "\[ImaginaryI]"}]}], ",", "0"}],
         "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "0.00022000114804890207`"}], "+", 
          RowBox[{"0.000507316890252305`", " ", "\[ImaginaryI]"}]}], ",", "0",
          ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "0.0020090052411371353`"}], "-", 
          RowBox[{"0.0005728866580026938`", " ", "\[ImaginaryI]"}]}], ",", 
         "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9229615756134005`*^9, 3.922961603369499*^9}, 
   3.9230171901212687`*^9, {3.9230173938461943`*^9, 3.923017401755129*^9}, 
   3.923017451924982*^9, {3.923018107697564*^9, 3.9230181401253014`*^9}, {
   3.9230189719572515`*^9, 3.9230189785275774`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", "edatadipole", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9228765692737026`*^9, 3.922876574152354*^9}, {
  3.923018649638237*^9, 3.9230186503640113`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "5.026554096029985`"}], "-", 
          RowBox[{"30.78276991081698`", " ", "\[ImaginaryI]"}]}], ",", "0"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "0.00003530434288576611`"}], "-", 
          RowBox[{"0.00021620486781692184`", " ", "\[ImaginaryI]"}]}], ",", 
         "0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "0.00008918356625527406`"}], "-", 
          RowBox[{"0.0005461628677224141`", " ", "\[ImaginaryI]"}]}], ",", 
         "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.922876574716514*^9, {3.9230186507090693`*^9, 3.9230186776252227`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lambda", "=", "1"}], "}"}], ",", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"1", " ", "lambda"}]}], ",", 
          RowBox[{"I0", "=", "1"}], ",", 
          RowBox[{"l", "=", 
           RowBox[{"lambda", "/", "50"}]}], ",", " ", 
          RowBox[{"k", "=", 
           RowBox[{"2", " ", 
            RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
          RowBox[{"eta", "=", 
           RowBox[{"120", " ", "Pi"}]}], ",", 
          RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"b2func", "[", 
           RowBox[{"ddatadipole", ",", "m", ",", "n", ",", "k", ",", "r"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
    ",", "1*^-8"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9229615437067757`*^9, 3.9229616030518284`*^9}, {
  3.9230171860273304`*^9, 3.9230171894528446`*^9}, {3.9230173980727053`*^9, 
  3.923017401238141*^9}, {3.9230174476015215`*^9, 3.923017451640202*^9}, {
  3.9230181061015096`*^9, 3.9230181396661167`*^9}, {3.9230189892803874`*^9, 
  3.923018990130247*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "43.34348219281684`"}], "+", 
          RowBox[{"14.15521465961045`", " ", "\[ImaginaryI]"}]}], ",", "0"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "0.0714745595197575`"}], "+", 
          RowBox[{"0.1485997532291201`", " ", "\[ImaginaryI]"}]}], ",", "0", 
         ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "0.1526319522347599`"}], "-", 
          RowBox[{"0.08063739445863044`", " ", "\[ImaginaryI]"}]}], ",", "0", 
         ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9229615756134005`*^9, 3.922961603369499*^9}, 
   3.9230171901212687`*^9, {3.9230173938461943`*^9, 3.923017401755129*^9}, 
   3.923017451924982*^9, {3.923018107697564*^9, 3.9230181401253014`*^9}, 
   3.9230190171460896`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", "ddatadipole", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.922933167709552*^9, 3.922933168205423*^9}, {
  3.923018658244337*^9, 3.9230186589384785`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"5.014422772275445`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.7980701709602025`", " ", "\[ImaginaryI]"}]}], ",", "0"}],
         "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "0.012154859983129845`"}], "+", 
          RowBox[{"0.001934506048904978`", " ", "\[ImaginaryI]"}]}], ",", "0",
          ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "0.012208185581075712`"}], "+", 
          RowBox[{"0.0019429930814113799`", " ", "\[ImaginaryI]"}]}], ",", 
         "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9229331688159504`*^9, {3.923018659294788*^9, 3.9230186798650017`*^9}, 
   3.923018906242241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lambda", "=", "1"}], "}"}], ",", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"1", " ", "lambda"}]}], ",", 
          RowBox[{"I0", "=", "1"}], ",", 
          RowBox[{"l", "=", 
           RowBox[{"lambda", "/", "50"}]}], ",", " ", 
          RowBox[{"k", "=", 
           RowBox[{"2", " ", 
            RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
          RowBox[{"eta", "=", 
           RowBox[{"120", " ", "Pi"}]}], ",", 
          RowBox[{"numberOfModes", "=", "5"}]}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"afunc", "[", 
           RowBox[{"gdatadipole", ",", "m", ",", "n", ",", "k", ",", "r"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
    ",", "1*^-8"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.923019039245002*^9, 3.9230190445655584`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0", ",", "0", ",", "0"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.923019039790355*^9, 3.9230190448399563`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", "gdatadipole", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9228748766236877`*^9, 3.9228748774210396`*^9}, {
  3.92287492406856*^9, 3.922874926657646*^9}, {3.9230186917570343`*^9, 
  3.9230186943036633`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]},
      {
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0", ",", "0", ",", "0"}], "}"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.922874878024145*^9, 3.922876482157694*^9, {3.9230186946110706`*^9, 
   3.923018705430221*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lambda", "=", "1."}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"1", " ", "lambda"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"lambda", "/", "50"}]}], ",", " ", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"theta", "=", "0"}], ",", 
       RowBox[{"phi", "=", "0"}], ",", 
       RowBox[{"numberOfModes", "=", "1"}]}], "}"}], ",", 
     RowBox[{"ac", "[", 
      RowBox[{
      "k", ",", "r", ",", "theta", ",", "phi", ",", "edata", ",", "gdata", 
       ",", "numberOfModes"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.922876659784412*^9, 3.922876674603408*^9}, {
   3.9228767059882145`*^9, 3.922876776909793*^9}, 3.922891402408781*^9, {
   3.9228915799896955`*^9, 3.9228915890593443`*^9}, {3.9229333177551413`*^9, 
   3.922933319609765*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", "Indeterminate", ",", 
      "Indeterminate"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["3", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.00010470258154068532`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.025971497699137987`", " ", "\[ImaginaryI]"}]}], ")"}], 
          " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "0.`", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1.8053408774871941`*^-16"}], "-", 
                RowBox[{"1.4295798567284454`*^-16", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "5.026548245463594`"}], "-", 
                RowBox[{"30.782734081770755`", " ", "\[ImaginaryI]"}]}], ",", 
               RowBox[{
                RowBox[{"-", "3.7187838054721263`*^-16"}], "+", 
                RowBox[{
                "1.2537141116591793`*^-16", " ", "\[ImaginaryI]"}]}]}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1.7997756063259374`*^-15", "+", 
                RowBox[{"1.3489643430064646`*^-15", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "4.572825950364956`*^-16"}], "-", 
                RowBox[{"1.6757428777935957`*^-15", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"3.8762938171787997`*^-16", "+", 
                RowBox[{"6.780600386724345`*^-16", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"4.587657497271379`*^-16", "-", 
                RowBox[{"4.233470670376993`*^-18", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"1.7415195257150938`*^-16", "-", 
                RowBox[{
                "1.8203664478780974`*^-17", " ", "\[ImaginaryI]"}]}]}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1.6187138435208581`*^-15", "-", 
                RowBox[{"9.020562075079397`*^-16", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"3.637227238145746`*^-15", "+", 
                RowBox[{"8.049333768966882`*^-15", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "7.717351063751821`*^-16"}], "-", 
                RowBox[{"3.575373504205448`*^-15", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "4.2538672237468766`*^-16"}], "+", 
                RowBox[{"6.310056643865636`*^-17", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"1.9420771414646598`*^-16", "-", 
                RowBox[{"1.009663273127126`*^-16", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"4.972485741032689`*^-17", "-", 
                RowBox[{"6.676821910026748`*^-17", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "6.290066666310434`*^-18"}], "-", 
                RowBox[{
                "1.0177100861260419`*^-17", " ", "\[ImaginaryI]"}]}]}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "6.37931547864401`*^-14"}], "+", 
                RowBox[{"4.2546261652676165`*^-15", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"5.477145429907959`*^-14", "-", 
                RowBox[{"7.285665126754992`*^-14", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"2.9932653577979806`*^-15", "+", 
                RowBox[{"2.6788467277771844`*^-15", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "7.809921706370467`*^-17"}], "-", 
                RowBox[{"4.639739462085457`*^-15", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"9.289444213855802`*^-16", "+", 
                RowBox[{"3.5275601883988372`*^-15", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "1.3553039542759494`*^-16"}], "+", 
                RowBox[{"4.268476209437686`*^-17", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "4.9873299934333204`*^-18"}], "-", 
                RowBox[{"2.2937652211646453`*^-17", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"1.542169064264263`*^-17", "+", 
                RowBox[{"9.592343725189532`*^-18", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "1.704739833132985`*^-18"}], "+", 
                RowBox[{
                "2.2947644553446094`*^-19", " ", "\[ImaginaryI]"}]}]}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"3.470136775585858`*^-14", "-", 
                RowBox[{"1.2201376790432067`*^-13", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"2.3663970089016217`*^-12", "+", 
                RowBox[{"1.3740638835080254`*^-11", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"3.547162563677375`*^-14", "-", 
                RowBox[{"8.881784197001252`*^-14", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"4.218847493575595`*^-15", "-", 
                RowBox[{"2.578492974691926`*^-14", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "1.1009638533688356`*^-14"}], "-", 
                RowBox[{"1.4842829385280226`*^-15", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"5.006845632538059`*^-16", "+", 
                RowBox[{"2.7482356668162566`*^-15", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"1.3715628644018541`*^-16", "-", 
                RowBox[{"1.671577169758999`*^-17", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "2.3718616589014918`*^-17"}], "-", 
                RowBox[{"4.700016417724662`*^-17", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{
                RowBox[{"-", "2.9216416282066963`*^-18"}], "-", 
                RowBox[{"2.3687342544415513`*^-18", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"5.785109298293763`*^-18", "+", 
                RowBox[{"4.6369941058806753`*^-17", " ", "\[ImaginaryI]"}]}], 
               ",", 
               RowBox[{"6.140345217679535`*^-20", "-", 
                RowBox[{"1.675920686108227`*^-19", " ", "\[ImaginaryI]"}]}]}],
               "}"}]}], "}"}], "[", 
           RowBox[{"0", ",", "1"}], "]"}]}]}], ")"}]}], ",", "Indeterminate", 
      ",", "Indeterminate"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", "Indeterminate", ",", 
      "Indeterminate"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9228767774409795`*^9, {3.9228913817855644`*^9, 3.9228914029737406`*^9}, 
   3.9228915895210915`*^9, 3.9228919186243973`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"wthetaData", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", "=", "1"}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
         RowBox[{"eta", "=", 
          RowBox[{"120", " ", "Pi"}]}]}], "}"}], ",", 
       RowBox[{"wfunc", "[", 
        RowBox[{"k", ",", "eta", ",", "EpthetaArray"}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.913707220474059*^9, 3.913707263347372*^9}, {
  3.9137890722881346`*^9, 3.9137890911416388`*^9}, {3.9138129498211164`*^9, 
  3.9138129506468754`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"wphiData", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", "=", "1"}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
         RowBox[{"eta", "=", 
          RowBox[{"120", " ", "Pi"}]}]}], "}"}], ",", 
       RowBox[{"wfunc", "[", 
        RowBox[{"k", ",", "eta", ",", "EpphiArray"}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9137891169714384`*^9, 3.9137891225238247`*^9}, {
  3.9138129548753743`*^9, 3.9138129560576897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lambda", "=", "1"}], "}"}], ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "=", 
         RowBox[{"100", " ", "lambda"}]}], ",", 
        RowBox[{"thetas", "=", 
         RowBox[{"30", " ", "Degree"}]}], ",", 
        RowBox[{"phis", "=", 
         RowBox[{"20", " ", "Degree"}]}], ",", 
        RowBox[{"k", "=", 
         RowBox[{"2", " ", 
          RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
        RowBox[{"eta", "=", 
         RowBox[{"120", " ", "Pi"}]}], ",", 
        RowBox[{"numberOfModes", "=", "20"}]}], "}"}], ",", 
      RowBox[{"Efarfield", "[", 
       RowBox[{
       "r", ",", "thetas", ",", "phis", ",", "k", ",", "eta", ",", 
        "EpthetaArray", ",", "EpphiArray", ",", "thetaArray", ",", "phiArray",
         ",", "deltaTheta", ",", "deltaPhi", ",", "numberOfModes"}], "]"}]}], 
     "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.913789450292809*^9, 3.9137894939804153`*^9}, {
   3.913789541178432*^9, 3.913789620906969*^9}, {3.9137896643270826`*^9, 
   3.9137896686533923`*^9}, 3.913789789898024*^9, 3.913791195337147*^9, {
   3.9138129604530735`*^9, 3.913812972464299*^9}, {3.9138135191964545`*^9, 
   3.913813541996207*^9}, {3.9138138937379665`*^9, 3.9138139021823707`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "5.625884428339018`*^-20"}], "-", 
    RowBox[{"8.359417030096131`*^-21", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"6.566427462477995`*^-21", "+", 
    RowBox[{"2.5845634464175247`*^-20", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.0639777720801334`*^-20", "+", 
    RowBox[{"5.555230247183939`*^-20", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.913789661751734*^9, 3.9137896767179117`*^9}, {
   3.91378978178221*^9, 3.9137897915859623`*^9}, 3.9137909489010878`*^9, 
   3.9137912925451803`*^9, {3.9138129617141943`*^9, 3.91381296799811*^9}, 
   3.913813028875464*^9, 3.9138135368852205`*^9, 3.9138135980506134`*^9, 
   3.9138138951621823`*^9, 3.9138143061350775`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"HammingWindow", "[", 
    RowBox[{"x", "/", "10"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914475035944272*^9, 3.9144750577166414`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-10, 10}, {0., 0.9999997864814569}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.9144749995521774`*^9, {3.914475037028414*^9, 3.914475058302938*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"intensityModes", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"HammingWindow", "[", 
      RowBox[{"m", "/", "10"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.914475008245681*^9, 3.914475033230189*^9}, {
  3.914475063490066*^9, 3.914475085839979*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "intensityModes", "]"}]], "Input",
 CellChangeTimes->{{3.914475088024057*^9, 3.91447509686328*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    PointBox[{{1., 0.08695652173913043}, {2., 0.174144415611437}, {3., 
     0.4024052851766544}, {4., 0.684551236562476}, {5., 0.9128121061276934}, {
     6., 1.}, {7., 0.9128121061276934}, {8., 0.684551236562476}, {9., 
     0.4024052851766544}, {10., 0.174144415611437}, {11., 
     0.08695652173913043}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 11.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.22, 0.22}, {0.02, 0.02}}]], "Output",
 CellChangeTimes->{3.914475097222871*^9, 3.9144751901156845`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"HammingWindow", "[", 
     RowBox[{"x", "/", "10"}], "]"}], "+", 
    RowBox[{"HammingWindow", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "5"}], ")"}], "/", "10"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914475035944272*^9, 3.9144750577166414`*^9}, {
  3.9144751423764405`*^9, 3.91447515785518*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-10, 10}, {0., 1.0869565217391306`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.914475151777614*^9, 3.9144751581852837`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"intensityModes2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HammingWindow", "[", 
       RowBox[{"m", "/", "10"}], "]"}], "+", 
      RowBox[{"HammingWindow", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", "-", "5"}], ")"}], "/", "10"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"N", "[", "intensityModes2", "]"}]}]], "Input",
 CellChangeTimes->{{3.914475008245681*^9, 3.914475033230189*^9}, {
  3.914475063490066*^9, 3.914475085839979*^9}, {3.9144751715602255`*^9, 
  3.914475216784091*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.08695652173913043`", ",", "0.174144415611437`", ",", 
   "0.4024052851766544`", ",", "0.684551236562476`", ",", 
   "0.9128121061276934`", ",", "1.0869565217391304`", ",", 
   "1.0869565217391304`", ",", "1.0869565217391304`", ",", 
   "1.0869565217391304`", ",", "1.0869565217391304`", ",", 
   "1.0869565217391304`", ",", "0.9128121061276934`", ",", 
   "0.684551236562476`", ",", "0.4024052851766544`", ",", 
   "0.174144415611437`", ",", "0.08695652173913043`"}], "}"}]], "Output",
 CellChangeTimes->{{3.914475212689397*^9, 3.914475217239005*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "intensityModes2", "]"}]], "Input",
 CellChangeTimes->{{3.914475088024057*^9, 3.91447509686328*^9}, 
   3.9144751964588146`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    PointBox[{{1., 0.08695652173913043}, {2., 0.174144415611437}, {3., 
     0.4024052851766544}, {4., 0.684551236562476}, {5., 0.9128121061276934}, {
     6., 1.0869565217391304`}, {7., 1.0869565217391304`}, {8., 
     1.0869565217391304`}, {9., 1.0869565217391304`}, {10., 
     1.0869565217391304`}, {11., 1.0869565217391304`}, {12., 
     0.9128121061276934}, {13., 0.684551236562476}, {14., 
     0.4024052851766544}, {15., 0.174144415611437}, {16., 
     0.08695652173913043}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 16.}, {0, 1.0869565217391304`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.32, 0.32}, {0.021739130434782608`, 
   0.021739130434782608`}}]], "Output",
 CellChangeTimes->{{3.914475196736307*^9, 3.914475223116832*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"ArrayReshape", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"\"\<w (cm^-1)\>\"", ",", "\"\<frequency (Hz)\>\""}], "}"}], 
        "}"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"i", "+", 
            RowBox[{"10", " ", "j"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9144773164967575`*^9, 3.914477432640439*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"w (cm^-1)\"\>", "\<\"frequency (Hz)\"\>"},
    {"11", "21"},
    {"12", "22"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.914477375735442*^9, 3.914477433121269*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lambda", "=", "1"}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"1", " ", "lambda"}]}], ",", 
       RowBox[{"I0", "=", "1"}], ",", 
       RowBox[{"l", "=", 
        RowBox[{"lambda", "/", "50"}]}], ",", " ", 
       RowBox[{"k", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
       RowBox[{"eta", "=", 
        RowBox[{"120", " ", "Pi"}]}], ",", 
       RowBox[{"m", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"n", "=", "1"}]}], "}"}], ",", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Edipoletheta", "[", 
            RowBox[{
            "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}], 
            "]"}], ",", "0"}], "}"}], ".", 
         RowBox[{"Cfunc", "[", 
          RowBox[{"m", ",", "n", ",", "theta", ",", "phi"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"phi", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9152943636104765`*^9, 3.915294393894868*^9}, {
   3.9152944330160847`*^9, 3.9152944492261353`*^9}, {3.9152944895907884`*^9, 
   3.9152945084391165`*^9}, 3.915294669672914*^9, {3.915294752097356*^9, 
   3.915294752272916*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
19XyOsv1An961kev7/rbXC/w0JSPbY8Z+3C9wON3FwzX2uPH9QL/Rhz1Ao8g
O6gXuNJu5eFfzyj6IeLGbhcSXNq0u8nrJvhkB1l48mNfXjfBH1/UsYwMCuH1
Efz7m3sL29ik8/oInkIcfvJ9hgmdU2U1Kbw+gh8YvjN0yOckXvfBd5Of8B/7
04BTVROrrz1k/8HV711PPd8xhP0HbzZgfUdhnuf4E/zAyaDY2vuZqBe425XU
t087lHK9wG+qrjcU1h2uF3hXrYj7gz8Wcb3ADZ/WW7x7Tz7HgVye/MH4Au9J
/kMH8Ban5fWFDshLh9no3RfmW9YBfGp+PythfmYdwC3WjvhpkP2ddQB/lznL
X5j/OQ4H/0ctb6iw7rAO4Gc2q6fYbq1iHcA76OY7CesO6wB+YvOSg8K6w/Ez
eDg9F/qAzyM/oQ/4MqoX9AFX2SHXAfrw70EO5a6ujZOhD/jI/bLPtfE29AEP
W54QWhu3Qx/Oz19oUPi/+xRw5axLdW4K+xToA94z/+HY2v0I9AGXdKqYX7t/
gT6czyc70Ac8i54LfcATyU/UV/43VjJ7/432OW8ecX0bUl6i7q6gT99XhnJ9
3281GuJZHC6xOWxv86tOMvs/hezYdnr0MbC/oh0/Ufmf/5R83XmmiP3EOcKB
wTPzJVty2J9eo1dU1OZlx7deZTVsmjP7o055j/Yt/TccfPqG/cl6c7z1qpmZ
kr45D57+dI5ifwzIzogLU+e+eJXPeiJ/YrCgW/0Y5zx+7uVueT61eSbTUfJ9
AeyAZyX+MJlvFsJ2kM+8sWxfH39hvwM7bXq5bK/dxw/p9cLZ08mR5/mjlOc8
XGfKzW1anjxvP18xx602b9Td/EjC65v2/FzYeZh3NSm2XwrP28iXjiyqTKzz
No7n7crsgUdqz/dOlRYM+WAQzvO2+eVHbT7b1ZF+0zfqnFH8D/vDeaEpN9eP
1nzP647/9grd2vzKzq1Wtrpa0eyn6VrN5bX5s3cp+h11+2Tx+gL7bTTXOyaX
FLOfsK9RrOccf7aA/XxJ9nWvPIqxa/eD181BZD/g/P/dL5xuc6KyNl876unH
O2Gjn7L/yH/m7L5i3n9NGPtfU/m1jn6/etLM7Tu+v7+QzHEg8qt69e0O3dTI
Zv9h/2C35Qe8f/xi/2F/YrRV6WT9cvYf9u83Gf+65Ywijn/WxbZTXzixrnSq
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
UHw/AMOv8kE=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnHf8l9P//699Xe+isjOSSBkZJaMUomiQom0WKiPZI6JURvZKZETKTEqE
kC2rZJYRFWVE9h6/x/39OJ/b9/fH9TrP61znOtf1Otc5z/N8Pp6Pc5oMGn7I
yUkURUeUUZQqXZ1H0co4ioYpPbyKokKZo5SeWUTR0br+mOSlujZSZVKlZyj/
KOU/qfwTJfeRfJzqOkPXh+g4VufDlN9P6R9ZFG2uY5jkB1Tvpir3j+RK9zZW
/smSHyRf8hDJ0ySP1jPOUT1/K2+c5Islr630XN17rspcqLpHSB4h+Q3yCj/z
ZMlHqd61VMdBOo6UXKP0IqV76A/3VT2/q9xpSo/TcYzkXPkjJJ8o+UTdP0zy
mSo/U/kzdFyo8/MLv9vTym+j+h5R/mjlD1b545W+rHQrveuZKvOwrjeVfJbk
mZLvV9lTeJaOU1XPYTxf5fvo/DfJ++t4SPWur7SNrg/X/9xW1x5SHe1V7iml
O9ZE0XY6+uvafcp7S3WuVpmddOyh85kqs4Out9AxSGWmK+9A1bmx6uyudI3O
G0tup/pn6nxTyXtK3lP5DSXPVXqm7ttN9c1VXb/r2hbK/175B6l8c8k9lG6k
+qfoemvlL1H55ip/v87/UPkmKtNe6dM63075Dyt9Rvecr/zRyv9bR3/lbaY6
PuEe5Z+itI3qekTpJsqvK/ln5W+o+/5U+W0kD5fcVvmPqsymKrOj0muU/4La
tp3ym0nupPQvld9W8j+Sn1eZlZL70vd0/p/kfko/z9z3zlT6td7/dbXjV0q3
YhzonUcpvVDHdfRhPfdYXX9NxzLd00z5Ff1Q+Z/yzZX/ltKhuv8TpU/y3VRm
bcn1VeaNxPUv0/mrSp/VsUByh9Tyh6rzcKXP6Xgjdh3U+VHk69yzNLY8P5R/
TOnlSvdQ/S9KfibcS/56jGHlX63zOTofpbSB2ut4/dc6pet5PrzDSpV9TfX8
rHRfvc8r4b9srXK50u1Uzz7Knxfqb6r8TOla5Fcuv7fSY8J7UmejwmPnBz1v
UPhfH+n8SKUvhTL9VaYj/1v1/arzQTp66XyRztdVmT1VZ1xY/0RKl6quPyWe
qvQIlf1L8kE6DtW19koH6L4mOmJdq9G9v/PddPTWtS90z79Kz1Z6JLqEscB4
L6wTEqVn6d6xutYMXSd5jOSBkv9RepKOI1R+I6UzdUyW/J3a61/JFyr9UscS
5X2e+zvwPT6O/d9fDO02MLQ57fBm7vc8T+8zOHafRG9ulFmXTtY7fSs50rVz
lR6n9+uh09f1PoMkHyh5iN7xb3SVjsN13lnnL6nsTvrO3VRmN+XVoy+TJ/ki
1TlS55syVlXmAJXppXubqM79JR8q+WvGkK5fJXljpU11XCF5w9xj4WrVc7HS
oyuPu0FKt9W1gvGi5+ysY6LyX9GztlN+qfyLlHew6h8geXXp/nMteg89pzIX
KD9X2hM9JflLpT10dOMdVGa27n1V5V+UfJDqWiz5R9W/jdryPZV5V+dHS/4A
WcdNqusddKzS7sw7krfSveNV52TJ31K36nkfnaZ6DkGvoY9V5kDlf6D8H5Tf
SfceovzNlb+O5I2V14A+q3o3Vv7NKrurrj2kZ3fk3VRPZ+WfIrmr5P0lr88Y
Ufn1JV9P+6iOByWvo2Oi7puudF30gMpsoPRGlemieztJXlW6r9HnZqAHmQeU
XqN32Fnl6+r8UpXfW/J6kq+VfIPuaavztvq+u2Uu/46e+YCuT5N8pe7dV8+d
pfOGsfUY3+sy5V8muYXu3V33NtTxl+67XO//eGI9cpGOLVXmMpX/TelylR0f
W9egM8cr/5LCeuM6yXWZI3LrniL3mBqt/AvQP7o2VvLYMO4uklxHeZer3A30
SaW/Kv9S+pvKXKHzG/mOSn9R/qF6p04q31n/8S2V+UbvOl3lnqMvMLZUZnfG
k8p0l/w6ba//NB9dj63D2Co9Ri5QmZ46dpXcQXUcrPw3db2lys9V/kjGjvI/
UL1N9A5369p/2DxKe6nMXZIfVZm7dd/lOu5Umea67030tY43mIcKj8G9laYq
cwzfTfdeKXmKypyu8mMS97cfVW6xrv+kdKjS3irzjtJWKr+N/mdP9KqudVRd
O6I3mM9178vKf0nnSzLPmycordHRSfJVuu8alZumMtvrWddJvlfyGZI/VJlf
VOakzP3jpsj95VqVuUfpd0q3UP2vMCfxXJWbj05VnT/RJrp2o9JDlP8pfYN3
lLxU8q/0PdU5T/Jdqmeh6nge/cc8rXs2kXyLyj7B/Cj5GR2PF77+QOl5eVtd
u1npF+hY7Cylcwt/9/mVdeqzQa/+l9r2GJF6LmMOZS5tU3ke/Ez3baBjM11b
lzGtvKd1/Wnd85zSxrHfdVPlz+N9JPfS87aQfJfes7HumS+5n/KmSn5C199U
3TdLni75Zr3z47q+KfOwzv8urfcPQLfons2ZO1TPXpXn0/2VPqG8zZinVf76
wuP0JnSUyjdS/u0qv46+/YlK1yptc87WvWfGnvuxAVYV1iXolHuZC5RO1bFj
bPluHRV6s/Icc53Sj1X/NNpN6c+Vbe7rsWd0PlBl1yjdI7Xde6rO39f5pMR6
ZvfUeu9U1b8EPRZk/ALkT5Tup3c+Q2XvUZ1nKO9WHXdG1j3I6J/blU5BR+Uu
c9v/l0/foI+01P1bqsxr/MfKNuYHvH+wyU9XuWsy60B04WnKuyXxeUe9w226
9gBznORtJS9XPY/EftZdqndG7PKTsL1j/8f7sMV536R2Cq59zszwrN+Cr3Kj
0vcT2/TY8yt0vp3yV6j+XSq34VmSdw12/yCdH0jdOtqo/JmJvxf6/63U322S
7l/NnKH0N93bLZTfg3FYeTxfW/ndvuBgPqs8x19V+Xveo6NlbPtvRW57kOfe
q6M+ukj5dXL7L39X9k9uUtpL1x8OPs6/lefym5X+V3kuuVXpr5X9txuU/lXZ
z5mgtEe4lz7A83kP/JHfuT+zb9glvBv5pdIH8YX0Prullocrfy99owG55/pd
So+7CSG9I7F+v5R30D03qX02DGOQMdVM9+6QeSwcquuNdTypa1uiE1L7P6co
3URpb5XbQuXPUXov303526aehw5JXT/3Hpz4+/Ht0Lvo372C7YINsxP1pH4G
9TcJ8ueSL9S9zSR/H/n7Uw++30WJ60GH87/5//jSrXUcILmV0j8Ty3XQRdio
kcfpCOU3xTbUeUPlb5V6HspKP2czvdfgUAZ/6ZfY79Aiso2zteTtmfMSy2sk
71C6321bY9sEG+Ue6lL9PSPbxn10bafU8wX6ZFVin7O38puntp2uVl6L1D5P
l1AGncM8s4Pyb5B8gPJWBr10iO5dr7D+7Cy5s8q8yLeT/Lfkl7BhJf+UGXM4
IOi0Frq3p/KPUZkTlf+NjnYq86vKX5/4WfWxw8L78J1aK91Fx2CV2V7/t4Gu
71g5v2f4r3VCmaNDefwX/JiGvK/Ob1T+DUHm/isS9xv6zIF6n8MlH1G5H5GP
j9Rd+d0lL1M9B0lOC9vwm/Aeqe23nfRd66jsxdgm2CHMx7r+BlhHYhtgKXOX
jq10nFR5/rokzCHLgn+xU+n5Yt3K8+ly5lRsHaUrEs+tS7G/Jf+p9LBQ56vK
b1V67rux9L2Up9wr+Mv0zcrz2OeJfbdPSr/LH0oXK/0wsZ0HDgIecpqeu2tp
e2m9oK8W6NiSuT/I6K6PVWZLye0rj7V3dJwc2xfFJ/1RaQddW6j8F7Bdmb+U
f07leYa5pwp9cWHoG/hliyR/m3sOQw8jU/eiUP+i8KwozCEfhTmuT+J5BT3f
rvI7PFrYv5ir4/3YbfNEaM8vgr+H3/chdkRiP7CevnUONqE69k6d/5qu10nc
Pszd1Pkk76Hyu1ee03dTulca7CHlt9X5KOYRpUeFd8DH2VD1t1L9kwIuAb4A
tsD3XBq+KbYZMm04I/yvGh3r694R6C21fb/w38nvHb4j7dlXxychH3/jjuB/
vB6e9bnkq5T/YGS/BcyQ7/pN7jq5F3+B7/xm+O7Y7B+Etn0VP13yT+it3PPA
loXHLmMYXYEeuimxLmqsckzE/ZXeV9nX/BK9rfN6ym8geT39r8tUfkPlvZ27
DnzPosZ+3WRsJdW5N/pb53mN/cA7Ko9pxjZjHD13Y2KbBHscu5x7TkwsY59v
jELObJPwXuMT45sbKL8OY5f3KY0vFpV9a8byPvxPnV8ieV188xr7MLdXfve2
uv6qnjsk2P/4AcwVzBnMOzWl8xP6psqNVv5xKtMNjFbynpH1MTL1xDW2129T
+Xd1PkH5V2W2FZFvxg3KPW5nKh1Wed5k/jxE12eF74UeRb+jS/mO2ELYCVP0
Pi8q/Qh/orRtfHbl+e69xPMmMnYS37tXGLPYCT1DPrbT/NJj8cfSduW7ocwJ
idtqj8jf+RrJ11NnZX35VeW8axP7nPWZO9AdlX0d8rmvZ/imd/N/a4wj3FnZ
L79K+bcqf23l/6l7Xw36mfyFOl9X+cNVfn10o+oZw/yJLQ6eltsHqVNjn+cu
yXVr7AtNYU7UPa1Vpo3yrpLcCpuauUvXblc9l+s5TStjI2Akh6nM4bGxrMv1
/MOYS/GdcsufZvZR8VXfU9q7cJ/CxgbLPDo2TvRC6XY9WulamXGy6/B5MuNM
N6du+57hu/zMc7AP8HcK9/dNdO8rtLHkw5QeUrgPNgQ7DX4u/m5NbFwF//9l
xqXSAUqn6p3vYqzrWUMq+7n4u+tkxuQmYoswx0l+WvJxVagHfFH5w5U/Njcu
cYfy1xT2R3qFvtdS167Eb1NeQ937heSFYIGJn0vfPqo0rnhk6fjGwNh4I2MQ
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
u4iFwE9hP1u+ydtK/x/p2c39
         "]], Polygon3DBox[CompressedData["
1:eJxFnAn4F9P7/mfes34ULRTRqpQsWdNXhUSKlDalUlGKFEULRSlUKHuW7GQL
laUNRVrIkkiU7KIoyhYh/O5X9/yv/3U11+c8c86cmffMOc+5n/u5T3X6Dul0
cSkIgvviINC/4I80CJbq71dREPyQB8EdWRDMCYPgOZ07UuVNOo7SBYfLPlXl
UUkQ/Kb6A2S/ow5u1zXdVL5H1/+m8nE69lf7t3Suucrr1X8P7qf6z2Rvlz1T
9mrZm2VP1dFL9oOyf1f5AdU/L3u6+t67LAj+1T2/kb1D9z1N9sf6+4j631Pn
ZqhNB13TQOVQ5W6qP1L2dNXvr3NHqPxq6rYD1f97sm/TcYbsO2T/ovJo9bdd
v+cQnkl9fCh7mq6/R/ZrKp+hNn/L3kd2Mz3LwbIfV/s9dBwke6ra1Fb966pv
qeuHq/5J1TXR+a56nnP1d7Xs91X/g+55uOofKvk38luHyT5Y5++VfaP6+1Tn
rlR5ns59obonZL8su7v6OUj9Pas2y2VvUH0su5/Of6D+V+vcjzr3uOyT1P8j
sv+n8gj1caTOd5I9SNeeqHPPqv19sqfqeS/h/am+qexOqv9K97ta5QU61179
d1GbDbIrF+/wO7VprP6Pld1R5bdSv+srVFdN7Tur/deyK+k4X+eGqv+6+nuk
7HZqv1lHE11/hOxTdO2Lep4+stfome5W+WEdxxb9v6++9lL7P1X+TOXK6v8H
2U1Lft4zeDeZv83fusc+qr9M1/+ivmro3DJds0xtqqk8RPVtVL9Sz/Oi7Ko6
30n2j7r+OPU3TeduULmTrn9N178q+wRdP0T2d7LVPJgp+3LZv8quJ/st2Teo
v5rqu6bOHa7rt+o4oXj/t2bu/yHVlelooPIfOq5X3cG6tqXuf6Wub6vrm+lc
h9Tj5zDZ02XfprYtdb/ndO1s2U10zQzZm2WrKnhS5Q265lqVX9I1G3TtPJ3r
pfu/ojZnq3yZzjWLPIaezDw/FzI/Vf+p7J901Fbdv2pzop7nNl2zH9fr3PG6
39Oy28r+n9qPVHm57rev6oaqfWe1b6b+Fqj+asa4+vpabeaWPIYrqzxE9Qeq
XFJfrdX+CbWZL/tjXR/Ivlj1tSN/o9Nz3+9n5pfsp1T+XfdbqPInarNF9bN0
rqP676c224v30Vr2IbIvYbzr+Enl3XknjB9dX0PXvil7o/7ervpaJc+hE1U/
VvY/oX1Qldj+rpXs73knurYi40fXzZH9kf7W1zNMKXmOjFTbarLH8H74frLL
ZF8k+zTZdWSvkP1eMffL6/feqvtVU/0inTtO97tF9j6y75B9rMonq/1qHLSO
xipX0P331rUzmA/621v2qSqP5repv5t1zd5qe5POHaXyUXwftXsU/63y2zp3
bTHfFqp8k/qspfIotflR5ap6xr9kf67+9lR/J+ncNv3+vfFnKp+no5La3iz7
Kuaa7CvUX0PmnPqvI3tCyfO7tey9ZF9e3O80tV+W+93fqXsfr/5ryh5frCet
8HU6v0P3OxOfoWfYXeeq6H4Py35Xf59RfTu1ryh7gOyqun6U7KNkl8t8/y66
/leGU+b1YkDJY+4v9TVZ1+8pe6Ts2ir/pyNWPy1kT9Hfg3T9Laq/TfYBfHvZ
H8oOdWyX3RB/zbvUs1XFn8veQ9eN17kRqo91j91knyP7Yf19W/UdVE51vp3a
R7IHqq8mrFFqX0H2sJL7bCj7Px3nyz5M9j84GR2p+mmL/9DfXO0Hq/5E2fup
bXnZQ2XfKrue7LtkD1D5cbXdqXJffo/sRnres3T/3WVfovZ361z9Yv26reT3
e4vsO2X3V/kxXf8367+O3rIfkv0Ha4OOG4v1cLLaT9H720v2ZbL3Z+zl/m2J
7reH7veJ2tRU/WLWcJVfUpvP9H0+kd1ebd5R+1z2oTpfpfB/WeQxuLfaz9Lv
X6JyX9Ufovp1sk9mbVSbT3L7/x6h14QqKt+vdo2K53tTbcbI3onvk72X7tdG
12xWfV/ZP4NtVN9d9ijZc9T+YvXfnbGstgfofnXV/ixdv0Pn9sRXyy6ndv/K
ri77H11fijzfr9ffU1T/hfqrq+N4lU9S/fO6/lnWX/rUuRuYzzpXq/AXbVXe
yhRn/ZT9I2NdbSsU/rSy2o/TuaZgD/UXRJ4v1+DHdO47lV9nrpR5/W6n/t6T
fabsTrL/1fX11aY5aydjvpiv4wr88aDs2rrmKNXfC64o5uu1qj9N9kuqWyC7
GT5b7b9WfT0dO9X+Rr6byhNZwxL/vskl+yR808c6OjPf1denvDvwV+T1dYX+
XoFPV/9dZFdU/z/LXsfvxeckfv/XFet/+9T+6D3mh+oX6v43qU1V2Teq/gjm
tuovk/2C7MaqP1XnXgy9xjSNjS8OBF/IPlX262rzd2jMOkDlyrp+pOqfkn2Y
7FtlN1Z5kp51q8pHsyapfoiueYO5mhpL/aK+6pZ5vV2punfwZzrXS/Yq2Stl
nyL7NF3/k65/W/YOXd9G9QtUPw9/z/Oov/1UvlT3W1Pc7z/Vn4s/V/lqtU90
/SDGn9qXqX3lyP5quf7Wk90BG0yg8iO65l3Vbda53fR863XPGrr+c9kl2TNT
r0dt1Fck+xbZs2QfI/s/XVvGeqG+yuma2brmLnB4aJ+1yx8zZxj7OldRbR/T
9Stkn6x2ofrLde4a1e2m9rPU9vnIvmJqaP/7luz7mbuh8edY4pDQa+qLrDPg
PNmP6HhM7Wsk/m3Mifmqz/SMg0r23duYS7p/K3x/7O91ZeTY5NTQ+Owy/f4J
PA/rPPWp14J6sf3l8NS/p1Zsf9dfdh98Uez4YJjsi2TXjB2fXCF7hOy6sf3l
cPV/hfr/T/YO2W/JLun5pus5/pTdMzaWaKY2D+gZxkSem6eFjp/OjT3/WbOY
n+N1HCr7jNDxyNvqL1Ldo/hI9feC/l6u+jtC+9/nIv+e22XXlP2y7AksI7Kv
0vULI8/VTPZ42R31jaqkxqzX5fYZ+I6f1CbOHLMQu1RU+4NlX6o2DSN/I9Yb
4pXpYF21uS42vqsTOUZjve2i6/vExvxgfzA2WLuW7Itk/5PZF+GTusg+MfX7
+Ed2x9wxB7EHa+yYYj2roPLurLG5MSfYE8wIdry7iI+qyx4sezl4Rs83Tfav
+KbU2KWi7H65MT6+CJ/UX/ZrkbHTo6H9ybWxsfqdOqbLXlJgn8dC46sb8Luh
12Dm3+s67lT9U6Hx2yLZk2Q/GNo/Xp967T1c1/2r+92kv5VCr8lrVD9A5/bS
NZfK3gOsACaTPRzMkzuGIJbg3IW512zWbjDSBbKr6xhXcgzH9yOGJJakz/PB
orr/+WCH2PH5YJ0/WPdvGDqeORoMpfLaxPF2Se3LIseM1VU+Cx+s6yvE9ud9
UmPbPWPH88TtYOfB6qOqzt0vu6fsC0Ovv4N1bJfdk3Gta5vqKMf3LvzdhTyX
7B6yD1FdqHMX6Pcs0/OsV3lfHWNlvyH7Y8YLMYz6Xi97Lest8ZbsxepnHd9X
/Ryn/joQs+ncA5GxwKDQ+P6C2FgRTPUO8VHstb18ZMx2qo6jZeex8UbP3Hgs
1Pm2ej/jwAeym6vN2fjn3L+Nd9Rb5Wt5J6xNuv4MtR8r+xjmluxTZffK/X4T
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
M39vNCRgqDdyYyiwFBiMvWj/B1FaL8M=
         "]], Polygon3DBox[CompressedData["
1:eJwt1XuUVlMcxvGj951pcrcmoZaSWyq3CBXWahFZUiGhUJQpUY1UqFgld9G4
NqXbRKP7kIpuQmNqmoSVVJRrKCvkWijy+a3z/vG8736+5/nts88+++zduFfx
1QNrJUkyivLogdpJUnpAkpzI1KO3C5Lkxvwk6YPtzCbJD7QAe1RuMtZUZhQ2
C3tb7p9MktxGUNKKfxL/jx9GjbBd6n7Dp2ivxVqqL8Hqyl2qv2qFN1E53xJ/
WbtS5h6DLMR+VTtZbY3as/CxMtfS6dhobIP8dfwuuXHYKuxUucexnVgJthJr
gN0fz0qvYB9i7bHxfHe6EHsC+0p/N/A3UjtsLPZ9jJE/lM7FHsMGYIfxE2ge
9jHWUX8v8gdSP9er+GGeo57nmIhVyG2Q64RP4qfTImwT1hUr51vnp+9ljvq5
VFGQzmvM7ww/M4NjM2iI9rfU0zx2lfmATpa7X3+L8Db6q8GieLNOXzKWFup6
4JfAJXLbo55fIfc3X877S87jz6eDtRdjS2i+2jk0WbuD/pa67wsyw7Gztfdg
J/Aj+O3+T5P7Glvkvq2w49xnOLYCG4DVwWbSvdhPdJs+blK3jk5y3/sMZAHe
Wl1fugJ7Fvs5snwTtdPUnKG/R7DZ/F1q+8sdy/8X48YewAZgh8sdQSuwpbQ/
m34EA/0NkXkD+x37g4qxodgwGqzdGNtDb8rcivXA6vG/0CLsG6ypdh39DXHt
QX5LvI9YJ3npmEbxo/PT+x2A1aJlaofnpzXHy/5Fi7E7sCKsPv8jLcTeogPV
HER3x/zIPERDtRtijegdmWrqp307fenaMpm1WCbWEfXEivy/h3WXuYE2Ywux
xbRVu7N79sCrZM4qSNfOp/xsfB5fJbfPu/gzxiPfJt4bXui/LlVj5dH2norV
TJPr5F1dwy/BP3f9ylh7+KpYV7F+sfZYF2wlVkP7tP+lfu6f4d+POZA9iAZh
h/DztT9Re7naItnV2HRsNXZx7A9YJbaG/tHeS33V7jeW9bFOYx/0LFWyl2Eb
sJbYw9harBP2CXYO9gi2Dusc65Hae6Yy/fXBCvhsQTrWx+UGYkdgm9UWZNPa
6OPy+CYL0jHUqC1yLV9uCnaZ9k65D0Xmxt6HtcO+y6TPE89Vhl2B/YptxF7H
XsaujjWKfYEtjW9Xn3dk0+eI5zmEX4X/yw/KpN92fONT1XaItZxJ5zHmcxrW
EfsN24QtwBpho415DHaXa8fo7w3aYQ6KPUcF9mqsU+wXbGisb+x17MiCdC88
OtYftt9/A2wkVi3XDduHPY3lZdM9NvbaRF8jaIz+6srl0XKZEsrKPZqb06ti
jdJV2O5Mur5inY2NdZ9Nz4o4M9pil+rvIv2tjLVB02XWY4XxbPpvTO9ibbEL
5N6SeS2EjaG98W5pl2vLZZbST9qD1c2Xa1U73Y9jX97GD6ZX1FXie7BStTuw
W/j+cT5qj8O6GN8A/k7ai03CumOD+DPUlxrfR9hE107DdrvHBdrrM+kZNIHf
Q22xjdhCrIwfqfZ6vqn2x651VdsF+yveT6w//V7Dd6mdfqNTsd5xDvB/xrrP
pmd3nOElsT9QE2xOJt1XY39dQw2178WWu3ah2m1Ys5i3TLpHxV41C++m/y2R
w2bH+Um9sK+xSqwivhmqb1xbsc6uTeGfMsZa+huJNZHryE+gM7HVWGmc4e4x
MfYsbB02FTslzn3sxDjDcmMZIfcMViebnvHtct/lJOzcbHqez8s976d0GPZU
LteN/4wKsWewDtjN/MNqe/IttNsY8/Pu+yx2lFxZJj0z4ux4AWsU53hu/gZj
L2ItsPdz89ybH0cn5OYvzoc4J8ZjzeMMxR7DdrvH81jD3PuIcybOwOewBrHu
sD5Yf+zKONO1m/lvHvutzP86NVFW
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jtIlWEYB/DHS1ZW1i5Ugk6hIIRhqEieKV1Mp1rCRTMviES51OQF0SGC
BKeKFDcRDEFwsiEa0zxqpl1UdPF+Wf0dhHP4/f/P937v+/Gdk9fQ/qgtLSKG
fTfSI1L5I/OFkqyIG3oZb7GSRUywnHWsYQOfsIPNfMMu9rCP/RziIEf5jl/4
iV85cTEi6bxD587p01zQD7iTETFvtqjvyj/lPS5wn0kecJGNFyKWrVuSt+RZ
96/ox1w2+8ZV/YSH7vlltqYfySvyMX/zhKs85Rpb7PXPuj/ybc9cZb6un9rn
r9l3/tdnXPuhj3OWHzjJtxzhAN+zj73s5iu+5jO28zGfspq1LOMDFrKCN1N6
X/edt+3c6/oYS/UtvvRsOWb39BfyNbmTV1O/D6+wwD71crY8lRlx19rLcq55
sXmx/tBel8w+s0jfZKtrjo47eotseTyn1xPNtFU00SdGlQLr3BZ5FiYMN9LO
/2NnB25U1Q==
       "]]}, {
      Line3DBox[{1590, 1846, 1016, 1972, 1847, 2255, 1726, 1591, 2256, 1727, 
       1592, 2220, 2257, 1973, 1728, 1593, 2222, 2258, 1975, 1729, 1974, 2223,
        2259, 1977, 1730, 1976, 2349, 1848, 1978, 2113, 1731, 2168, 2114, 
       2115, 1980, 2187, 2328, 1979, 1851, 2127, 2169, 2376, 1732, 2126, 2124,
        2158, 2387, 1733, 1594, 2260, 1734, 1595, 2225, 2261, 1735, 1981, 
       2226, 2262, 1736, 1982, 2350, 1853, 1737, 1854}], 
      Line3DBox[{1596, 2031, 2188, 2369, 2032, 1784, 1023, 1597, 1785, 1855, 
       2329, 1738, 2097, 2098, 2221, 2263, 1857, 1739, 1856, 2224, 2264, 1859,
        1740, 1858, 2330, 1849, 1741, 1860, 2331, 1850, 1742, 1861, 1852, 
       2130, 2170, 2171, 2391, 2128, 2125, 2189, 2375, 2159, 1786, 2046, 2378,
        2131, 2132, 2045, 1787, 2072, 1743, 1862, 2212, 2265, 2074, 1744, 
       1863, 2332, 1788, 2075, 1745, 1983, 2351, 1864, 1746, 1598}], 
      Line3DBox[{1600, 2190, 2285, 1599, 1789, 2047, 2249, 2317, 2133, 1865, 
       2023, 1790, 1867, 1434, 2017, 1866, 2068, 2213, 2266, 2049, 2134, 2135,
        1869, 2160, 2388, 1791, 2069, 1747, 1984, 2352, 1870, 1748, 1985, 
       2353, 1871, 1749, 1601, 2129, 2191, 2377, 2174, 1792, 2192, 2318, 2071,
        1793, 2051, 2250, 2319, 2136, 1872, 2073, 1794, 2053, 2137, 2138, 
       1873, 2024, 2367, 1795, 1875, 2018, 2019, 1874, 2161, 2389, 1796, 2076,
        1750, 1986, 2354, 1877, 2175, 1751, 1602}], 
      Line3DBox[{1604, 1878, 1879, 2333, 1603, 1797, 2048, 1798, 2373, 2078, 
       1605, 2025, 1799, 1868, 1800, 2368, 2026, 1606, 2080, 1127, 2050, 1801,
        2081, 1607, 2320, 1802, 2070, 1803, 1608, 2321, 1804, 1805, 1609, 
       2267, 1752, 1610, 2193, 2286, 1611, 1806, 1807, 2334, 1612, 1808, 2052,
        1809, 2335, 1613, 2082, 1810, 2054, 1811, 2083, 1614, 2027, 2322, 
       1812, 1876, 1813, 2028, 1615, 2084, 2323, 1814, 2077, 1815, 2172, 1616,
        2254, 2379, 2139, 2176, 2140, 1617}], 
      Line3DBox[{1619, 1882, 1883, 2337, 1618, 1816, 2079, 1817, 2338, 1620, 
       1818, 2055, 2287, 2214, 1621, 2215, 2371, 2056, 1819, 1622, 1142, 2177,
        1820, 2185, 1623, 2179, 2380, 2141, 2178, 2142, 1624, 2268, 1753, 
       1625, 1884, 1885, 2355, 1626, 1886, 1887, 2356, 1627, 1890, 2288, 2227,
        1628, 1821, 1880, 1822, 1629, 2216, 2336, 1881, 1823, 2085, 1630, 
       2324, 1824, 2057, 1825, 1631, 2269, 1754, 1632}], 
      Line3DBox[{1634, 1895, 1896, 2357, 1633, 1897, 1263, 1635, 1898, 2289, 
       2229, 1636, 2194, 2290, 1637, 2251, 2381, 2143, 845, 1638, 820, 2165, 
       1899, 1639, 2339, 1900, 1901, 1640, 1888, 1987, 1889, 2340, 1641, 1891,
        1988, 1258, 1642, 1892, 1989, 2291, 2228, 1643, 1893, 1990, 1894, 
       1644, 2195, 2292, 1645, 1273, 1903, 1646, 2341, 1904, 1905, 1647}], 
      Line3DBox[{106, 937, 107, 938, 108, 939, 109, 940, 110, 1411, 518, 111, 
       1412, 519, 112, 1570, 838, 520, 749, 113, 731, 521, 750, 941, 114, 522,
        942, 115, 523, 943, 116, 944, 117, 945, 118, 946, 119, 947, 120}], 
      Line3DBox[{1649, 1906, 1277, 1648, 1907, 2293, 2233, 1650, 2196, 2294, 
       1651, 2197, 2295, 1652, 2234, 2296, 1908, 1653, 2230, 2358, 1991, 2100,
        2099, 1654, 1503, 2116, 2101, 1992, 2034, 2120, 2033, 1655, 2036, 
       2117, 2037, 1993, 2035, 2121, 1455, 1656, 2102, 2103, 1994, 2297, 2231,
        1657, 1902, 1995, 2298, 2232, 1658, 2198, 2299, 1659, 2199, 2300, 
       1660, 2237, 2301, 1911, 1661, 1292, 1912, 1662}], 
      Line3DBox[{1663, 1913, 1061, 1996, 1914, 2270, 1755, 1664, 2271, 1756, 
       1665, 2238, 2272, 1997, 1757, 1666, 2235, 2273, 1998, 1758, 1915, 2236,
        2274, 1999, 1759, 1916, 1286, 2000, 2105, 1760, 2166, 2106, 2107, 
       2001, 1064, 1918, 1909, 2145, 2173, 2382, 1761, 2058, 1910, 2086, 2374,
        1762, 1667, 2275, 1763, 1668, 2240, 2276, 1764, 2002, 2241, 2277, 
       1765, 2003, 1315, 1766, 1669}], 
      Line3DBox[{1670, 2038, 2200, 2370, 2039, 1826, 1068, 1671, 1827, 1920, 
       2342, 1767, 2104, 694, 2278, 1922, 1768, 1921, 2239, 2279, 1924, 1769, 
       1923, 1305, 1770, 1925, 2343, 1917, 1771, 1926, 1919, 2148, 848, 2392, 
       2146, 2144, 1071, 2162, 1828, 2060, 2384, 786, 2059, 1829, 2090, 1772, 
       1927, 2217, 2280, 2092, 1773, 1928, 1154, 2093, 1774, 2004, 2359, 1929,
        1775, 1672}], 
      Line3DBox[{1674, 2201, 2302, 1673, 1830, 2061, 2252, 2325, 2149, 1930, 
       2029, 1831, 1932, 1436, 2020, 1931, 2087, 2218, 2281, 2062, 2150, 2151,
        1933, 2163, 1160, 2088, 1776, 2005, 2360, 1934, 1777, 2006, 2361, 
       1935, 1778, 1675, 2147, 2202, 2383, 2180, 1832, 2203, 2326, 2089, 1833,
        2063, 1548, 2152, 1936, 2091, 1834, 2064, 2153, 2154, 1937, 2030, 
       1164, 1939, 2021, 2022, 1938, 2164, 2390, 1835, 2094, 1779, 2007, 2362,
        1940, 2181, 1780, 1676}], 
      Line3DBox[{1677, 427, 1340, 428, 273, 1341, 429, 274, 1342, 430}], 
      Line3DBox[{1681, 793, 1553, 794, 282, 1349, 437, 281, 1348, 435, 280, 
       434, 1347, 279, 433, 1346, 278, 1680, 2303, 2204, 1679, 1781, 2282, 
       1678, 277, 1345, 432, 276, 1344, 431, 275, 1169, 275}], 
      Line3DBox[{1683, 1943, 1944, 2344, 1682, 1836, 2095, 1837, 2345, 1684, 
       1838, 2065, 1180, 1685, 2219, 2372, 2066, 1839, 1686, 1183, 2182, 1840,
        2186, 1687, 2184, 2385, 2155, 2183, 2156, 1688, 2283, 1782, 1689, 
       1945, 1946, 2363, 1690, 1947, 1948, 2364, 1691, 1951, 1360, 1692, 1841,
        1941, 1842, 1693, 1185, 1942, 1843, 2096, 1694, 2327, 1844, 2067, 
       1845, 1695, 2284, 1783, 1696}], 
      Line3DBox[{1698, 1956, 1957, 2365, 1697, 1958, 1366, 1699, 1959, 2304, 
       2243, 1700, 2205, 2305, 1701, 2253, 2386, 2157, 851, 1702, 829, 2167, 
       1960, 1703, 2346, 1961, 1962, 1704, 1949, 2008, 1950, 2347, 1705, 1952,
        2009, 1361, 1706, 1953, 2010, 2306, 2242, 1707, 1954, 2011, 1955, 
       1708, 2206, 2307, 1709, 1376, 1964, 1710, 2348, 1965, 1966, 1711}], 
      Line3DBox[{1725, 1971, 1387, 1724, 1970, 2316, 2248, 1723, 2315, 2211, 
       1722, 2314, 2210, 1721, 2246, 2313, 2016, 1963, 1720, 2245, 2312, 2015,
        2112, 2111, 1719, 1463, 2123, 2042, 2014, 2044, 2119, 2043, 1718, 
       2040, 2122, 2041, 2013, 2110, 2118, 1510, 1717, 2108, 2109, 2012, 2366,
        2244, 1716, 2311, 2209, 1715, 2310, 2208, 1714, 2309, 2207, 1713, 
       2247, 2308, 1968, 1712, 1380, 1967, 1969}]}, {
      Line3DBox[{872, 1018, 2256, 873, 1108, 1496, 1024, 2329, 891, 1438, 
       1115, 1223, 1434, 1435, 900, 1440, 1126, 2368, 1239, 1534, 1535, 908, 
       2287, 1139, 1251, 1038, 916, 2289, 1264, 1046, 927, 2294, 1054, 939, 
       1063, 2271, 950, 1149, 1505, 1069, 2342, 960, 1443, 1156, 1326, 1436, 
       1437, 969, 1445, 1167, 1342, 1550, 1551, 977, 1180, 1354, 1083, 985, 
       2304, 1367, 1091, 996, 2309, 1099, 1008}], 
      Line3DBox[{874, 1191, 1192, 2257, 1390, 1193, 1497, 1194, 2263, 1498, 
       1214, 1116, 1224, 1117, 2266, 1476, 1468, 1483, 1127, 1240, 1128, 1484,
        1469, 2371, 1140, 1252, 1141, 917, 2290, 1047, 928, 2295, 1055, 940, 
       1296, 1297, 2272, 1415, 1298, 1506, 1299, 2278, 1507, 1317, 1157, 1327,
        1158, 2281, 1486, 1473, 1493, 1168, 1343, 1169, 1494, 1474, 2372, 
       1181, 1355, 1182, 986, 2305, 1092, 997, 2310, 1100, 1009}], 
      Line3DBox[{875, 1195, 1196, 2258, 1392, 1199, 1213, 1200, 2264, 1216, 
       1118, 1225, 2388, 1119, 1560, 1477, 1129, 2320, 1241, 1130, 1580, 1142,
        1253, 1143, 1542, 2381, 1539, 1540, 929, 2296, 1279, 1280, 1411, 1281,
        1282, 2273, 1416, 1301, 1316, 1302, 2279, 1319, 1159, 1328, 1160, 
       1562, 1487, 1170, 1344, 1171, 1588, 1183, 1356, 1184, 1558, 2386, 1555,
        1556, 998, 2311, 1101, 1010}], 
      Line3DBox[{876, 1197, 1391, 1198, 2259, 1394, 1202, 1215, 2330, 1203, 
       892, 1226, 1400, 2352, 1227, 901, 1131, 2321, 1242, 1132, 1581, 860, 
       2380, 1541, 1538, 1564, 820, 1565, 1265, 1408, 2358, 1267, 1268, 1412, 
       1284, 1300, 1285, 2274, 1417, 1304, 1318, 1305, 961, 1329, 1422, 2360, 
       1330, 970, 1172, 1345, 1173, 1589, 867, 2385, 1557, 1554, 1566, 829, 
       1567, 1368, 1430, 2366, 1370, 1371, 1383}], 
      Line3DBox[{877, 1448, 1449, 1393, 2349, 1201, 1395, 1204, 1217, 2331, 
       1205, 893, 1228, 1401, 2353, 1229, 902, 1032, 2267, 909, 1039, 2268, 
       918, 1266, 2339, 1407, 1518, 1517, 1519, 1503, 1504, 1283, 1502, 1501, 
       1570, 1520, 1521, 1303, 1286, 1418, 1306, 1320, 2343, 1307, 962, 1331, 
       1423, 2361, 1332, 971, 1077, 2282, 978, 1084, 2283, 987, 1369, 2346, 
       1429, 1523, 1522, 1524, 1510, 1511, 1382, 1509, 1508, 1512}], 
      Line3DBox[{8, 743, 492, 837, 2168, 23, 321, 1861, 38, 1601, 53, 1610, 
       68, 1625, 83, 1640, 368, 821, 98, 1655, 748, 383, 824, 113, 751, 399, 
       826, 2166, 128, 412, 1926, 143, 1675, 158, 1679, 173, 1689, 188, 1704, 
       459, 830, 203, 1718, 756, 475, 833, 218}], 
      Line3DBox[{881, 1021, 2260, 882, 229, 2072, 635, 238, 2053, 618, 2054, 
       248, 345, 1880, 255, 507, 1990, 361, 933, 2299, 1059, 944, 1066, 2275, 
       954, 261, 2090, 656, 270, 2064, 628, 280, 436, 1941, 287, 542, 2011, 
       452, 1002, 2314, 1105, 1014}], 
      Line3DBox[{883, 1208, 1209, 2261, 884, 1110, 1218, 1111, 2265, 1479, 
       1122, 1231, 2367, 1123, 1439, 1233, 1441, 1135, 2322, 1245, 1136, 1442,
        1247, 2336, 1144, 1261, 1145, 922, 2292, 1051, 934, 2300, 1060, 945, 
       1310, 1311, 2276, 955, 1151, 1321, 1152, 2280, 1489, 1163, 1334, 1164, 
       1444, 1336, 1446, 1176, 1348, 1177, 1447, 1350, 1185, 1364, 1186, 991, 
       2307, 1096, 1003, 2315, 1106, 1015}], 
      Line3DBox[{885, 1210, 1397, 1211, 2262, 886, 1112, 1219, 2332, 1113, 
       1480, 1124, 1232, 2389, 807, 1481, 649, 2323, 1246, 1137, 1470, 1146, 
       2324, 1485, 1147, 923, 1273, 1274, 935, 2301, 1290, 1291, 946, 1312, 
       1419, 1313, 2277, 956, 1153, 1322, 1154, 1490, 1165, 1335, 2390, 815, 
       1491, 670, 1349, 1178, 1475, 1187, 2327, 1495, 1188, 992, 1376, 1377, 
       1004, 2316, 1385, 1386, 1388}], 
      Line3DBox[{887, 1450, 1451, 1398, 2350, 1212, 888, 1220, 1399, 2351, 
       1221, 897, 1234, 1402, 2354, 1235, 1577, 1578, 1579, 2379, 1537, 1536, 
       913, 1043, 2269, 924, 1275, 2341, 1409, 1276, 936, 1292, 1413, 1293, 
       947, 1314, 1420, 1315, 957, 1323, 1421, 2359, 1324, 966, 1337, 1424, 
       2362, 1338, 1585, 1586, 1587, 1553, 1552, 982, 1088, 2284, 993, 1378, 
       2348, 1431, 1379, 1005, 1387, 1433, 1514, 1513, 1568}], 
      Line3DBox[{1006, 1097, 1465, 1432, 1380, 994, 1089, 1427, 2365, 1365, 
       983, 1081, 1352, 2344, 1351, 975, 1075, 1340, 1339, 967, 1072, 2302, 
       958, 1067, 2370, 1461, 1460, 948, 1061, 1414, 1294, 937, 1052, 1410, 
       1277, 925, 1044, 1405, 2357, 1262, 914, 1036, 1249, 2337, 1248, 906, 
       1030, 1237, 2333, 1236, 898, 1027, 2285, 889, 1022, 2369, 1453, 1452, 
       870, 1016, 1389, 1516, 1515, 1569}], 
      Line3DBox[{1007, 1098, 1381, 2308, 995, 1090, 1428, 1366, 984, 1082, 
       1353, 2345, 1179, 976, 1076, 1341, 1166, 1492, 968, 1547, 1546, 2325, 
       1325, 1155, 959, 1068, 1148, 949, 2270, 1062, 1295, 938, 1053, 1278, 
       2293, 926, 1045, 1406, 1263, 915, 1037, 1250, 2338, 1138, 907, 1031, 
       1238, 2373, 1125, 1482, 899, 1531, 1530, 2317, 1222, 1114, 890, 1023, 
       1107, 871, 2255, 1017, 1189, 1190}], Line3DBox[CompressedData["
1:eJwVzz9IQmEUhvEjmebWGGRQJCYIWgQt4dggVIKLDU5NTba0Ca1tQlN7e9of
UGltbWvUOZ1aIhoa7HeHh/c9z3e/e+7dOr9sdlIRcYzvpYjTdMTrcsQFxhhh
xh/xQ72Nci6iIad8jb/VD7kT+cEdcIuViHd9T284q2QidlHFG1/hz/iCOYuN
ZBdf4vP6C57xwG1yT3oWjxjgnl/j+/qPLHjXXN7xq7LL73Ofeo/LyS/fdKOn
9bqzor0l7OCaT/Etftv86/7Q3OH/kl38VfLPmGDdM/+EvCXS
       "]], 
      Line3DBox[{1012, 1103, 1374, 2312, 1000, 1094, 1373, 1361, 989, 1086, 
       1426, 2364, 1358, 980, 1079, 1346, 1174, 973, 1074, 2326, 1488, 1161, 
       964, 1071, 1561, 847, 952, 2382, 846, 1471, 1288, 942, 1057, 1271, 
       2297, 931, 1049, 1270, 1258, 920, 1041, 1404, 2356, 1255, 911, 1034, 
       1243, 2334, 1133, 904, 1029, 2318, 1478, 1120, 895, 1026, 2375, 1559, 
       841, 879, 2376, 840, 1526, 839, 1207}], 
      Line3DBox[{1013, 1104, 1375, 2313, 1001, 1095, 1363, 2306, 990, 1087, 
       1362, 1360, 981, 1080, 1347, 1175, 974, 1549, 1548, 1333, 1162, 965, 
       1545, 2384, 1544, 1472, 1150, 953, 2374, 1065, 1289, 943, 1058, 1272, 
       2298, 932, 1050, 1260, 2291, 921, 1042, 1259, 1257, 2288, 912, 1035, 
       1244, 2335, 1134, 905, 1533, 1532, 2319, 1230, 1121, 896, 1529, 2378, 
       1528, 1467, 1109, 880, 2387, 1020, 1525, 1573}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJxMnHk01s/7/0VU0o5IJWRPqzVxaUGJhFKylaXIVrYKKUlC0UKWFikioqSs
MaLsRPad275FpSSl31z3+/s559c/nTPnOtc8r2Xuecy85hCycNK3ZmVhYTm6
gIWFjf5/dmK+6y//F3kq0/8E989dprL3+z/6bxyk9S/Cz689JOK2csujUn+Y
mlB7ZcE+BFfGMrmewzBJsBC+puf7GDL2PFwjpcEAR1s/fvm+EbJOujnm/JJk
ELT6btsv2gnSL1z0DteNkMuxxFisPB28W1s5Fq/ohKjX1a/msA0TM6FNbi1P
30PqimchEwIMWCaeUT90roc0J+z8vbO1HCzd15/faz8IbDw7BBdb2aj2rNN1
GbH8DPuco5qvPPsC218fH6P2oCRU9AntU5bo2qD9xSK9dOofrI+xXkL/clPr
/dF/4bZbqAdEO06qoJ6l1c3zUM+11/dXUv3A80U8AfX/EEs/g/o/8Q2x03hh
pF8yBuN1e64jjvE2Ngesp/kBEYH4L5if3MCcj5gf29+nevfVJKgyfv9bgvk8
/vO/fN5t+14k9TI+7+3Uv39sGhtVdkz9N269GkT3xXaTT1y75n0Mega3wxxa
Vz4fhgN1v1L49QaJx5a1IXZW+eCZsMyi0KoXgubfPGreMUS+++rYPu6qAMtX
A1bD1t2g7ekQeuT7ILH/+NCoo68e7N8/1Gsq7oIPI+tE5tr3kYUr98zVEu6E
nu4lqapT3XBc7IS57M8W8sJmfoR5Ui8kvwx8Y27eC0fXOL0fsjmhyt9U1ml8
bACMLlzuzuzqgzvhjEBqD+fXN9xC+4Pdzslo3yGfLE39Q4W1zO991P/CIJUk
9N9eonyH6oFgNkdr1MOmw8HU87Oz7DDVDytXXndH/ayGT06hfq4Tms9ovLC4
neMBxntJrtQO452OqV5A8wOHTOTXYH5eDvuMYX6M4582/4mMVc2e/i+fZtP/
5fNv8Ea3H1oP8vL//hNxYVdQ6frz37hzxIM/V9waiezZ3IUZPGngaZi8wyB5
DA6aF+deZWOQs4uMKxJGquD6IZ+T3PuHYPJO9NUghR5SsFj0Sq1uKwTu4/rk
8rQPQsQXrApe2k2+9N5vN1nWA9vWcPnOV+iBT0cnXV4faCb3JbxyJ20HIFzt
itGpD91w4WXEkw39ZWSgJj6ee+cw3IutVk1n6wbe2Y8BX99qqRYf75k7oToC
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
yC9tNc47uG6RI+U64ug1dCyLct3ql9qu1J5sMfZnQfsb9THf0P6N7deHyI0z
J0kW+ucJq05G/6dVdVEPGWqbMEA9T9jlN6Oezrb7d5BLfdsUJlG/zMO9cqh/
UYNhF3Ks++7tRRjvU3btLRjvx1VdWsi9Xq+ql36g+dFNOlKI+ekOltP4Gxmb
Z6X0Xz7/x3U6HE0TP7UeqPYfyC10ZlfI/R/XtT9Ys/gq5Zbin4KR6TxphDgX
z0NuaTA5csqPcs43t1vV8SNV5P6hGRbknHmS6+RvUC5q99aI+6zbSoYTVp1D
LjL6GlCHHKX0c5cl5Shy2arWEDmKx/NLeRrlrodBz80od5FGh9/GyF1Ooj1b
NlJOE1LTcKecRl5yhVgip50bNEkNea2fd2KeTv+46gj5lV2xD7kuN4L1DLUn
C+T0XNDeo2zmBNoX+f5opv5JTeFOE/SfKy5+DP0fmR/fiJz5xyD0BOpJasg+
jHoeWchuo/qJ2fuEZ6i/bmrXBdQfzedvSuMlKQLKDRjvcEbAPIxXTli925dy
7xPZtGjMz4D23aWYHzZ7QTGlBxF5vst2fMB8/o/rDmtLj+wZtFe9qrJRhnJI
7v+4bg6nbsYqyi3uOcJOlFvIjXdu55BbjIoGo8Uo57hw/T1OOYfsdXvshpzj
OVSc8phykY/8Q3HKReTowGpd5KLnArqS9yhHnX20WodyFLkSvaIZOcpt9EDq
EuqfVXPUiXIXsZ9WZHJXH/dacUvKabK/L2lRTiN7zFzWIqdl1es7yk1tyHN8
yOtGuY5c/eGhjFx31VvgArUn3A7/2WfybWPaD9pl1FP/ZNyrnel/7v5VTP8y
Qp4bqB7iYCDO1GP/faYJ9Ww+qR5D9RMR4zim/kuL9zL1s6/nCaLxEpv535nx
ytd1MONlfbjEi+aHPJkfxcyPikIsMz8xfDujFona5sWdWr4R8/k/rvtRbnlj
dUlY3tLmsFLKIbn/47q2e1+MIym3TMsl5FFuIc32Q2eRW3baNlWxUM65YNab
STmHnInuP5JKOcdFjttrLuWiu3lhSu//dJCN4c7S05SLfhguElpOOeqgv3Y/
5SgiUXEvFDmqc/2Z3VaUu3S787oodxGnTVZeyF0Wk06dPJTT4nvLWimnkZ97
X95DTnN1vDpZmaCqau4lnUW5jvS9+NSCXPeH/JrDSzlQrju6Be0tm3+Fof2F
x2UHqX94YSfVif6Npb56oP8tk74iVA8c7enqQz27kjcz9eS2jbhR/SAZPq6M
+jnfF25A/ZYRqnk0XribcisH4z3+eK4JxssQGpej+YEfj7cUYH6C0+LPYX62
lYvkGHy7o3pnpqIM8/k/rvvss8zLzjEuL2zwUy3lkNz/cV1mlyoXcst41M03
LcJJJGVejRpyCwd3Ydko5Rypyc2PxeQ+kAGr4DLknLaJuc+Ri3zK1FyVPtWQ
1gjFIeSiQ2945yJHjQ4qBspfbyFOk9OXkaNScvalZlLuWuWoO++BJIMcDizT
QO6q67q1mkE5beHRuCrKacRWabL6AOW0IwOtWpTrVJ0qzrymXEce8ZSfQ67T
r2NRp/aQa5BSgvZL938pR3vWjrnZ1D/kk0hW9O+eLLoL/X9cvJQNOZO75mYQ
6pGWaPZBPdoPEuKQSy83ep9H/QEn0kdR/zhX23saL6yV/BSP8W5+mV6L8foF
r/t6kXJvccX+QszPyoP/DmJ+Gv6KqVOuU43jCq7DfP6P65pOTyVRrsvjX9pf
tpexJvd/XFe1/MM65Bbzs3IW7GvCSJfHOya3OMb2CSHnbJ9e5c1zLZkcD3zJ
j5zD8jZHDLloXJor4+5MFpk6yitwgnLRA7UDc5CjxKV7Ph/Q+EC09ZIXelOO
kvyZsAO5y32hianUeBV5bPNmIXLX1IQKB3KaZ/qQ/b3gRrLj1pAGcho755KO
K/4nVbdmneGuqGsn7w28VyLXKUVZCSAHOrOUm6N9x/gnJbQX+VW0G7nxxve/
B9A/l84BNvQ/yNWAekDurukn1JOVY82Jet5q7VyPXOrcoZiD+qdVLoug/g2f
9q5CjjUYrgzGeD85yq3HeFVSEtiReyv/ZrlgfhbeyZRi5mdRXKPK2gTVuuX/
5fN/XHc2bks23tcdDY3dpv7/3dc9PtNiitySfnfI7V6pPyia3Ihg3ke5LViP
nNM4IlS83/cxfDXXm4Oc808vYwtyUXsCS7DjkmS4ncVQRC7aMP3TFTmqrFbI
fm15OtyLLu5FjlrKt+EbcpeSEvfJuqfv4dkSWSbXjZbN0UJOs9SbF6fYWg7v
/xZ8RE6ri6/8hPd1iuYrX/RZfgaw88pArlP2eGOCHCiskX4b7V90KGei/cYI
7ynkxgb+jyfQ/5L1n5lcZ0mi3JAzOcIzrVGPu0wJA/WMugtsRi6teXngLuof
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
uYN6rNPwWSrq8GP+imL4XT6+701i6XAfCzvcvxOyXLoV8/ByPZ86MQ9/uWQ5
F/2+5PJFoXj8vruqT3zA76u8qF0H9wE/RA63Yj7/Rb7tb8znK9VILg+5RHXR
pbBgg58MUnM4XAt12rG/3k3dNPVuqlZkSIBTcBvY1hgE8Mp1EcE/IYKo01z2
ORmOyreBzHgO67zEh6Dtr1CnFV1WVrR/VgH6rmKxm+/3kt2DZ26jTltrMHqN
6jTScF+Hk+o0klnc3GtFdVrI8nTRI8Wd5EisFB/VaaTVmN8cdRrfOTNXqtPI
us1by8yVQ8j4Ee9c1GkBOfc0w3triO2Mp5dxX6Al0H0C9wXSPQ8Hn6S6ZbTA
8rhGQin5s3f8Leq0aNf+8JtU53gaa9UaWzYT+TVbGHupzvnvvxuMv9b1fVdG
OGdRvcScLzCd6iUylp+fiXppdvlLWbp+h5zhx8dx/f7oos1L1GmZi9g3ODin
woJT7az8v5anNyv//9p2ye6ZQrkwfdq5sSfx/SQ84Ox91GkBoMz5+XMweGhG
svYR4LA7ax/h7MckLtouebrm6zRsV0wug9Xuw47lwRQ/Ef0wsx7xj7f3MRH/
s6uO92l/SbtM+0ns75yFGrHY39vhvyRLQxKJhO8x1jmTN5unT+A5E9W5Gi4f
H1WRUY6ewIGoaHJdRq/Zkeo09SuabHcXvCN+rnv+HJoeR/4c/fUZdZqszKCH
t/sj8F21UJfqNMK/81ct6jQh6+lRD0ZTieQJWKCRGkt0dsb/gzrtaVLIg2Cq
c9bF3M2jOocY8UpL1FCdYxS4PUWY6qJ/OD8FU11EagJlnVEXKf2VT/gvzxD7
4zyJpvrq+Y7LsVRfkWOfexmor1ZUnA/VpHoszTtnnOoxolm7aB3qsUmj78m0
HFQTbrLK7878ooDl8Q/tsqkdEE7ZyrLzR72RZWd27Ug0xQO6PyOfI568rjQW
nmJu88sUP5xrWJyP+LktD0gifvuYueWtoW0QvbHMAc+9nBEJ1cJzL6IKpRd7
X1QQ3pN1kr41MeSUrSC3OdVpDPtTd2v664j8MaNeqtNI5Hb2SNRplorlqbY1
7cT7Q6WsgX8u6WqJku+hOs08svjlaqpbZDll/Z4dqCbr/Hm35lHd0vTX/0T+
yxuox5x+H0J10WSK+zOqi4iYClc46qLtC0wej8tng0KS1ADVaYQnXD4Sddrx
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
xb6IdLlPaHgc3kki1JZP2knl/w/jcL/r
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{357.5051134037112, 191.5957610273297},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0, Pi}, {0, 2 Pi}, {-1.8592464653150405`, 
     1.8592465067890542`}}, {{0, 3.141592653589793}, {
     0, 6.283185307179586}, {-1.8592464653150405`, 1.8592465067890542`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{1.188540327098666, -3.038954589694767, 0.8956153709228647},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.9152943948623304`*^9, 3.915294434723908*^9, {3.915294494264043*^9, 
   3.915294508964079*^9}, 3.9152946703671665`*^9, 3.915294796744775*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"edata", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", "=", "1"}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"1", " ", "lambda"}]}], ",", 
         RowBox[{"I0", "=", "1"}], ",", 
         RowBox[{"l", "=", 
          RowBox[{"lambda", "/", "50"}]}], ",", " ", 
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
         RowBox[{"eta", "=", 
          RowBox[{"120", " ", "Pi"}]}], ",", 
         RowBox[{"numberOfModes", "=", "1"}]}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Edipoletheta", "[", 
               RowBox[{
               "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}],
                "]"}], ",", "0"}], "}"}], ".", 
            RowBox[{"Bfunc", "[", 
             RowBox[{
              RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "0", ",", 
             RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.915294730169364*^9, 3.915294733537837*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9152947400553837`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(\\(\\(-1.8053408774871941`*^-16\\)\\) - \
\\(\\(1.4295798567284454`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(5.345294001668381`*^-13\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.915294768196248*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.915294768717884*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(\\(\\(-3.7187838054721263`*^-16\\)\\) + \
\\(\\(1.2537141116591793`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.6710146119816375`*^-13\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.9152947958963175`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gdata", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", "=", "1"}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"1", " ", "lambda"}]}], ",", 
         RowBox[{"I0", "=", "1"}], ",", 
         RowBox[{"l", "=", 
          RowBox[{"lambda", "/", "50"}]}], ",", " ", 
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"Pi", "/", "lambda"}]}]}], ",", 
         RowBox[{"eta", "=", 
          RowBox[{"120", " ", "Pi"}]}], ",", 
         RowBox[{"numberOfModes", "=", "1"}]}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Edipoletheta", "[", 
               RowBox[{
               "r", ",", "theta", ",", "k", ",", "eta", ",", "l", ",", "I0"}],
                "]"}], ",", "0"}], "}"}], ".", 
            RowBox[{"Cfunc", "[", 
             RowBox[{
              RowBox[{"-", "m"}], ",", "n", ",", "theta", ",", "phi"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"phi", ",", "0", ",", 
             RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "numberOfModes"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.9152938049553742`*^9, 3.9152938873796296`*^9}, {
  3.9152939241089425`*^9, 3.915293977323961*^9}, {3.9152940375836897`*^9, 
  3.915294156150947*^9}, {3.9152942163631315`*^9, 3.9152942603937035`*^9}, {
  3.9152945178335047`*^9, 3.9152945336723003`*^9}, {3.9152945778748255`*^9, 
  3.9152946240886517`*^9}, {3.9152946742033873`*^9, 3.915294693698239*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.915294156427239*^9, 3.9152942615665507`*^9, {3.9152945189359426`*^9, 
   3.9152945345543795`*^9}, 3.9152945868402395`*^9, 3.9152946244748178`*^9, {
   3.9152946748086815`*^9, 3.9152946940393476`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(\\(\\(-1.4259426972529354`*^-15\\)\\) + \
\\(\\(2.2100377083944522`*^-15\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(4.607620413896622`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.915294156427239*^9, 3.9152942615665507`*^9, {3.9152945189359426`*^9, 
   3.9152945345543795`*^9}, 3.9152945868402395`*^9, 3.9152946244748178`*^9, {
   3.9152946748086815`*^9, 3.9152946948478007`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.915294156427239*^9, 3.9152942615665507`*^9, {3.9152945189359426`*^9, 
   3.9152945345543795`*^9}, 3.9152945868402395`*^9, 3.9152946244748178`*^9, {
   3.9152946748086815`*^9, 3.9152946949086385`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.915294156427239*^9, 3.9152942615665507`*^9, {3.9152945189359426`*^9, 
   3.9152945345543795`*^9}, 3.9152945868402395`*^9, 3.9152946244748178`*^9, {
   3.9152946748086815`*^9, 3.915294694952521*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(\\(\\(-1.338989683019598`*^-15\\)\\) - \
\\(\\(5.065392549852277`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.3499614319567046`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.915294156427239*^9, 3.9152942615665507`*^9, {3.9152945189359426`*^9, 
   3.9152945345543795`*^9}, 3.9152945868402395`*^9, 3.9152946244748178`*^9, {
   3.9152946748086815`*^9, 3.915294695725309*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["edata"], "Input",
 CellChangeTimes->{{3.915294775949236*^9, 3.915294776573702*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1.8053408774871941`*^-16"}], "-", 
     RowBox[{"1.4295798567284454`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     RowBox[{"-", "5.026548245463594`"}], "-", 
     RowBox[{"30.782734081770755`", " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     RowBox[{"-", "3.7187838054721263`*^-16"}], "+", 
     RowBox[{"1.2537141116591793`*^-16", " ", "\[ImaginaryI]"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9152947968021307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["gdata"], "Input",
 CellChangeTimes->{{3.91529455129678*^9, 3.915294552212637*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1.4259426972529354`*^-15"}], "+", 
     RowBox[{"2.2100377083944522`*^-15", " ", "\[ImaginaryI]"}]}], ",", "0.`",
     ",", 
    RowBox[{
     RowBox[{"-", "1.338989683019598`*^-15"}], "-", 
     RowBox[{"5.065392549852277`*^-16", " ", "\[ImaginaryI]"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9152945527285385`*^9, 3.9152946300837326`*^9, {3.915294680812137*^9, 
   3.915294698532907*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["gdata"], "Input",
 CellChangeTimes->{{3.9152943257364893`*^9, 3.9152943263941116`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1.3492896036582103`*^-16"}], "-", 
       RowBox[{"2.5261910618912253`*^-17", " ", "\[ImaginaryI]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "5.466748780422876`*^-18"}], "+", 
       RowBox[{"1.2854267605065842`*^-17", " ", "\[ImaginaryI]"}]}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", 
      RowBox[{"0.050265482454635954`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.157473408172663`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1.6506978076091805`*^-16"}], "+", 
       RowBox[{"6.635317295611287`*^-17", " ", "\[ImaginaryI]"}]}], ",", 
      RowBox[{"4.0752822630345466`*^-17", "-", 
       RowBox[{"2.6149362919618345`*^-17", " ", "\[ImaginaryI]"}]}]}], 
     "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.91529432695889*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1782, 890},
WindowMargins->{{22, Automatic}, {Automatic, 24}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{594.9599999999999, 842.04}},
Magnification->1.5000001192092896`,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 296, 6, 117, "Section"],
Cell[878, 30, 832, 23, 75, "Input"],
Cell[CellGroupData[{
Cell[1735, 57, 102, 1, 65, "Subsection"],
Cell[1840, 60, 775, 22, 45, "Input"],
Cell[2618, 84, 2442, 65, 104, "Input"],
Cell[5063, 151, 832, 24, 45, "Input"],
Cell[CellGroupData[{
Cell[5920, 179, 113, 1, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[6058, 184, 1049, 27, 75, "Input"],
Cell[7110, 213, 5052, 125, 923, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12199, 343, 1004, 26, 75, "Input"],
Cell[13206, 371, 501, 10, 35, "Message"],
Cell[13710, 383, 501, 10, 35, "Message"],
Cell[14214, 395, 513, 10, 35, "Message"],
Cell[14730, 407, 558, 11, 35, "Message"],
Cell[15291, 420, 2961, 86, 967, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18313, 513, 114, 1, 65, "Subsection"],
Cell[18430, 516, 734, 21, 45, "Input"],
Cell[19167, 539, 340, 8, 45, "Input"],
Cell[CellGroupData[{
Cell[19532, 551, 166, 2, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[19723, 557, 949, 25, 112, "Input"],
Cell[20675, 584, 3955, 97, 1416, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24667, 686, 906, 24, 112, "Input"],
Cell[25576, 712, 1921, 67, 1383, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27558, 786, 114, 1, 65, "Subsection"],
Cell[27675, 789, 455, 11, 45, "Input"],
Cell[28133, 802, 2767, 75, 162, "Input"],
Cell[30903, 879, 948, 27, 45, "Input"],
Cell[CellGroupData[{
Cell[31876, 910, 192, 2, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[32093, 916, 1174, 28, 199, "Input"],
Cell[33270, 946, 5330, 133, 1416, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38637, 1084, 945, 24, 112, "Input"],
Cell[39585, 1110, 469, 10, 82, "Message"],
Cell[40057, 1122, 501, 10, 52, "Message"],
Cell[40561, 1134, 471, 10, 82, "Message"],
Cell[41035, 1146, 499, 10, 52, "Message"],
Cell[41537, 1158, 471, 10, 82, "Message"],
Cell[42011, 1170, 552, 11, 52, "Message"],
Cell[42566, 1183, 501, 10, 52, "Message"],
Cell[43070, 1195, 558, 11, 52, "Message"],
Cell[43631, 1208, 2712, 82, 1480, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[46392, 1296, 117, 1, 40, "Subsubsection"],
Cell[46512, 1299, 701, 20, 57, "Input"],
Cell[47216, 1321, 520, 16, 45, "Input"],
Cell[47739, 1339, 618, 20, 45, "Input"],
Cell[48360, 1361, 579, 15, 45, "Input"],
Cell[48942, 1378, 905, 19, 45, "Input"],
Cell[49850, 1399, 728, 18, 45, "Input"],
Cell[50581, 1419, 662, 16, 45, "Input"],
Cell[51246, 1437, 620, 17, 45, "Input"],
Cell[51869, 1456, 1200, 34, 75, "Input"],
Cell[53072, 1492, 1018, 20, 45, "Input"],
Cell[54093, 1514, 784, 18, 45, "Input"],
Cell[54880, 1534, 709, 17, 45, "Input"],
Cell[55592, 1553, 620, 17, 45, "Input"],
Cell[56215, 1572, 1231, 35, 75, "Input"],
Cell[57449, 1609, 379, 12, 45, "Input"],
Cell[57831, 1623, 444, 14, 45, "Input"],
Cell[58278, 1639, 497, 15, 45, "Input"],
Cell[58778, 1656, 1167, 28, 45, "Input"],
Cell[59948, 1686, 978, 25, 45, "Input"],
Cell[60929, 1713, 936, 25, 45, "Input"],
Cell[61868, 1740, 1357, 41, 104, "Input"],
Cell[63228, 1783, 1536, 46, 104, "Input"],
Cell[64767, 1831, 1550, 44, 104, "Input"],
Cell[CellGroupData[{
Cell[66342, 1879, 1174, 29, 75, "Input"],
Cell[67519, 1910, 1596, 37, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69152, 1952, 1359, 32, 75, "Input"],
Cell[70514, 1986, 877, 17, 51, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71440, 2009, 161, 2, 51, "Subsubsection"],
Cell[CellGroupData[{
Cell[71626, 2015, 328, 9, 45, "Input"],
Cell[71957, 2026, 603, 18, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72597, 2049, 620, 14, 45, "Input"],
Cell[73220, 2065, 677, 19, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73934, 2089, 420, 13, 45, "Input"],
Cell[74357, 2104, 417, 13, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74811, 2122, 475, 14, 45, "Input"],
Cell[75289, 2138, 429, 14, 68, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[75767, 2158, 209, 3, 40, "Subsubsection"],
Cell[CellGroupData[{
Cell[76001, 2165, 347, 10, 45, "Input"],
Cell[76351, 2177, 433, 15, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76821, 2197, 1150, 30, 75, "Input"],
Cell[77974, 2229, 2585, 64, 172, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80596, 2298, 480, 14, 45, "Input"],
Cell[81079, 2314, 2651, 70, 172, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83767, 2389, 1147, 30, 75, "Input"],
Cell[84917, 2421, 1515, 44, 166, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86469, 2470, 965, 27, 75, "Input"],
Cell[87437, 2499, 1415, 42, 166, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88889, 2546, 902, 26, 75, "Input"],
Cell[89794, 2574, 2492, 61, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92323, 2640, 430, 13, 45, "Input"],
Cell[92756, 2655, 2489, 63, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95282, 2723, 956, 27, 75, "Input"],
Cell[96241, 2752, 1437, 42, 166, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97715, 2799, 960, 27, 75, "Input"],
Cell[98678, 2828, 2488, 61, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101203, 2894, 481, 14, 45, "Input"],
Cell[101687, 2910, 2518, 63, 169, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104278, 2981, 104, 1, 117, "Section"],
Cell[CellGroupData[{
Cell[104407, 2986, 695, 19, 45, "Input"],
Cell[105105, 3007, 1362, 41, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106504, 3053, 134, 2, 45, "Input"],
Cell[106641, 3057, 2077, 61, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108755, 3123, 627, 18, 45, "Input"],
Cell[109385, 3143, 1376, 41, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110798, 3189, 185, 3, 45, "Input"],
Cell[110986, 3194, 2093, 61, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113116, 3260, 1036, 28, 75, "Input"],
Cell[114155, 3290, 555, 12, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114747, 3307, 1397, 37, 75, "Input"],
Cell[116147, 3346, 41465, 690, 542, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157649, 4041, 1509, 39, 75, "Input"],
Cell[159161, 4082, 24364, 409, 670, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183562, 4496, 1508, 39, 75, "Input"],
Cell[185073, 4537, 23208, 391, 670, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208318, 4933, 200, 4, 45, "Input"],
Cell[208521, 4939, 87616, 1448, 670, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296174, 6392, 1358, 39, 104, "Input"],
Cell[297535, 6433, 216, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297788, 6441, 1531, 43, 104, "Input"],
Cell[299322, 6486, 189, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299548, 6494, 1970, 52, 104, "Input"],
Cell[301521, 6548, 5056, 105, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306614, 6658, 2360, 57, 104, "Input"],
Cell[308977, 6717, 5177, 107, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314191, 6829, 1621, 40, 75, "Input"],
Cell[315815, 6871, 2442, 57, 154, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318294, 6933, 264, 5, 45, "Input"],
Cell[318561, 6940, 1692, 44, 154, "Output"]
}, Open  ]],
Cell[320268, 6987, 2234, 56, 104, "Input"],
Cell[CellGroupData[{
Cell[322527, 7047, 1432, 37, 75, "Input"],
Cell[323962, 7086, 2139, 53, 154, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326138, 7144, 1342, 36, 75, "Input"],
Cell[327483, 7182, 4702, 87, 186, "Output"]
}, Open  ]],
Cell[332200, 7272, 2140, 55, 104, "Input"],
Cell[CellGroupData[{
Cell[334365, 7331, 1330, 36, 75, "Input"],
Cell[335698, 7369, 2131, 53, 146, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337866, 7427, 213, 4, 45, "Input"],
Cell[338082, 7433, 1637, 44, 146, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[339768, 7483, 164, 3, 117, "Section"],
Cell[339935, 7488, 782, 22, 45, "Input"],
Cell[340720, 7512, 918, 25, 45, "Input"],
Cell[341641, 7539, 535, 14, 45, "Input"],
Cell[CellGroupData[{
Cell[342201, 7557, 1297, 34, 75, "Input"],
Cell[343501, 7593, 27205, 456, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370743, 8054, 1392, 39, 75, "Input"],
Cell[372138, 8095, 53222, 884, 670, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425397, 8984, 1335, 38, 75, "Input"],
Cell[426735, 9024, 53040, 881, 670, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479812, 9910, 1007, 30, 75, "Input"],
Cell[480822, 9942, 26804, 450, 670, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[507663, 10397, 130, 2, 45, "Input"],
Cell[507796, 10401, 195, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508028, 10409, 147, 3, 45, "Input"],
Cell[508178, 10414, 216, 4, 44, "Output"]
}, Open  ]],
Cell[508409, 10421, 342, 10, 45, "Input"],
Cell[CellGroupData[{
Cell[508776, 10435, 205, 4, 45, "Input"],
Cell[508984, 10441, 179, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509200, 10449, 154, 3, 45, "Input"],
Cell[509357, 10454, 151, 2, 44, "Output"]
}, Open  ]],
Cell[509523, 10459, 1272, 31, 75, "Input"],
Cell[CellGroupData[{
Cell[510820, 10494, 68, 1, 45, "Input"],
Cell[510891, 10497, 167, 2, 44, "Output"]
}, Open  ]],
Cell[511073, 10502, 332, 9, 45, "Input"],
Cell[CellGroupData[{
Cell[511430, 10515, 1768, 50, 104, "Input"],
Cell[513201, 10567, 208, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513446, 10575, 1772, 50, 104, "Input"],
Cell[515221, 10627, 259, 5, 44, "Output"]
}, Open  ]],
Cell[515495, 10635, 2433, 62, 104, "Input"],
Cell[517931, 10699, 2187, 56, 104, "Input"],
Cell[520121, 10757, 2142, 55, 104, "Input"],
Cell[CellGroupData[{
Cell[522288, 10816, 1505, 38, 75, "Input"],
Cell[523796, 10856, 1931, 49, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525764, 10910, 219, 4, 45, "Input"],
Cell[525986, 10916, 1762, 48, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527785, 10969, 1506, 38, 75, "Input"],
Cell[529294, 11009, 1899, 50, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531230, 11064, 217, 4, 45, "Input"],
Cell[531450, 11070, 1777, 48, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533264, 11123, 1247, 34, 75, "Input"],
Cell[534514, 11159, 1325, 39, 141, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535876, 11203, 271, 5, 45, "Input"],
Cell[536150, 11210, 1376, 41, 141, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537563, 11256, 1117, 29, 75, "Input"],
Cell[538683, 11287, 7589, 169, 453, "Output"]
}, Open  ]],
Cell[546287, 11459, 740, 21, 45, "Input"],
Cell[547030, 11482, 687, 20, 45, "Input"],
Cell[CellGroupData[{
Cell[547742, 11506, 1369, 32, 75, "Input"],
Cell[549114, 11540, 767, 15, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549918, 11560, 297, 8, 45, "Input"],
Cell[550218, 11570, 8400, 145, 372, "Output"]
}, Open  ]],
Cell[558633, 11718, 410, 11, 45, "Input"],
Cell[CellGroupData[{
Cell[559068, 11733, 139, 2, 45, "Input"],
Cell[559210, 11737, 723, 16, 366, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559970, 11758, 497, 14, 45, "Input"],
Cell[560470, 11774, 8206, 142, 370, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568713, 11921, 670, 18, 45, "Input"],
Cell[569386, 11941, 596, 11, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570019, 11957, 168, 3, 45, "Input"],
Cell[570190, 11962, 953, 20, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571180, 11987, 847, 25, 67, "Input"],
Cell[572030, 12014, 373, 10, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572440, 12029, 1566, 44, 112, "Input"],
Cell[574009, 12075, 141249, 2296, 463, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715295, 14376, 1734, 48, 156, "Input"],
Cell[717032, 14426, 580, 11, 52, "Message"],
Cell[717615, 14439, 1201, 20, 229, "Message"],
Cell[718819, 14461, 578, 11, 52, "Message"],
Cell[719400, 14474, 1204, 20, 229, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[720641, 14499, 2044, 52, 156, "Input"],
Cell[722688, 14553, 761, 14, 52, "Message"],
Cell[723452, 14569, 1384, 23, 229, "Message"],
Cell[724839, 14594, 766, 14, 97, "Message"],
Cell[725608, 14610, 759, 14, 52, "Message"],
Cell[726370, 14626, 1381, 23, 229, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[727788, 14654, 97, 1, 67, "Input"],
Cell[727888, 14657, 533, 14, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[728458, 14676, 96, 1, 67, "Input"],
Cell[728557, 14679, 496, 14, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[729090, 14698, 101, 1, 67, "Input"],
Cell[729194, 14701, 957, 25, 127, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
