(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    700024,      13544]
NotebookOptionsPosition[    691259,      13271]
NotebookOutlinePosition[    691639,      13287]
CellTagsIndexPosition[    691596,      13284]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "En", " ", "esta", " ", "celda", " ", "leemos", " ", "los", " ", "3", " ", 
    RowBox[{"ficheros", ".", " ", "Uno"}], " ", "por", " ", "cada", " ", 
    "componente", " ", "del", " ", "campo", " ", "el\[EAcute]ctrico"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"fileEx", "=", 
   RowBox[{
   "OpenRead", "[", 
    "\"\<C:\\\\Users\\\\aitor\\\\OneDrive\\\\Desktop\\\\TFG-AitorIngelmo\\\\\
Matematica\\\\Notebook NFtoNF\\\\Pruebas con diferentes \
dimensiones\\\\microstrip_patch_antenna_Ex_20Puntos.txt\>\"", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8914117177778344`*^9, 3.891411720616555*^9}, 
   3.8914150115205054`*^9, {3.891415709247676*^9, 3.8914157137513294`*^9}, {
   3.8918556717151184`*^9, 3.891855711492879*^9}, {3.8918571286724644`*^9, 
   3.891857197483159*^9}, 3.891861651107126*^9, {3.8919166581938396`*^9, 
   3.8919166712130547`*^9}, 3.8919181118550243`*^9, 3.891919366266716*^9, 
   3.891920313425004*^9, 3.891921732577292*^9, 3.891921940423334*^9}],

Cell[BoxData[
 RowBox[{"InputStream", "[", 
  RowBox[{"\<\"C:\\\\Users\\\\aitor\\\\OneDrive\\\\Desktop\\\\TFG-\
AitorIngelmo\\\\Matematica\\\\Notebook NFtoNF\\\\Pruebas con diferentes \
dimensiones\\\\microstrip_patch_antenna_Ex_20Puntos.txt\"\>", ",", "71"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8919219745814962`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputStream", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\aitor\\\\OneDrive\\\\Desktop\\\\TFG-AitorIngelmo\\\\\
Matematica\\\\Notebook NFtoNF\\\\Pruebas con diferentes \
dimensiones\\\\microstrip_patch_antenna_Ex_40Puntos.txt\>\"", ",", "71"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.891921706950715*^9, 3.8919217069586945`*^9}}],

Cell[BoxData[
 RowBox[{"InputStream", "[", 
  RowBox[{"\<\"C:\\\\Users\\\\aitor\\\\OneDrive\\\\Desktop\\\\TFG-\
AitorIngelmo\\\\Matematica\\\\Notebook NFtoNF\\\\Pruebas con diferentes \
dimensiones\\\\microstrip_patch_antenna_Ex_40Puntos.txt\"\>", ",", "71"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.891921974622944*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"En", " ", "esta", " ", "celda"}], ",", " ", 
    RowBox[{
    "leemos", " ", "las", " ", "8", " ", "primeras", " ", "lineas", " ", "de",
      " ", "los", " ", 
     RowBox[{"ficheros", ".", " ", "Las"}], " ", "cuales", " ", "coinciden", 
     " ", "con", " ", "las", " ", "cabeceras", " ", "del", " ", 
     "m\[IAcute]smo"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Read", "[", 
     RowBox[{"fileEx", ",", "String"}], "]"}], ",", 
    RowBox[{"{", "8", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8914146457543535`*^9, 3.891414657631291*^9}, {
   3.8914147706055737`*^9, 3.8914147717982388`*^9}, {3.891414822415186*^9, 
   3.8914148241343427`*^9}, {3.891415548109582*^9, 3.8914155660811405`*^9}, {
   3.891415681680797*^9, 3.891415693738987*^9}, {3.8914157316796103`*^9, 
   3.891415732778143*^9}, {3.8914182394208755`*^9, 3.891418239733041*^9}, {
   3.8914182797655916`*^9, 3.8914182926778297`*^9}, {3.8918560740900097`*^9, 
   3.8918561057936897`*^9}, 3.891861653802694*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"En", " ", "estas", " ", "celdas"}], ",", " ", 
    RowBox[{
    "mostramos", " ", "lo", " ", "leido", " ", "en", " ", "la", " ", "celda", 
     " ", 
     RowBox[{"anterior", ".", " ", "De"}], " ", "esta", " ", "forma"}], ",", 
    " ", 
    RowBox[{
    "nos", " ", "aseguramos", " ", "de", " ", "que", " ", "hemos", " ", 
     "leido", " ", "las", " ", 
     RowBox[{"cabeceras", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"headerdataEx", "=", 
   RowBox[{"Read", "[", 
    RowBox[{"fileEx", ",", "String"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8914158359850645`*^9, 3.891415848594877*^9}, {
   3.8918561130988445`*^9, 3.891856144254821*^9}, 3.891861655410153*^9}],

Cell[BoxData["\<\"% x                       y                        z        \
                emw.Ex (V/m) @ freq=1.5750E9\"\>"], "Output",
 CellChangeTimes->{3.891921974644841*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "En", " ", "estas", " ", "celda", " ", "leemos", " ", "todo", " ", "el", 
    " ", "documento", " ", "de", " ", "nuevo"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataEx", "=", 
    RowBox[{"ReadList", "[", 
     RowBox[{"fileEx", ",", "String"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8914183957260704`*^9, 3.891418401529296*^9}, {
   3.891856702000659*^9, 3.891856723530425*^9}, {3.8918567568822565`*^9, 
   3.891856758444412*^9}, 3.891861656811536*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Cerramos", " ", "el", " ", "objeto", " ", "que", " ", "lee", " ", "los", 
    " ", "archivos"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Close", "[", "fileEx", "]"}]}]], "Input",
 CellChangeTimes->{{3.8914148311409674`*^9, 3.8914148350005474`*^9}, {
   3.891415741600342*^9, 3.891415742666151*^9}, {3.8918567644166265`*^9, 
   3.8918567892492003`*^9}, 3.8918616579711523`*^9}],

Cell[BoxData["\<\"C:\\\\Users\\\\aitor\\\\OneDrive\\\\Desktop\\\\TFG-\
AitorIngelmo\\\\Matematica\\\\Notebook NFtoNF\\\\Pruebas con diferentes \
dimensiones\\\\microstrip_patch_antenna_Ex_20Puntos.txt\"\>"], "Output",
 CellChangeTimes->{3.891921974659978*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Esta", " ", "celda", " ", "nos", " ", "permite", " ", "separar", " ", 
    "la", " ", "cadena", " ", "de", " ", "texto", " ", "en", " ", 
    RowBox[{"diversas", ".", " ", "Emplea"}], " ", "espacios", " ", "en", " ",
     "blanco", " ", "como", " ", "separado"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"datasetExSplitted", "=", 
    RowBox[{"StringSplit", "[", "dataEx", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8914185203912582`*^9, 3.891418532791583*^9}, {
   3.891856813849495*^9, 3.8918568796887083`*^9}, {3.8918589532049875`*^9, 
   3.8918589535264177`*^9}, 3.8918592288209295`*^9, 3.891861659209696*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8914194861771884`*^9, 3.8914194889097395`*^9}, {
   3.891856922144788*^9, 3.891856941160757*^9}, {3.8918578094637756`*^9, 
   3.891857812551096*^9}, {3.8918585831422186`*^9, 3.891858584221463*^9}, 
   3.891916342571294*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Esta", " ", "celda", " ", "es", " ", "fundamental"}], ",", " ", 
    RowBox[{
    "nos", " ", "permite", " ", "mapear", " ", "los", " ", "NaN", " ", "y", 
     " ", "exponenciales", " ", "de", " ", "los", " ", "ficheros", " ", "a", 
     " ", "t\[EAcute]rminos", " ", "equivalentes", " ", "de", " ", 
     "Matematica"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"datavaluesEz", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Thread", ",", 
         RowBox[{"Thread", "[", 
          RowBox[{"f", "[", 
           RowBox[{"datasetExSplitted", ",", "a"}], "]"}], "]"}]}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<E\>\"", "\[Rule]", "\"\<*10^\>\""}], ",", 
            RowBox[{"\"\<i\>\"", "\[Rule]", "\"\<I\>\""}], ",", 
            RowBox[{"\"\<NaN\>\"", "\[Rule]", "\"\<0\>\""}]}], "}"}]}], ",", 
         RowBox[{"f", "->", "StringReplace"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8914194389184475`*^9, 3.8914194498802657`*^9}, {
  3.891419730752898*^9, 3.8914197322789974`*^9}, {3.891422325233326*^9, 
  3.891422352761261*^9}, {3.8918569445844536`*^9, 3.8918570115725517`*^9}, {
  3.891857798263911*^9, 3.8918578052756124`*^9}, {3.891858062985053*^9, 
  3.8918580652426047`*^9}, {3.8918585951405807`*^9, 3.891858599111761*^9}, {
  3.891916344508111*^9, 3.8919163455882235`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Esta", " ", "variable", " ", "fija", " ", "la", " ", "cantidad", " ", 
    RowBox[{
    "de", " ", "?", "\[DownQuestion]", "?", "\[DownQuestion]", "?", 
     "\[DownQuestion]", "?", "\[DownQuestion]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"dimension", "=", "20"}]}]], "Input",
 CellChangeTimes->{{3.891422972773905*^9, 3.891422975036495*^9}, {
  3.8914231135654783`*^9, 3.8914231141251726`*^9}, {3.8918570224078712`*^9, 
  3.8918570569887543`*^9}, {3.8918570939515314`*^9, 3.8918570953621373`*^9}, {
  3.8918595713855495`*^9, 3.891859571440508*^9}, {3.891859848174218*^9, 
  3.8918598485572166`*^9}, {3.8919163279410315`*^9, 3.8919163280440073`*^9}, {
  3.8919181273758154`*^9, 3.8919181274696007`*^9}, {3.891918316009572*^9, 
  3.8919183182571793`*^9}, {3.8919193799500704`*^9, 3.891919379984271*^9}, {
  3.8919203272131557`*^9, 3.8919203272593155`*^9}, {3.89192044415963*^9, 
  3.8919204445871725`*^9}, {3.8919205054312415`*^9, 3.891920506007493*^9}, {
  3.891920537742951*^9, 3.891920537911557*^9}, {3.8919205895427628`*^9, 
  3.891920589664134*^9}, {3.8919217412190237`*^9, 3.8919217412770853`*^9}, {
  3.891921961912319*^9, 3.8919219619815226`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.891921974837351*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Estas", " ", "lineas", " ", "se", " ", "usan", " ", "para", " ", 
    "elminar", " ", "todos", " ", "los", " ", "valores", " ", 
    RowBox[{"repetidos", ".", " ", "Evitando"}], " ", "tener", " ", "la", " ",
     "misma", " ", "coordenada", " ", "muchas", " ", "veces"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"xcoordinates", "=", 
    RowBox[{"Union", "[", 
     RowBox[{"Part", "[", 
      RowBox[{"datavaluesEz", ",", "All", ",", "1"}], "]"}], "]"}]}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.8914221209515333`*^9, 3.8914221315666656`*^9}, {
   3.891855468154986*^9, 3.891855468893314*^9}, {3.891855944954315*^9, 
   3.891856047690856*^9}, 3.8918616658514986`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Obtenemos", " ", "los", " ", "tensores", " ", "de", " ", "cada", " ", 
    "coordenada"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xcoordinatesTensor", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"datavaluesEz", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"j", "-", "1"}], ")"}], " ", "dimension"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"k", "-", "1"}], ")"}], " ", 
            RowBox[{"dimension", "^", "2"}]}]}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "dimension"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "dimension"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "dimension"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"datavaluesEzTensor", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"datavaluesEz", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"j", "-", "1"}], ")"}], " ", "dimension"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"k", "-", "1"}], ")"}], " ", 
            RowBox[{"dimension", "^", "2"}]}]}], "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "dimension"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "dimension"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "dimension"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8914233025118933`*^9, 3.891423321591118*^9}, {
   3.891857278289122*^9, 3.891857324660999*^9}, {3.891861384346898*^9, 
   3.891861398267812*^9}, 3.891861674012229*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Evaluamos", " ", "las", " ", "dimensiones", " ", "del", " ", "tensor", 
     " ", "X"}], ";", " ", 
    RowBox[{
    "y", " ", "del", " ", "tensor", " ", "de", " ", "los", " ", "valores", 
     " ", "del", " ", "campo"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dimensions", "[", "xcoordinatesTensor", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "datavaluesEzTensor", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8915115429431934`*^9, 3.8915115456834335`*^9}, {
  3.8918573324241714`*^9, 3.891857356625411*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20", ",", "20", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.8919219748762407`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20", ",", "20", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.8919219748801236`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Representamos", " ", "el", " ", "valor", " ", "del", " ", 
    "\[IAcute]ndice", " ", "definido", " ", "por", " ", "la", " ", "variable",
     " ", "\"\<index1\>\""}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"index1", "=", "12"}], "\[IndentingNewLine]", 
   RowBox[{"zcoordinateselected1", "=", 
    RowBox[{
     RowBox[{"xcoordinates", "[", 
      RowBox[{"[", "index1", "]"}], "]"}], " ", "1.*^-3"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8914239143561573`*^9, 3.8914239169380007`*^9}, 
   3.8915028217707834`*^9, {3.891503504249302*^9, 3.8915035918698263`*^9}, {
   3.8918573731918983`*^9, 3.89185737375257*^9}, {3.891857425432538*^9, 
   3.8918574572525563`*^9}, {3.8919164219410133`*^9, 3.891916422892152*^9}, {
   3.8919174081807685`*^9, 3.89191741081176*^9}, {3.89191784965615*^9, 
   3.891917849732009*^9}, {3.8919181360026073`*^9, 3.891918136138955*^9}, {
   3.8919182646378155`*^9, 3.89191826466957*^9}, {3.8919183201752586`*^9, 
   3.891918320598853*^9}, {3.8919204521349735`*^9, 3.8919204522154036`*^9}, {
   3.891920544271166*^9, 3.891920544355189*^9}, {3.891920599652617*^9, 
   3.891920600991118*^9}, {3.8919217622023125`*^9, 3.8919217622775707`*^9}, {
   3.891921964197568*^9, 3.891921965965993*^9}}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.89192197489741*^9}],

Cell[BoxData["0.014999999999999986`"], "Output",
 CellChangeTimes->{3.891921974899274*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Obtiene", " ", "las", " ", "coordenadas", " ", "para", " ", "el", " ", 
    "\[IAcute]ndice", " ", "introducido", " ", "previamente"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"xcoordinatesPlane1", "=", 
    RowBox[{"Part", "[", 
     RowBox[{"xcoordinatesTensor", ",", "All", ",", "All", ",", "index1"}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8914987911252995`*^9, 3.891498825451442*^9}, 
   3.891502840748517*^9, {3.891857465031963*^9, 3.891857508719243*^9}, {
   3.891857643953209*^9, 3.8918576535018463`*^9}, {3.891857755495908*^9, 
   3.8918577674877048`*^9}, 3.8918616185065837`*^9, {3.8918616832899637`*^9, 
   3.891861683841745*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"datavaluesEzPlane1", "=", 
   RowBox[{"Part", "[", 
    RowBox[{"datavaluesEzTensor", ",", "All", ",", "All", ",", "index1"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.8918616225067825`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "datavaluesEzPlane1", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891424122442993*^9, 3.891424126307997*^9}, {
   3.8914242178525667`*^9, 3.8914242222439575`*^9}, 3.89149813038586*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxd2D2OFDEQBtCGaMMJJpigg6bUsizLsvyXwxk4AhIxV+GoHAGtCNC+Tkov
tezqr+rLj1/ff34+juP3p+N4r/++P18/1uPbR7/hB37iFz7xhQPfOOGMC664
4Y4HnnjhjT036xt+4Cd+4RNfOPCNE8644Iob7njgiRfe2HvmuVkf+Ilf+MQX
DnzjhDMuuOKGOx544oU39l16zzw36xO/8IkvHPjGCWdccMUNdzzwxAtvbB/z
XXrPPDfrC5/4woFvnHDGBVfccMcDT7zwxvZ9+5jv0nvmuVlPfOHAN04444Ir
brjjgSdeeGP/k/Z9+5jv0nvmuVkvHPjGCWdccMUNdzzwxAtvbK7wP2nft4/5
Lr1nnps18I0TzrjgihvueOCJF97YHGau8D9p37eP+S69Z56b9cYJZ1xwxQ13
PPDEC29sbjWHmSv8T9r37WO+S+9ZYGvCGRdcccMdDzzxwhub882t5jBzhf9J
+759zHcZ2HOzZlxwxQ13PPDEC2/sXGTON7eaw8wV/ift+/axwN4zz81acMUN
dzzwxAtv7BzpXGTON7eaw8wV/ift+4F9l94zz81accMdDzzxwhs7dztHOheZ
882t5jBzhf/JwPYx36X3zHOzNtzxwBMvvLF7Cudu50jnInO+udUcZq4IbN+3
j/kuvWeem7XjgSdeeGP3Ou4pnLudI52LzPnmVnNYYP+T9n37mO/Se+a5WQee
eOGN3YO513FP4dztHOlcZM43twY2V/iftO/bx3yX3jPPzTrxwhu7N3QP5l7H
PYVzt3Okc5E5P7A5zFzhf9K+bx/zXXrPPDfrwhu7Z3Vv6B7MvY57Cudu50jn
osDmVnOYucL/pH3fPua79J55btaN3Uu7Z3Vv6B7MvY57Cudu58jA5nxzqznM
XOF/0r5vH/Ndes88t//1L+tuVnY=
      "], {{
        GrayLevel[0.8], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJxFmXfYlcURR9/XDiKK9N57771JRzrCR++9g/QivX3SjBgMapQYFdHYiA0V
iRqMRqOikYgaRcVEiRKjIWLNnuc9+9w/Juvs7M7OmXuBO79UnjB30JzzkiQ5
Fv7n/LCWCJYGY69isILBLg1WKsniFwQraRy/QrACnitt/MJglbxXKFjZYBcF
uzhYGeP45dy7JFhlz14WrFawosGKBasarHCwy4NVMY5fPdgVwYoEq2Ycv4Z7
Vwar6UquOsGKy3dVsPrBGgQr7/sw1DUOXz1XuBvJQL0NZcBvYd3U1dg4+Zq4
VvCN0t5pZk/pTVPj+C3NAWtreeDrbB3U2sY9+Nq61jRWyje6+B41tjIfuToE
q20P2nmPHneSmTc6Gsdvbo2wdTUfPZgUrH+wAcF6yAlHd/nx+/o2HD2Nw93L
ldz9jMN0tX2kB72N4/dxr5VvtpE7z88P1kHB2ss3RB56do08+EPd485Ia+0h
Q1v7Mcx8sA537RZshCt3RnkPpjeCPR3smWBjrRuOMXLiTwk20BrHGYdpvCt9
mmp8cLCJ9gXWCcbxpxmHaborrHOtD6bZMlD7DONwz3TNk6ORn9Ms97gzWibq
nmMO8s4zN9zzXUdbSwf7u8A9uBfaC1hXWwfvL5EHvsXy418nD+eWGuf7tcZ7
1LjCPtKn5cEm6690j96s9Sw92BLsWmtZLw99Wmccf6NsMG0wjr/JPZg2u5Jr
q/kWBftNsO3BdgRb5fsw5BuH73pXuHfJQL07ZcD/pXVT1w3GyfcL1+t8Y5l3
dttTenOjcfw95oD1V/LAd4d1bAu21z34bnHdbGyJvV/k58Znc7P5yHWbPaUH
t3oP/3aZeePXxvPtF98Fvgd3ygD3C8EeDPZQsAeslbrukRmmu+0F/u+sg3P7
je82x145DgS7yV7eaxz/Pvf2+N4t1v6ENf022COyUfvDxvF/Lxv9O2gc/7Fg
+5Ls83/clVxPmu8uV1j5zO/3fRgOGYfvKVe4n5WBeg/LgP9H66auI8bJ9wdX
evOMfeHO8/aU3jxnHP+oOWD9kzzwvW4d/P31crBH5fuz6+PG7vGNu2Tis3nR
fOR61Z7Sg1e8h/+azLzxF+P4y8OPip3BdgQ7JgPcb9kLWP8e7CXreltmmP5q
HP8964DpuHF68IH34Hgnyb5z9PJvxvFPuEdvPvQstf8jyWp6M9hHslH7SeP4
n8hG/z42jn/KPf5N+NSVXP80H3z8oDodln8Fe9f3YfjMOHyfu8L9pQzU+4UM
+P+1buo6Y5x8/3Z9zzeOe+dre0pv/hPsff2z5oD1W3ng+9k6qPWce/B95/qp
sbd9I02z96jxf+Yj1w/2lB587z38n2TmjR+N439jjbCdl2b56EHV8N+Fg10e
7KJgX8lxQZrxw10ozd6G4+I0i8N9SZqt5L4szeIwFUyzPtKDAmkWx780zfbI
xZvn5C6eZp8frFekGQ98RdOMh55dmWY8+MXSbI87ZYJdaO0wfGc/SpgP1pKu
5wcr5QpfWe/BxPeIPyv8OamQZnXDUT7NOPGr+QY1VjQOUyVX+lTdeJFgVdKs
L7BWNo5fwzhMNV1hbRCstEx104yB2msZh7u2a3E5vvR7Wsc97pSTibrrmQPu
huaGu5ErZxu7wtrElR40dYW1hQwwNZcZv50M1NjSON+pVq70rL1xam9jj+hB
a+P4bd0jVwfPwtTd+qirk32Bqas8cHSxd/jd3OPOuGBXB+sTrKP5uN/DfPD1
dG0WrJcrfL1dW5ijhXx9ZaP2a8xLXf1lg2OAK70Z6EoP+nmPc4Pl5P4g4x2s
taVvDA3WOdhVwYbJCXeee/jD3YN7hGt34/Xty0j34B4tM6yj3MMfKzOsY4z3
th8V/bzHWx89mCgP3JNlhnWSe/izrJXapxiHdaorPZhtHI4ZwYbIPc04PZ5j
HL65rjAt8jOmrmutG455xuGb7wr3THNT0wL3uDNBJngWmoO8i81NfIkr3PwG
WpNkvy+Xugf3cnsB60o54dhg3dS1Wk5qWeNKn9a60o/rgk333Hr5ub/OOP4K
3+GNjeaGdbNs9GOTe/hb3INvqyv9W2bt1J3vHtzbZIbvevfwd3gH1u3G8Xe6
R127XOlBmmTzProAWkWlJJvH0TCYp6PmwYoWUNA4czsaRhnPoVtU9j56BjpA
1DzKeg6NobwxNIwq3uFt5m7mczQM5vWoeVT1HHoG837UPKp7LmocxNA4aunD
VNe86AHMtsy/Bay9fJLTOOrKV1+f+pgRo+bB2tA6mMdbJDmNo7H5muqX8WwD
e8EsHzWPZp6DqZW54GCub+371Ng5yWkcbeRpp1/a3JxlzmDeWGAvWpsXZmbT
qHmwtpeN3J1k7uS5yjI1t/au9ovZnVlzsnUwl/eTgXk56h+s3X2feN8kp3f0
tO4B3ucddICoc/T2HL3oY4xaB/l+1COGWSuzf5y/B3sOJmb8qH8M8Ry9zDPW
xRxRBxhh3kb6Xe1dX+uAZ6Tn4BulT33jkpzmMdbPgTqm2q+ocYwz3wT9Xp4d
bS+Y9aPmMdFzME0zFxxoA9OTnAYxL8npGjPkmaXf09ycbSxDtySnm0yTGQ0g
6iWzvT/S3FFTmes58i3wbVjRAfjOMR/xO/9162aOjtoG6yLfZE5fJd9Sz/F9
YqZfJsNqz8GMDhA1jxWem2aOlXKu8U7UKTbJgQ6wVg7m/ahtsK6XYZMxNAxm
2H3yrzUvbFvMC+tWfXjy9aPGkS/PNn1qZf7dYT5m8Jusm9lxV5LTOG6Q+Ub9
FcZ3Wgf3ouax23PLzL1d1j2+AR86QdQtbjYG515jUfvY6+e63hxw3moMNub9
qHncZgy2O5Kc5nG758bZl4XWdac9hSPqAbAxR0dt425j1Micfr9s+z0H6736
1P2A5+BEB4iaxwHPwfOg52B4SD/qFI9ZL3P/QXke9hx8j+jvsZb7ZDtobKcc
sO0z36P6T/gG8Sf1memZfd+Q85Ax2Pgz85R1H/YsdTCPv+DbR5Jsxol6xxH5
n9M/YPywnNyL+sfznttv7qdlO+obMKEZRA3jRWPwoBu8lOR0kJeTnF5zSM5X
jMHD7B/1j1eNcZa/D6L+8ZrnmKWYF3+07jftEb+n+Q3Jb03eY/6N+gfr+zIz
a0f9g/Uta2fWf9eaPvQ+PWDuj7rIce/Tp3eMRZ3ilLUwgzObM8czk/KjCCZm
+ZOynfQNmNAEov7xseeOmSPqA+T42X6c8g6fwQnrOGrtJ+T5zDqOW8dpzzE/
Rv3jC2PUwbz+jffPeI4azxqjd+gAXyU5feSM9aIDMOOjQVBj1CR+8jOKesc5
e3c6yWkzn3uWWpjZ6dcnnv1W/u+9/5HvnJWN3FEX+cFzfM5fWysMzMzkZQ5n
VmWGJS8+8zk8aAJoCvCgE3CHd4gz55OL+Zpz1FXYfPQLnSDqIqyco19oBcSo
Gw2hsGzM68X9/vI9jvoHK+foGbN/1D9Yi/jZowMU9ftEjmJpTu8oIQPzPpoC
PaL2gmlOBykpQ1nP8SazeDVrZfaP+gdrOWsiXtVcFT1HTTW8X8i+Rl2kkuei
3lHDmphN6/t2Q314anku6h34/H+h/J4uYb+r+vnByUxfR556+sXdq53m9I6G
fh7l3PvA7zifVdRBGqU5HaSxbzObt5MJHSDqH6zNrJV4W2tq6Tne7uB9esbs
H3WRVp6jX22MUW9H7/A+s3l3e8Q831m2Tp6Dh9k/6h9dPAdDN2ONzYEf9Q7y
Mucz447182hrHVEH6ZnmdJBe1sd8HPUP1qirMKMP9n5/z0UdpL+cfXyTXvD3
cdRFBnoONmbzIXKgCeT5PjWOkWe4sah3DE9zGg1nK8rQ1F7kmRdmdICohYz0
fi9zR11ktOeod7w9gocZn/mf2ZuZfJ11MI/PkoEZOuofk7yTZ3ymrFM8N9xc
s+0dOkHURaZ6Luodc6yD2XyhdS3Wh2Oe56LegR/1uyb2FC1huqzoAAvs60L9
0e7NT3N6x2I/5wm++az/lvBv2lCZZsiKBrDUN9AvVsmBBrDC+jbYO+6s9lzU
QVbLzNnl9oUeR11kredg22gu6kXv2OT7aBPb5dliLOodW+z7cs9OtN4lMm8y
L8zoHVELyff+UnNHXWSb56Legf7xf71spiQ=
          "]]]}, {}, {}, {}, {}}, VertexColors -> CompressedData["
1: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
Oaw2fE6NhK9Ldy8XOffP68+/qv8POoqElg==
       "]], {}}, AspectRatio -> 1, Frame -> True, FrameLabel -> {None, None}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[
           NCache[{{0}, {
              Rational[1, 200]}, {
              Rational[1, 100]}, {
              Rational[3, 200]}, {
              Rational[1, 50]}, {
              Rational[1, 40]}, {
              Rational[3, 100]}, {
              Rational[7, 200]}, {
              Rational[1, 25]}, {
              Rational[9, 200]}, {
              Rational[1, 20]}, {
              Rational[11, 200]}, {
              Rational[3, 50]}, {
              Rational[13, 200]}, {
              Rational[7, 100]}, {
              Rational[3, 40]}, {
              Rational[2, 25]}, {
              Rational[17, 200]}, {
              Rational[9, 100]}, {
              Rational[19, 200]}, {
              Rational[1, 10]}, {
              Rational[21, 200]}, {
              Rational[11, 100]}, {
              Rational[23, 200]}, {
              Rational[3, 25]}, {
              Rational[1, 8]}, {
              Rational[13, 100]}, {
              Rational[27, 200]}, {
              Rational[7, 50]}, {
              Rational[29, 200]}, {
              Rational[3, 20]}, {
              Rational[31, 200]}, {
              Rational[4, 25]}, {
              Rational[33, 200]}, {
              Rational[17, 100]}, {
              Rational[7, 40]}, {
              Rational[9, 50]}, {
              Rational[37, 200]}, {
              Rational[19, 100]}, {
              Rational[39, 200]}, {
              Rational[1, 5]}, {
              Rational[41, 200]}, {
              Rational[21, 100]}, {
              Rational[43, 200]}, {
              Rational[11, 50]}, {
              Rational[9, 40]}, {
              Rational[23, 100]}, {
              Rational[47, 200]}, {
              Rational[6, 25]}, {
              Rational[49, 200]}, {
              Rational[1, 4]}, {
              Rational[51, 200]}, {
              Rational[13, 50]}, {
              Rational[53, 200]}, {
              Rational[27, 100]}, {
              Rational[11, 40]}, {
              Rational[7, 25]}, {
              Rational[57, 200]}, {
              Rational[29, 100]}, {
              Rational[59, 200]}, {
              Rational[3, 10]}, {
              Rational[61, 200]}, {
              Rational[31, 100]}, {
              Rational[63, 200]}, {
              Rational[8, 25]}, {
              Rational[13, 40]}, {
              Rational[33, 100]}, {
              Rational[67, 200]}, {
              Rational[17, 50]}, {
              Rational[69, 200]}, {
              Rational[7, 20]}, {
              Rational[71, 200]}, {
              Rational[9, 25]}, {
              Rational[73, 200]}, {
              Rational[37, 100]}, {
              Rational[3, 8]}, {
              Rational[19, 50]}, {
              Rational[77, 200]}, {
              Rational[39, 100]}, {
              Rational[79, 200]}, {
              Rational[2, 5]}, {
              Rational[81, 200]}, {
              Rational[41, 100]}, {
              Rational[83, 200]}, {
              Rational[21, 50]}, {
              Rational[17, 40]}, {
              Rational[43, 100]}, {
              Rational[87, 200]}, {
              Rational[11, 25]}, {
              Rational[89, 200]}, {
              Rational[9, 20]}, {
              Rational[91, 200]}, {
              Rational[23, 50]}, {
              Rational[93, 200]}, {
              Rational[47, 100]}, {
              Rational[19, 40]}, {
              Rational[12, 25]}, {
              Rational[97, 200]}, {
              Rational[49, 100]}, {
              Rational[99, 200]}, {
              Rational[1, 2]}, {
              Rational[101, 200]}, {
              Rational[51, 100]}, {
              Rational[103, 200]}, {
              Rational[13, 25]}, {
              Rational[21, 40]}, {
              Rational[53, 100]}, {
              Rational[107, 200]}, {
              Rational[27, 50]}, {
              Rational[109, 200]}, {
              Rational[11, 20]}, {
              Rational[111, 200]}, {
              Rational[14, 25]}, {
              Rational[113, 200]}, {
              Rational[57, 100]}, {
              Rational[23, 40]}, {
              Rational[29, 50]}, {
              Rational[117, 200]}, {
              Rational[59, 100]}, {
              Rational[119, 200]}, {
              Rational[3, 5]}, {
              Rational[121, 200]}, {
              Rational[61, 100]}, {
              Rational[123, 200]}, {
              Rational[31, 50]}, {
              Rational[5, 8]}, {
              Rational[63, 100]}, {
              Rational[127, 200]}, {
              Rational[16, 25]}, {
              Rational[129, 200]}, {
              Rational[13, 20]}, {
              Rational[131, 200]}, {
              Rational[33, 50]}, {
              Rational[133, 200]}, {
              Rational[67, 100]}, {
              Rational[27, 40]}, {
              Rational[17, 25]}, {
              Rational[137, 200]}, {
              Rational[69, 100]}, {
              Rational[139, 200]}, {
              Rational[7, 10]}, {
              Rational[141, 200]}, {
              Rational[71, 100]}, {
              Rational[143, 200]}, {
              Rational[18, 25]}, {
              Rational[29, 40]}, {
              Rational[73, 100]}, {
              Rational[147, 200]}, {
              Rational[37, 50]}, {
              Rational[149, 200]}, {
              Rational[3, 4]}, {
              Rational[151, 200]}, {
              Rational[19, 25]}, {
              Rational[153, 200]}, {
              Rational[77, 100]}, {
              Rational[31, 40]}, {
              Rational[39, 50]}, {
              Rational[157, 200]}, {
              Rational[79, 100]}, {
              Rational[159, 200]}, {
              Rational[4, 5]}, {
              Rational[161, 200]}, {
              Rational[81, 100]}, {
              Rational[163, 200]}, {
              Rational[41, 50]}, {
              Rational[33, 40]}, {
              Rational[83, 100]}, {
              Rational[167, 200]}, {
              Rational[21, 25]}, {
              Rational[169, 200]}, {
              Rational[17, 20]}, {
              Rational[171, 200]}, {
              Rational[43, 50]}, {
              Rational[173, 200]}, {
              Rational[87, 100]}, {
              Rational[7, 8]}, {
              Rational[22, 25]}, {
              Rational[177, 200]}, {
              Rational[89, 100]}, {
              Rational[179, 200]}, {
              Rational[9, 10]}, {
              Rational[181, 200]}, {
              Rational[91, 100]}, {
              Rational[183, 200]}, {
              Rational[23, 25]}, {
              Rational[37, 40]}, {
              Rational[93, 100]}, {
              Rational[187, 200]}, {
              Rational[47, 50]}, {
              Rational[189, 200]}, {
              Rational[19, 20]}, {
              Rational[191, 200]}, {
              Rational[24, 25]}, {
              Rational[193, 200]}, {
              Rational[97, 100]}, {
              Rational[39, 40]}, {
              Rational[49, 50]}, {
              Rational[197, 200]}, {
              Rational[99, 100]}, {
              Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
             0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
             0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
             0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
             0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
             0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
             0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
             0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
             0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
             0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
             0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
             0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
             0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
             0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
             0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
             0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
             0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
             0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
             0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
             0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
             0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
             0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
             0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
             0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
             0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
             0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
             0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
             0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
             0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
             1}}], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              
              LineBox[{{7.499999999999999, -112.49999999999999`}, {
               7.499999999999999, 112.49999999999999`}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.499999999999999, -112.49999999999999`}, 
                   
                   Offset[{4., 0}, {
                    7.499999999999999, -112.49999999999999`}]}, {{
                   7.499999999999999, -69.39655172413792}, 
                   
                   Offset[{4., 0}, {
                    7.499999999999999, -69.39655172413792}]}, {{
                   7.499999999999999, -26.29310344827586}, 
                   
                   Offset[{4., 0}, {
                    7.499999999999999, -26.29310344827586}]}, {{
                   7.499999999999999, 16.810344827586206`}, 
                   
                   Offset[{4., 0}, {7.499999999999999, 
                    16.810344827586206`}]}, {{7.499999999999999, 
                   59.91379310344827}, 
                   
                   Offset[{4., 0}, {7.499999999999999, 
                    59.91379310344827}]}, {{7.499999999999999, 
                   103.01724137931033`}, 
                   
                   Offset[{4., 0}, {7.499999999999999, 
                    103.01724137931033`}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.499999999999999, -103.87931034482757`}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -103.87931034482757`}]}, {{
                   7.499999999999999, -95.25862068965516}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -95.25862068965516}]}, {{
                   7.499999999999999, -86.63793103448275}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -86.63793103448275}]}, {{
                   7.499999999999999, -78.01724137931033}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -78.01724137931033}]}, {{
                   7.499999999999999, -60.775862068965516`}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -60.775862068965516`}]}, {{
                   7.499999999999999, -52.155172413793096`}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -52.155172413793096`}]}, {{
                   7.499999999999999, -43.53448275862068}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -43.53448275862068}]}, {{
                   7.499999999999999, -34.91379310344827}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -34.91379310344827}]}, {{
                   7.499999999999999, -17.67241379310345}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -17.67241379310345}]}, {{
                   7.499999999999999, -9.051724137931034}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -9.051724137931034}]}, {{
                   7.499999999999999, -0.43103448275862066`}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -0.43103448275862066`}]}, {{
                   7.499999999999999, 8.189655172413792}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    8.189655172413792}]}, {{7.499999999999999, 
                   25.43103448275862}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    25.43103448275862}]}, {{7.499999999999999, 
                   34.05172413793103}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    34.05172413793103}]}, {{7.499999999999999, 
                   42.672413793103445`}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    42.672413793103445`}]}, {{7.499999999999999, 
                   51.29310344827586}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    51.29310344827586}]}, {{7.499999999999999, 
                   68.53448275862068}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    68.53448275862068}]}, {{7.499999999999999, 
                   77.1551724137931}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    77.1551724137931}]}, {{7.499999999999999, 
                   85.77586206896551}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    85.77586206896551}]}, {{7.499999999999999, 
                   94.39655172413792}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    94.39655172413792}]}, {{7.499999999999999, 
                   111.63793103448275`}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    111.63793103448275`}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox["0", 
                  
                  Offset[{7., 0.}, {
                   7.499999999999999, -112.49999999999999`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["5", 
                  
                  Offset[{7., 0.}, {
                   7.499999999999999, -69.39655172413792}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["10", 
                  
                  Offset[{7., 0.}, {
                   7.499999999999999, -26.29310344827586}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["15", 
                  
                  Offset[{7., 0.}, {7.499999999999999, 
                   16.810344827586206`}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox["20", 
                  
                  Offset[{7., 0.}, {7.499999999999999, 
                   59.91379310344827}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox["25", 
                  
                  Offset[{7., 0.}, {7.499999999999999, 
                   103.01724137931033`}], {-1, 0.}, Automatic, {1, 0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {}}}}, Antialiasing -> False], 
           "GraphicsAxes", StripOnInput -> False]}, AspectRatio -> Automatic, 
         Frame -> True, FrameStyle -> Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.`", ",", "26.093247581482842`"}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.891921975009708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "datavaluesEzPlane1", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkBands\>\""}], ",", "\n", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"BarLegend", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<DarkBands\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "20"}], "}"}]}], "}"}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891424083435777*^9, 3.8914240878596478`*^9}, {
  3.891498154635603*^9, 3.891498157562456*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxd2H9oVWUYwPHrUFshedGL3bbT2bnvvZ6de3Z2dn4lZIFPOMoajhFFEKlY
qWA2yRpNFprLjJVtgtUQkiIyF7KY1xWUGMT6I70R1hYUSTWykdbo4nJG/lFE
Z/fgd/88fO7ZzraX931+vLlHtt+3qSaVSo3OS6X+i/9/VVZdG1NyrWvhNJyB
s7AGG7CCC7AJW7ANO7ALe7APB3AIRzDXjbEWTsMZOAtrsAEruACbsAXbsAO7
sAf7cACHcARzn3HdGNNwBs7CGmzACi7AJmzBNuzALuzBPhzAIRzBPJfcZ1w3
xgychTXYgBVcgE3Ygm3YgV3Yg304gEM4gpnHeC65z7hujFlYgw1YwQXYhC3Y
hh3YhT3YhwM4hCOYeZ95jOeS+4zrxqjBBqzgAmzCFmzDDuzCHuzDARzCEcw6
ybzPPMZzyX3GdWMswCZswTbswC7swT4cwCEcwewbWAeZ15mneO64jzS4AJuw
A7uwB/twAIdwBLNPYt1nHWNeZp7hudFgA2YswCZswTbswC7swT4cwCEcwewr
2Sex7rOOMS8zz/BccR8pmNGELdiGHdiFPdiHAziEI5h9OPtK9kms+6xjzMvM
Qzx3Cua6MVqwDTuwC3uwDwdwCEcw5xb24ewr2Sex7rOOMW8bsIK5z7hujDbs
wC7swT4cwCEcwZzzOLewD2dfyT6JdZ91jueO+8iBXdiDfTiAQziCOddyTuPc
wT6afSH7HNZ15hmeG+4DrgujC3uwDwdwCEcw53zOrZzDOFewT2bfxz6HdV/B
zMvMMzw33EdcN0YP9uEADuEI5r0I53zOrZzDOFewT2ZfyD5JwaxjzMvMMzx3
3GdcN0YfDuAQjmDeI/FehHM+51bOYZwr2Eezr1Qw6z7rGPMy8xTPJfcZ140x
gEM4gnnvxnsk3otwzufcyjmMcwf7cAWzT2LdZx1jXmce47nkPuO6MYZwBPOe
kvduvEfivQjnfM6tnNM4tyiYfSX7JNZ91kHmfeYxnkvuM64bYwTzXpf3lLx3
4z0S70U453Ou5ZynYPbh7CvZJ7FvYJ1k3mce47nkPuO6MRpib5xdk2url/ah
y8fPdTTEnydzZV1Oe+NUb53seHV62ak/VfX50JEfPmgZ0KvvKQ33LP7r/nzV
c/9v/4nyL0OHdXmmrX39rnIjnttybDpYdmHlLbJ59yt/fLXNxnNDLry2fGxs
SzLXpk+eT807kbz/3bPvD++5K3mfWX78n8n1yc//tm/qzI+9RWmecLZ3tOrV
75t735nj6/qe7izKfuP2060qj+eWlCcOPnvDz0VJNb149M6LjXhuy9bh3icf
2FuUw92jC5e+kHxes/zrz/4uzf0+R7oXffnY+Keq6ur6rGlZ0flg8nNbZmbe
/GltU/Xvb+vvujJ1KJm7B7sOLNgz4sg3C/WPt61riGO9fJ7uuXvvbTk5kJvt
r32qTo5UFg+8fVSvxhrj8sNhJi/z5eJHmy1drrb0vZM72yizG5bcs/qtBpEb
v319lV6U57SR5t136HJ+4mRpYKtRjc2tHelKScXRkHOLMmvLq604GqIO5fMP
tdtxNOTRyY1dv8/oUqqMrJzdWZQrO3Mq/UQujkU5vcQdHJtujGNRdlxnHtz0
UhKvBpUPr/9El103d38/f0OTTA7c9MW+SyqOtoze+954fr8VR1umx1dcGuxJ
4q+3Ngz3vWzE0ZH67zoXTD2v4ujIv9diPhY=
      "], {{
        GrayLevel[0.8], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwtkddRA1EMRSWPcQXG/8xQESXwSyqBNGQbcCBnA8ZgMrQDDFABoQDORfo4
s2fn7epdSQPDE0PjBTMbhCJcuVmX5wU08EsP70BdDqd4G9bwJ+iHMhxBB2Y4
m4WaasGZxT/r+DlMW3yzgrdhFB+DBfwZKlnzGG7gnbMP2MJvPfwTdvAqNC1q
qnYPXvBXaHpkUJYWrOLXHmdvsIEvQR2fVEZ83sNH4AR/hBL0wSE8pBfhwCOz
sk/Boscduqubs1yGhsUMNItN+MYLPO89elAvv7CL74HDF+93HjVV+78Gvg0/
FjPRbLQD7UI9qBf1pN50h+5qZS3NpJeZi1lDtdSjetUO5jwyKEspe9fOtXvN
uJo7LmdGZd336KWSu/sDKYpUpw==
           "]]}]}, {}, {}, {}, {}}, VertexColors -> CompressedData["
1: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

       "]], {}}, AspectRatio -> 1, Frame -> True, FrameLabel -> {None, None}, 
    Method -> {}, PlotRange -> {{1., 20.}, {1., 20.}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[
           NCache[{{0}, {
              Rational[1, 200]}, {
              Rational[1, 100]}, {
              Rational[3, 200]}, {
              Rational[1, 50]}, {
              Rational[1, 40]}, {
              Rational[3, 100]}, {
              Rational[7, 200]}, {
              Rational[1, 25]}, {
              Rational[9, 200]}, {
              Rational[1, 20]}, {
              Rational[11, 200]}, {
              Rational[3, 50]}, {
              Rational[13, 200]}, {
              Rational[7, 100]}, {
              Rational[3, 40]}, {
              Rational[2, 25]}, {
              Rational[17, 200]}, {
              Rational[9, 100]}, {
              Rational[19, 200]}, {
              Rational[1, 10]}, {
              Rational[21, 200]}, {
              Rational[11, 100]}, {
              Rational[23, 200]}, {
              Rational[3, 25]}, {
              Rational[1, 8]}, {
              Rational[13, 100]}, {
              Rational[27, 200]}, {
              Rational[7, 50]}, {
              Rational[29, 200]}, {
              Rational[3, 20]}, {
              Rational[31, 200]}, {
              Rational[4, 25]}, {
              Rational[33, 200]}, {
              Rational[17, 100]}, {
              Rational[7, 40]}, {
              Rational[9, 50]}, {
              Rational[37, 200]}, {
              Rational[19, 100]}, {
              Rational[39, 200]}, {
              Rational[1, 5]}, {
              Rational[41, 200]}, {
              Rational[21, 100]}, {
              Rational[43, 200]}, {
              Rational[11, 50]}, {
              Rational[9, 40]}, {
              Rational[23, 100]}, {
              Rational[47, 200]}, {
              Rational[6, 25]}, {
              Rational[49, 200]}, {
              Rational[1, 4]}, {
              Rational[51, 200]}, {
              Rational[13, 50]}, {
              Rational[53, 200]}, {
              Rational[27, 100]}, {
              Rational[11, 40]}, {
              Rational[7, 25]}, {
              Rational[57, 200]}, {
              Rational[29, 100]}, {
              Rational[59, 200]}, {
              Rational[3, 10]}, {
              Rational[61, 200]}, {
              Rational[31, 100]}, {
              Rational[63, 200]}, {
              Rational[8, 25]}, {
              Rational[13, 40]}, {
              Rational[33, 100]}, {
              Rational[67, 200]}, {
              Rational[17, 50]}, {
              Rational[69, 200]}, {
              Rational[7, 20]}, {
              Rational[71, 200]}, {
              Rational[9, 25]}, {
              Rational[73, 200]}, {
              Rational[37, 100]}, {
              Rational[3, 8]}, {
              Rational[19, 50]}, {
              Rational[77, 200]}, {
              Rational[39, 100]}, {
              Rational[79, 200]}, {
              Rational[2, 5]}, {
              Rational[81, 200]}, {
              Rational[41, 100]}, {
              Rational[83, 200]}, {
              Rational[21, 50]}, {
              Rational[17, 40]}, {
              Rational[43, 100]}, {
              Rational[87, 200]}, {
              Rational[11, 25]}, {
              Rational[89, 200]}, {
              Rational[9, 20]}, {
              Rational[91, 200]}, {
              Rational[23, 50]}, {
              Rational[93, 200]}, {
              Rational[47, 100]}, {
              Rational[19, 40]}, {
              Rational[12, 25]}, {
              Rational[97, 200]}, {
              Rational[49, 100]}, {
              Rational[99, 200]}, {
              Rational[1, 2]}, {
              Rational[101, 200]}, {
              Rational[51, 100]}, {
              Rational[103, 200]}, {
              Rational[13, 25]}, {
              Rational[21, 40]}, {
              Rational[53, 100]}, {
              Rational[107, 200]}, {
              Rational[27, 50]}, {
              Rational[109, 200]}, {
              Rational[11, 20]}, {
              Rational[111, 200]}, {
              Rational[14, 25]}, {
              Rational[113, 200]}, {
              Rational[57, 100]}, {
              Rational[23, 40]}, {
              Rational[29, 50]}, {
              Rational[117, 200]}, {
              Rational[59, 100]}, {
              Rational[119, 200]}, {
              Rational[3, 5]}, {
              Rational[121, 200]}, {
              Rational[61, 100]}, {
              Rational[123, 200]}, {
              Rational[31, 50]}, {
              Rational[5, 8]}, {
              Rational[63, 100]}, {
              Rational[127, 200]}, {
              Rational[16, 25]}, {
              Rational[129, 200]}, {
              Rational[13, 20]}, {
              Rational[131, 200]}, {
              Rational[33, 50]}, {
              Rational[133, 200]}, {
              Rational[67, 100]}, {
              Rational[27, 40]}, {
              Rational[17, 25]}, {
              Rational[137, 200]}, {
              Rational[69, 100]}, {
              Rational[139, 200]}, {
              Rational[7, 10]}, {
              Rational[141, 200]}, {
              Rational[71, 100]}, {
              Rational[143, 200]}, {
              Rational[18, 25]}, {
              Rational[29, 40]}, {
              Rational[73, 100]}, {
              Rational[147, 200]}, {
              Rational[37, 50]}, {
              Rational[149, 200]}, {
              Rational[3, 4]}, {
              Rational[151, 200]}, {
              Rational[19, 25]}, {
              Rational[153, 200]}, {
              Rational[77, 100]}, {
              Rational[31, 40]}, {
              Rational[39, 50]}, {
              Rational[157, 200]}, {
              Rational[79, 100]}, {
              Rational[159, 200]}, {
              Rational[4, 5]}, {
              Rational[161, 200]}, {
              Rational[81, 100]}, {
              Rational[163, 200]}, {
              Rational[41, 50]}, {
              Rational[33, 40]}, {
              Rational[83, 100]}, {
              Rational[167, 200]}, {
              Rational[21, 25]}, {
              Rational[169, 200]}, {
              Rational[17, 20]}, {
              Rational[171, 200]}, {
              Rational[43, 50]}, {
              Rational[173, 200]}, {
              Rational[87, 100]}, {
              Rational[7, 8]}, {
              Rational[22, 25]}, {
              Rational[177, 200]}, {
              Rational[89, 100]}, {
              Rational[179, 200]}, {
              Rational[9, 10]}, {
              Rational[181, 200]}, {
              Rational[91, 100]}, {
              Rational[183, 200]}, {
              Rational[23, 25]}, {
              Rational[37, 40]}, {
              Rational[93, 100]}, {
              Rational[187, 200]}, {
              Rational[47, 50]}, {
              Rational[189, 200]}, {
              Rational[19, 20]}, {
              Rational[191, 200]}, {
              Rational[24, 25]}, {
              Rational[193, 200]}, {
              Rational[97, 100]}, {
              Rational[39, 40]}, {
              Rational[49, 50]}, {
              Rational[197, 200]}, {
              Rational[99, 100]}, {
              Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
             0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
             0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
             0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
             0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
             0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
             0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
             0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
             0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
             0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
             0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
             0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
             0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
             0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
             0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
             0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
             0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
             0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
             0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
             0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
             0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
             0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
             0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
             0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
             0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
             0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
             0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
             0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
             0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
             1}}], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, ColorFunction -> (Blend["DarkBands", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -112.5}, 
                   Offset[{4., 0}, {7.5, -112.5}]}, {{
                   7.5, -48.940677966101696`}, 
                   Offset[{4., 0}, {7.5, -48.940677966101696`}]}, {{7.5, 
                   14.61864406779661}, 
                   Offset[{4., 0}, {7.5, 14.61864406779661}]}, {{7.5, 
                   78.17796610169492}, 
                   Offset[{4., 0}, {7.5, 78.17796610169492}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -99.78813559322033}, 
                   Offset[{2.5, 0.}, {7.5, -99.78813559322033}]}, {{
                   7.5, -87.07627118644068}, 
                   Offset[{2.5, 0.}, {7.5, -87.07627118644068}]}, {{
                   7.5, -74.36440677966101}, 
                   Offset[{2.5, 0.}, {7.5, -74.36440677966101}]}, {{
                   7.5, -61.652542372881356`}, 
                   Offset[{2.5, 0.}, {7.5, -61.652542372881356`}]}, {{
                   7.5, -36.228813559322035`}, 
                   Offset[{2.5, 0.}, {7.5, -36.228813559322035`}]}, {{
                   7.5, -23.516949152542374`}, 
                   Offset[{2.5, 0.}, {7.5, -23.516949152542374`}]}, {{
                   7.5, -10.805084745762711`}, 
                   Offset[{2.5, 0.}, {7.5, -10.805084745762711`}]}, {{7.5, 
                   1.9067796610169492`}, 
                   Offset[{2.5, 0.}, {7.5, 1.9067796610169492`}]}, {{7.5, 
                   27.33050847457627}, 
                   Offset[{2.5, 0.}, {7.5, 27.33050847457627}]}, {{7.5, 
                   40.04237288135593}, 
                   Offset[{2.5, 0.}, {7.5, 40.04237288135593}]}, {{7.5, 
                   52.75423728813559}, 
                   Offset[{2.5, 0.}, {7.5, 52.75423728813559}]}, {{7.5, 
                   65.46610169491525}, 
                   Offset[{2.5, 0.}, {7.5, 65.46610169491525}]}, {{7.5, 
                   90.88983050847457}, 
                   Offset[{2.5, 0.}, {7.5, 90.88983050847457}]}, {{7.5, 
                   103.60169491525424`}, 
                   Offset[{2.5, 0.}, {7.5, 103.60169491525424`}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox["5", 
                  Offset[{7., 0.}, {7.5, -48.940677966101696`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["10", 
                  Offset[{7., 0.}, {7.5, 14.61864406779661}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["15", 
                  Offset[{7., 0.}, {7.5, 78.17796610169492}], {-1, 0.}, 
                  Automatic, {1, 0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> False]}, 
         AspectRatio -> Automatic, Frame -> True, FrameStyle -> Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"DarkBands\"", ",", "#1"}], "]"}], "&"}], ",", 
             RowBox[{"{", 
               RowBox[{"0.`", ",", "17.71728388577394`"}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8919219750516844`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"datavaluesEzPlane1w", "=", 
   RowBox[{"Fourier", "[", 
    RowBox[{"datavaluesEzPlane1", ",", 
     RowBox[{"FourierParameters", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8914242401880054`*^9, 3.891424274476243*^9}, {
  3.8914270654526944`*^9, 3.891427097636735*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "datavaluesEzPlane1w", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.8914242908689957`*^9, {3.8914981769367013`*^9, 3.8914981900531445`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJx12H9InVUcx/GrObMp8xoObnVv3s7uLk9PT0/Pc84z7MfiOTXWQHJjroVG
K3XUfhQbSJaabYvGopFzaxJrSpeFBbIamxtuikQTWr8oaIUIjWhrirqKkffe
bTayIq/iG+Y/X14qosdzvufzPXfVbq14LjsQCBzOCgT+q/9/XPbn1oCe6zw4
CBfDITgMR2EBx+A4bMAmbME27MAuLGEFezDXLbMeGYfgMByFBRyD47ABm7AF
27ADuzD3QebvyzgEh+EoLOAYHIcN2IQt2IYd2IUlzH2eWYcgvi94g1oMh+Aw
HIUFHIPjsAGbsAXbsAO7sIQV7MHsCzwX3EdcN9YQHIajsIBjcBw2YBO2YBt2
YBeWsII9mH2UfYTnjvuM68YahqOwgGNwHDZgE7ZgG3ZgF5awgj2Y9w77LvsU
zyX3GdeNNQoLOAbHYQM2YQu2YQd2YQkr2IN5T/OeYl9nH+O55D7jurEKOAbH
YQM2YQu2YQd2YQkr2IOZa3iv8x5k32cf47nkPuO6scbgOGzAJmzBNuzALixh
BXswcyBzEHMD70n2ffYxnkvuMwGzxmEDNmELtmEHdmEJK9iDmZuZG5mzmCt4
T7Lvs4/xXAqY68ZqwCZswTbswC4sYQV7MOcM5mzmUuYw5grek+z77GMC5j7j
urGasAXbsAO7sIQV7MGcyziXMMcztzKHMVfwnmTfFzDPJfcZ143Vgm3YgV1Y
wgr2YM6xnOM49zDnM7cyhzFX8J4UMPsYzyX3GdeN1YYd2IUlrGAP5tzPuZdz
Iuci5nzmVuYw5goBs++zj/Fccp9x3Vgd2IUlrGAP5jsJ3wk4V3OO5FzEnM/c
yhwmYN6T7PvsYzyX3GdcN1YXlrCCPZjvSnxX4TsE527OkZyLmPOZWwXMXMF7
kn2ffYznkvuM68YqYQV7MN/hMuvHdxq+S3DO5tzIOYi5njmVuYs5gvci+zz7
Fs8h9xXXSd6gKtiD+W7Jdxu+Q3Cu5pzIuUfAzKXMWcwNvAfZ19mneO64j/gu
y3cVvhNw7uUcJ2DmbOZG5iDe67yn2HfZR3guAnrX8dFvTham/Mn0y7cdiSTx
3pynm8s+b+usS8+8W3bvrjwxv2PKX/3QTw1fKr5jSv3U9reqGzdP+S9uXdL2
9SX2KaUTiR9X9g+lZ9b1yb7Iuke3p/yWlX7DsZJrM+/BnffdcyH5Ad9Fpe7s
uOVM393ztOl9Nnp9Ps9tQC/blV87Wrlg5vN7mlbcf2F3vs78/t6y3LGh4cz3
Kz18zRrMjWS+7unxRNVH3f35Mz8vVfbs3j8ekDr9+8Whk6evYv/n6Y7Gg9nZ
e6Uej9Xm3DtYqOd+XeqCO9b0ZU1KPbkp8Vokzf2ldN3f6X0nOmbPW8u2roLV
e6Q+deDIuYYrE9h/QW1+uLNoQYXSyZrmqgl79p30sD3wxfmx2f/vzvZLrWJh
ys/UxheO/rLqwZv0n4PVpxMvpf3eOxfta/22UNc9/JgoaZ/y30999ckr//5+
P1clzjVtmPIH1rxZ/8YWqcNL6ytLR9P+x1vsguerlO4dHxmofjflj1QlnfoV
V/0Jq+lA36IcnRwr//Tm8qAe/aG9ufBgQMvas5f3GznTtUAX78h6pEjN1vVL
nznW/kRQn2nory3tytO39mz+7fhGpVuOrl2fWJ6v27rOvl7Uc8V/z4yEal6V
unfTO0tCG7J1aXl37q+PSx3Zcd4Uf7nTVeqaUxdvX75/tj59aGHPvFY1XaUu
XlcxfP1Q0v9+8drvSsqU3vj2ttaOEXe6Kv0PIjVHmQ==
      "], {{
        GrayLevel[0.8], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwt0MkyQ1EQxvHTeAHjMlXBC6iQJ4hNWFkGUWVNsjdEEHPFPAYxhRhe0v+r
7sXv3q/OPfec7s4uV+cqPSmlDPrQtpQGeQ9hl/yMgeRrO+QtjJDH8Uq+xxpW
8IcP5Pk2hWNyzfxc/aN/O5gmF3BC/kQRM2jiK/Iszsz3aO8EDshvmCTncEj+
wQIWcY0uSpjHBb4ja88VntCfvKc6+QarKOPX/EydPYZG1KBalnCOy+i1FHdt
YJi9vNIDj0f0xizVewuar9Y2yadxVzF61x26S2e8kPfMZ6sZapb75r2PYpt8
G7VUcGe+pm/qSb29m89eMzoyr0m1qYZ1wj/dqzD/
           "]]}]}, {}, {}, {}, {}}, VertexColors -> CompressedData["
1:eJztl/k/lO//xUVSFClLScryRqJIJNGRJCKVKCQJUVHJljZUVJQWUahkbbNV
hJKSbcaYYez7lnXuuYeyt6jv/V98f/n8NI/H9ctc9+s6r3OeR97ljPUxfj4+
vvQ5fHwC1O91jkpr9qlKvEmZPun/k46P0b5PJxMJvLj7J0V7HQMu72SFb0Qx
cFRk8sP1RgL2dxarWJxi4PPP+P6Hy6oQWPdnvHiQgNvPjbdsd1QiuqKwKy+F
jviArL7vMQRiRA8WigoxMbB6C9MsuBpBtxWVUw9wETFm/PdSRxV2tdReb1Cq
Rju99OJcCy6W2Uqrzk+io3r0MvHIlIa5WmG9S08Q2CnYvf1LaTn4ZPQj/DW/
Ynekz4K2RA7GbS/7PXKvwJOGlOCLESU4rHhZaR+LA7JI/vz7x3Ts1zdxM9tC
g6ZBatUzDwL68he3+U3QICvw6lhfczkCDNI9JjYTOEmXmpOdRoObp0T3Vc1y
RJO+uj5KBOKXf5JdLlaOjPqP/DpHv+DraYnD189wUBGeHSAxVIaR2hUjivmf
0Z7MnBfnRt3Hbu4m5Rkags5VnSnqLgdbjp0zpU8g7Knklr2sSri135j/oqwS
g38TxZcUEnizhKa/4jYDWzd8mbfYoQrRimSt2iiB64F3vkTw0fFmjQwj6kc5
NgWOHN5mSKC7tvo8l1OJkpiJmTNzGJD905rbW0JAJv3RJ4MfTLB/ah4+q8fG
1vDJ3JiHXByftEwtr/8GIVP7scjeIZy4Gf8w0W4EU+HHdS4nkrhhPlt8XoHE
iZUL9Z69GcbgaYmy3987MZW7YPhjQh8+nvO6GLp2BKv5OPHbGSyMRt2dL7iq
FkMOw2ip5cLaXdWUj8FA71L5zOjOKig32B8W5+Oi4X2LVhOlq7blKoMVlK62
dI9I8iUR+Oom8mh0EwvGQfm6d66x4e9x9lXfKy6eaz6Nu8ZXDfGzfKte2tUi
VXb7yZc9XHw5Szse6khDtX4uSzimDH2NqiXnFhMYahJUCHjOhOh/v7X+1dYg
SiWyWO0qF7odz15V/2bg8MG1D0/sZGJ1kfTQ60VcqB23m62NrUfGFfvLi0Rb
8VK852XaYh5cJ+WG1j5rgWc/LWx6Tw/UtZ+bs2p4eHLLJjqlkITMnbidL724
MPFlBDgUD0EoNi1+NrwOtfOckxYGNOO17s1c92ESHZqMjO07SITuy+NdKBpA
67c1w/sae7Hs9VqzHNUG+JneT60ebMVYgqm6kDIP21v9ys+lsWEZFrBX7kkD
rNo+urlT7/Hna1wFz5KNPKmPKz9JNWCribf61gck9sVFP12lVwW6s3nsAxoT
mkeaVyjKcZHas880X4KOgvuMQm/ZCkpX4ndLjQnUTkR+PvyaDbWSqZPBKQ04
1ZvwaXUSCQMN+aUT2Qyk333xbMvzKkxqjjycmCGQHPHir1cRHZnbjoF3lYYB
nSevGrwJWJXUOncW0PHQa8Emg/M0FJcZNMecIbD1VXHft646RISV5v6YbIbX
lUvWcydJRJQ2d+zZU4uRzRcb/zxuRITir+SUDyTGrXK2qnRQ8+n2lCCiCJSf
vu77JHEQy34YZRWpf0N9edsy+4bPMGiJfdtmSOneevqlw5l+iGupWOjocND1
l2W3fcUI5hw6mHx4BweTR17Eywe2Q3d0+EvEqRbYRj78JVwyhHOXNlqPZ3DR
VCPt22HDQ1VGarlXOomcJtdbhq1cvDinONi8Zxg3zkiEuN8YQm2W0uShB1wM
KT8+Ue/HA7zz7nCi6Dgw5nn4kSoNK2TIQb1jBFZW7DtG8rNx1vP3H/OgeuR6
r24jTpHoUYxn1Z6hY6mcj9i8rgo8CzZvTzlEoM7WTDn4BxuOlZcqX4g2YsdR
z3fvqHtorFEwye+pgJ9guMDvyFJIOVQ3vhrhwOyzwdA9fiaMjk/eLfKvBpmj
sf6kLbVHYszIvpQK8BwKVQsXlmJvdwm5qIuDv/bFmxO5lWC4buFfLMiARZD7
lF0pAWawzZvObjYkN10yWzbRgBdxvn+WviIhnG0Ump1Yiypr08cPpJqgw+s1
KSyn3qO4uN8suxuX3g06PUzoR4dxfaSWwQhUpDt2iMu0YsfB53nhGT1YoWEd
tvgbD5N9L7fZmg/C9cXUK4dPBNbOOXk7toGH+Mv3vC3V+9A6oafxRG0Yqto7
8k5ZjKBnp+NrUmYQzz1u2Io+JGDkKtt1rZ0H9wWXc40pXXyUs62JucSFxGml
evfGIYynmpg5u3GhvHh/5boEEuefvGoRo3Kk8znjjLYTiQu79knKGpN4FO4Q
yJblwO119s7AOGp+clMfMi+QUDHbnDCwn4RFP3tzU803NCW5P7TqGkJiZmyl
rv0I+M6WCvUdZ+MOU/Zim1EDZtYolBx7RGJA4LWI68tmjO195qei3o3r3+TF
5NN5kJTQaNpBVsN5/oE7CvvrwP/0rv18eRL8DaeN8yMY+JlBJK84WIWJh/zP
KkcIzJ9v7ZT8lQbvkDHJIc9y8J8P45dQp3Lnvl2LmkMNPkvuEe6n1eHy1fNq
wiChqXhe1k2BAecxwzOnzzMgaqyotLuOwJebva1pnBpkmXfa2jjXw1tk5u0m
dxK3kyYLnT7UIm6b6vnSLU2QOl2zz72S0neoWG5SVw0kp+tlE23qUW/Tlarj
SkIvn27ro92FDU82SjaW9WGV8/EtfOtGEJdRIGRI5erbjFtz7Bup/Rz/kpT2
jYuAzjfafJsISJ1zf+L1hUTa8SM0ob9c/Bv7PWP1gkSX6oFVwv5DWD839a7x
/j6I3XlmtMCTRJPgzUN17oPQXlCeFnD8GxJo8uPlqZRvfjrwx+c6CX8l2ayl
GwnwTl+LHMwgIXd01ZNDNVw8dDd/TjceRv1/Mnq3Val32t53TvtbPbZ3qIcq
1tVDh8GfeIKPQIHApLhBcRdGWiPYClFtWDUWrnZ8/RCK7mU+nKT8OWhYhZ+R
ykNPToW2zEwHHthgYuHiPmy/9rRuk8IIfu3529hfwMS2M6l1a37WwFKiV0f7
Bhdex7WjhxQqcdoj0u6OAx2XFBI2RtwmMLNzv9CxZDaOJehLX37UgFyu1cUf
z0hk3LSJe/21Erp+wX5D6ZUY410j+/IJXPUp+/AkkIXAfyypHXQ25FcZpd0u
5CKXduAae24NJj3ML+ucqoPSnJ3thSok7ubvE+m9UYPGFQ0dfjN1sNzLFxRm
Qek2v1XzVmcNBKqW6Abur8fvVqdYjguJrOyYPePz69HEW2K6V6cFFzYO3jT5
TeJUTGtJRhkTD8/fVVi+gA32NtWCkxFc9BOiwwaiBMzSQnKTM0mwnR/VQYJE
w81jdiclCSjNE+/pXduN1aWqY21tbQgQPM2RixhCvLCF8l2jRowZXAggnzfA
JfrsaFQMF7LSMzu9TvdB1Gde1Pl5PbCZ/KgmMNmHdgdJPbCH0fDSqTdEYwS8
t1vOVX0k0ZZw+84eHy7o78rm1NOGoBRWFmAqwoP4h+w8u4Mc3Iv/eSH2Xz+s
DKVbO8qHsXfziie2ciTcfMcMDWkk9q/x7Mjn+wYLt7KhD8uG4EiIuF0/NoLs
VWc0C2pqEDJWZUQ3qUdWlJqx4hESq02bmxfp1oL/SEzNqH8jjt07Wv7tPYmZ
6QUCfrpVODO+7u88ak4NdQn2WSu5aN3g7W+xjYbeOc/ebjhUhga9go75CwjM
M61dvcSW4pbjE5Iq5XQQapHDBvEE+gNUDYM2smFneQAJQ/X4wlDp/HOT0vFS
l8J3e2mYX+iRzLtYBrH9Wg8NFxEwtzjx2etDBWbXvZu+rF8Kp+3i1qN9HFzJ
8Q9/cKIKWSH6pi81WXhJVvxIWcvFksLImeK5jdhq4bdg34Z2VHokXf5oykO0
e4DRfwZ1yLuCzAq+ZkQv07FqpHJUyOztXbZxCxQ1Qg3dhXvQ1D3dsLSEh2SL
jtmYpAEoh3huILUIbM4+IfuYxwPrftIu52QqBxLrE5skSQQrXlpKPhtGL1+E
Xvp7AkePF+tHdVF8UPagXuMJFz/WHhaPv9aCBRt26Wtv6cGdD9IXcqt48Ko2
lTT3aMY9fQNTCUYX/LLM/f2SeHh4s/pnZ0wjcpI31fAWduB52WnuLkcesg4u
CeR/UAcLO30y+Voz6Acbqos4JKS6JlueadVgS/WF+bVP6nDF9KfSjDal540H
Vr32bcC3db/Diw62YZAU+qWmxYO/rTdz3I7ai6j2qLiKOvzlZ255v5XE2qX/
Mvavr8Wwuogzy7MRhId927dcEhUnbWTrCSaV04e2JmlRHOQe5tcYzQW7Pi5P
820FPnrHZP5VLcXjJLX87F4OyhYfmDN7m46EY7l9fLI08PY4sOJdCah85o/w
dS2H2L3w5mbXYlSILGHeuc5Bf2jV1aESGsjwmJm40+V48/0Gw4vyeZOU2pyK
hHr4xIkEzJNuxUap3QY3xXl4n6Nu8MOKjrnchvE1sRWIDRvJemVNQJD4kDug
0IZswz7X3d69GBvdwpETGkFhpmuvWhzFf7YmQob32rBOcia9SJcHtxN9vh+z
KH3SFtBeXavE8fRvcgXvCPzoKV4oxmnAgTQx2dj57ahO9+E8MebhytKk1vj8
VgRJnGrXVuxF0w/JR+d/8nCyrYcwKq3Cry9J73VGWcgNCw9fbcKFn4FucW9r
NRSz3ofFog47Rt0Y/LIkHIUfB0y5lOND9cUl1S7FwGmxNC9qDhmrrXbJUfMZ
9RfIUaDmEys1P+wcdW6RMWpSyKzDSPAJ6di2Zjx6wsjYN0ZCeZfF+q+O1dhX
ZCzw8mMtvtxirW/5yYV7bXtkcQ4NZsOMtx5W5TjE+pZorkpAO+TB4TMqbDiU
/VvaXVUPa1Mly/YrVK5FhFV6u1C5efeD/o05VdjId2sPo49Algef4PYkGsas
t0auVCkHU7JazlCRgNC5RhtzTTaGR19MZnbVQ+Fz09c3VC6NbPk47V3JQH/y
trVuVB99ib9biH8U3967qXDFuQqhr9ecP7qSRfWzH6w1a7iYeC93/poAHSbS
s/p90+XI5uuTFN9KoNkz7ovnl3Kk6a3TNVH5inRB1cT0ZxyUNv3WM1tZhdju
HfSIO0ysTGturZbi4unolSfZf9ioO2MqeW1VI8o6mx0dKZ8WNeq/k3m8Fqav
p25rlzRic+Cpp8eLKH/LTo1Xn6Rj2DUr0uUnjfJX4weLQghsunU4cPu9Rgza
Lfx0aW4HLvplf/E/xMMuHX//pP00qLrmNaheLUP39h0PhKk8iFpeHEErouHN
wUM6edS7aeZkRc5bS2Dqo5bf2BgLd+us5LfuqsXAlnNiEx1cbNyhuU0xjYXY
66vNHkyzsT+tYNF7GhcVhpvE+TY2oEU683HDdCv4obnwvQoPgS2efSfC63Ht
6ZwPzVMt6Jx9dOeQKA+XT7jqmz+pwJ/xe4EP/pTAqXLX+V/tVE+va8yf+x8L
Dw6F/fI7w8bnN8GWHyhuWDdU6R42XI7tv57bxwV9xSfH0Lj+1xx0iM814cyv
hDr9BdNakY4MsQ69s2EEXhZpKyzIZsJ61YzZpv4atLWzZa6GciF/+570r7tM
SJObHPWSazBxOlJEiOLNEsfdtbs0KtFidKE30ZtO8ebQPue7BAJz5+jc9KhE
9/lGl6MkHVFlAUd3PiMQ0c7Z5PSRhoLAG1cDHMtxq+Sb1DI1AqUrdd6dOlCN
PIfTJ0ZzainOqv61coYLKeNSMzkbFtoEeA7BSWz49dFexrzlYvWqkU+68XTk
JivIr9Cj4aV5tfkmDwKzync6nNXpWHgpeG+BVQUW6aXFbzYnwJ+kX7D6bSUk
1T8IlN6sxKtz61uP5FB6u3o7dZsZDWUblOJnT5SBa+seNCpMgK/ncXTHkUrQ
VdJGJTroGGhL3bj+KQFalljSbd9mrI7O/x3Z0YVSqTC+nSk8KHv38Fri6nAp
DL9HI5sxmLJu5CtBYqHBoOF/MtV4vr79TJ9vLax9Vi97OcSF7+l8hy8LmNgf
2ivEF1YNt/uC65wPcpF3yOeUqTcTCy8uTW53qoGOa+f8I75cFEsgU5NJxyer
edGWyTRsfEnL7/AjYJDvVJf/igU3f5roWWoPZov+05+kc3HCKEatapaB1yob
pZMtmEgNOlysI8oFn+WLxGnqe3OO0ixCPMuQ//7senkRak9FEy7kz6FDbWUk
S3yiHLEHQy8+MKT6pZrsyaVVDGye2r+3s7sKXSsVghz5KN684ueUYVYNn8C9
W6zTavGDTyLQcYLKX5Otz8Z2MjDH94WAAeUHGrP5J+90EKDHDDklUD7cVhEp
wKV8eO2O843VlA+rmh0uDjesg9Hi2qJu/mZI3DAwE+4k0RjXpr7IpBkVvisb
/0V3QWCTmoTeEx60gkq68xxbsGjfwSvDK3sg+TlFllfOw43XHn0knYGLRZdC
LdqrYJ7uubaC8p8N5lb9S91pIOYfdjn0qgwdhTaLJJYSFPfM7Qpm06D/ebHp
5VvluJRls1JRk8BH+8bKdiYLb6X2ZlfI10I59+zjyDouwNw4549JNY6GzRt2
T6L4SNLzscM4F4zNNimPjtTDj5XObspvgZGgZYzSfB5EzNpyrqnXIXHK8bA+
pwmxhy+8vtpGwmTo9UOhdXTsXdMWqW9dgde+v4QyKX0W31qjq5DARFSqmNLu
4hqEmqQ+6w/m4rJuNUfekwarM3T+5bllML36zNVfggDXctTHz7wcUV2CafHq
xZBRmRPvH8xBFj9hYK5ER6z6DZfrhhXw1Xr+XWAnAauhXJHFCXSIyjyimRnR
8Lzwoo3JcQJuzuLF5VpV4AsYbZb4yAS5bMUaD1ku7FZ47PivhA6bZtvMids0
bLBSfyjnQ8DduenTzZgqWDUptovdYUG3ITI9dRMXCrGudJfEangPBkZf5a+D
VcaTD3sWUtwY2JYjP86E3RHmYz99Ng439K+WeURxsMvtd9NmTPBXO6fZitSg
pf2fU8pxLkQbPtJTjrJhZjz/3qhOA1R0Li+2fkiCL+HFuq2nGajKf2z5WKYK
Lb1r9woMEaiY8VJV7WXiz1RM2SEq3056KrzSiuJCc3pax+wSE8g7LngksAZC
C8MOPg+g/vdA2vApITpOPA0w1eGrwKa2RpYCCJR9ySxZd6cSoY8WCl7dWon+
waBVja8ImBakDQSpNID5S2zx3/5WLLRPsWv9j+LvKaeFkQV1kD2mq6P1qRkG
M65T+0ZJuA+I6Q/9LYeN1LyLqllfcWeYT3nOWw6mz9p0G4VUozPISepITy1e
G0c+CRcgUZ1l+td+gI7BzKabpc00yJi9jyi8SGBMo8D1kHoFaLfOVxeJlkAp
9PzZk0Uc1Pmq/V7wXyVybSSPSh+hfPWeqMeqSMoHWAPPu6wZWGVyWvdsDwOO
i370hncTCC4VLX1jx4J+mQXH4TkbKddUtje+40JN2CNwZpqGkC8mBo7d5XCx
09Ql9AksSAr7YB5K8YAXn7SveRVCfA7uns+jeuNZPek3f1jYcafR75FNLXRv
D0486eZCxuXsYNu3Wgzdn3hrfKEJ3/eZhNyrIRH6bved5zrViLW+f0T2fi1C
7Qa/qI1yYa0kGrwhiw4n8zif+y408AXOrMnwIuAsIDydZl2PRU959AOpLThw
pH+N3jwe2LfmVIw3N6PF/r+kGt9uOF5IvL3hHQ9P914pdcprhbXEkrIdCr3Y
mRqQsIvisTc/tl/xCmvCKb/qvlr/ToTGu6/vD+Zh/jIDCdaiWvCGLxVZbG4E
TfuK/1A2xc+aij/J9wwEcixtyXdV2HYuTOzhLwKL3nkbG8ew4XJwelnOtQbQ
zNaVzT6l+MHBcVuyUBV8op3rI5yZ2Nk1FjuwmOr77TbvLbNrUbXx75tH6k3w
4izQG6L6V6Ci0+9LYwxInUjd/0SbiQm3nxdXiXChria2b9SXiU8bTrknu9eg
ve9fm5MfF9/n1lS6P6Cj2ZAdkLSGBsN15csOHSPwaumEyb2RclzvENrqfesr
alw3/IrI4GDcQ044LI0Gifr0nDWaFD/KLfzqrkRAIf7lkrXKbCz1T/2nUVkP
0VsjG9Qo3lOqFCjrrKqAMPElLPNoKdLkL5+YGeZg5LhTXF5vK+i5pzK4xr0I
CD59qfAfD3y2TspjFH9YPchXl4zqgYiYoWdLBw8l1z+db37LQlNoU+QSwVq8
OHtOUqOKi/J2hkyhcSs+zc7vV6vqwcSkts+KYR5k4u69ETGrxV/OwSDh+43o
zhjWuVtAYsuxxSJuOQPgy1uc9dSIgOXKmZvjBA+lA1qxQVTPFdEXqu2xpfoe
q7DoxWw/frdf6Fv/hYTDw0WXBmy4eN23V2sicQjmj7ZHbVs5gJa9hSIFZRy4
lDzrtJ0zAtF1LWtk/nTDf8Uz5URGPxL3jNstxghaHlceS6N6EzFv7kgT1ZuG
g0Zf/qR608Cr7Q5nqmvhxTziFXyoCXy9nRk3mCR2tj6bN82jwSVLIWQ5oxz3
+r8x1+kRuB2+yJa1hA4N2YvpR5ZV4NP17TRDYwJntW6obuRjIG/6cmalJgOr
77Ndp+kEvCMO5+g1M5GgVXiVJcuGe7jamot3udjrWlATRHGp7KOCLeK/KD5a
9VZQieLS2XdWAnLelfh07dOZZ3/pSHRmBz9LonwpSVNYOrkKy5SEG4pesiC9
Nd9uyRYu9Hu3LRLLakCXw8jcvOw2xNPXeLVs5uG3ghYkjdhYxO9XvJWvAab/
cdT23aX0PLBiau1sJwZCRl/lp/XB6d9l8Z9rRyB7JLXwVuUwrpS7SPxYRaLk
2rjFlnISzgHd8/yovbkcreGx/TMXoa+2xGqpD+NmtD39hhCHyjOzmll9EhN7
Nv4+m0JCe8PtfRWUH8+zcZGXjCRxlXPr97o9BC6HTxjkj5NI96XXy01ysNhb
cIk0ewBN6jnOO0OG0P/YSVNvZSM+DgiR/vcbQDRZ87nQKD69O3t1rlMvomUE
q4S3dyJ/0TejuoscDI5PXSg6RaJJ5r9yUTcSiZK+FSzlHlgFW3y3/9mPe4WF
v1cYjyB0pdSFBPsGRNVfKgvRbEMHS1HZUoOH2x9XWKRbsiD80nJ3TBwbrMz+
sdvZXGQedSoXlWZj7o7Pjkte1UMpUP8tJ5DEHUH+ssLVVXBWUt3QE8PEt5B/
MsXSXHzdsYxlfaEONyXeOvs4NUMgv/zNkkGqr8U7ZHjpM3BgxKQ+OIMBxbMp
cp0tBL7kvFhxqpGBhG6B++2TVbCz3sCnKcDFohYJi0OMaghb5nKXr6+DeJpk
ZLk0CeuL63xtI+sRlqMW8+VPC+YuNnvzneoF9Z80FJP76Nj4fmpAtoEGBzVh
7+1UjnAV6kMVMjlgF81NNb5G4rqT/30NcxJa/JuPOp7lYP+97aIrpDpg92Rw
5yVWC5beEBfs2z2MdVskzob8a0ZhRXhQy74m/C7wfax9gYvEILlEU9U+9Oi2
GWtkdSPjUMgKRjoJRvPGIGYTF0Z8AcNPLYdRt/N8zj9qP9+r3HjaSungwJBD
qF4GxV1pIS4un0lwVsS/3+HAxXLFU82iL4ew39Ov6vsuKk8OrI2784JEwJXA
s06FBGpOfUqXXDSAn6R2ypF8DmQUZJZ/ERjB7tP365TVGhFdNDb74mQ7NvvO
rje35KHD5+YGvlMd4L0i9loVfwNjzbiR4MoRzP0laym8iQ01/72VQrx6/DOQ
n3SOICHi0xvqM4+NBzXfeivC6mGjNPdq8xkSz3NXaXgQFZgXUhB8L7kUCk8L
flv94EC5wG7kGqcObiEvvk8ItkAtuzcjdopElM8FzYyzdHSteSc+1Uv1M9k3
rv85Eshm6Yj3LWDBJDcuM8maDR/W59K9T6kclJB4duoeEyU3rFs0UmqgysEj
ZapPmW5yX3qpiuJ580MC+1bXou6LQpQGxZ+nPz//te1tKzaZevM85XqRRPeU
vznDgwf3sL7n3SF4phd8bX/IxUFdx1A/bx6+j++SzP07DC+u9xvFTZTPuhq9
3faShM6lTYd1KV9tuDvvZtlBShd5wZPKfANIlcq9r7eHRHnNqgNyxAD+7kl1
XPGnF/LGdfZiMQNQVg8Zj1EhcGHMXPv8KOX/sR7avF0ELuY+Gluyqgd7T1ns
ko9uh7BWxJrN/kNouq9hcuoWF+ypW82FQTxcXW1jxVlMQtc9YEesE4nxPTVm
m+5zYLCWX551bBiTSfO5J6j+oJYykhT3m8opp5t650OovvyrZcszNhucQXG1
d0VchEhds139rhZFhGNDq2YTnvfZF1vTqZ7VeaP7+r8a+Pvriz44V4/vF/qX
aHmRiKm7LP2ppwop7yUD2zSqwW9YtU/DkouP/q2qHt/LkKecU1rS9RnC5LcC
JQ9KXyPz9gxS/PTtxUyhgSgTdewgAet5XFicVrevuE+Hm51rjLoyDU2rOS4c
NwKVEoPv3M+xYSt6cWXBgQYkP7AhIuOoOa7PnVjaXI19dy9ynhrUQap3T9XW
FZQfLgxddiGqCqwlq1vu3WAhhnV3ulqXel/Gh+8lDS3YfeCJvW1gDxQHZ6dL
m3lwX6Izr4Lyu/hX5FuRI4OY2u2z1ct+BANHmVrwGsZvoRP/Nk9zUTkjoSc1
Q823Pf+rUwHl403dndoJwzgQqBR4S3cEf6oELEdW9cPOsEn/9fgwyvYYlsuo
jMD5Vs8jEdVGZNS7pl30aMdiseuiPy0o/eyc5W9O6oWEoN2BdJuPOOXesSGl
sgLvHo87STZSObDFf9bYeBgSdUkZ0YL9KN6Rt9U7uB7kWuMM9lALztBdJHoW
8tC3eWq2hWSCGDrtT9NmY8rCqtMlhou4wiiLzhCKYzeO2+soVMLKRUZ1w3MC
Ec4iXuIdDOgGzV6dEWCCd3DeTj5BLixbS5mRLIr71c8XLROsRpCoxO3vplxc
o63/7Wlfh8IoMZ9e9Wb0TK0XXt9LonvmvWDWp3IYByQpnJX/itOje+aSCRw0
da/u6/3HxpXc9Jr9So1Yv6h9sjGTyiWXzbzBOCYGB81378mvwQETrYZPQVxI
T//dT1SzkMiwWj6lSHF7o//RlfVcbFbOaFpVVw+T5SfCj7pRvSBSPXnNch7y
EK5d+Y9EuBSf3/s5HJxpi04ZSe/HteGjj0/U9iH6yhKHrnfDENfVfFGzYQSW
VXbsAsrvlAYqOhaMceHV6rvoqfcw1K84TacqtyBx/10jR6IbJ9qE1fuLeEi4
FBc9YFqDTXmsspM5dVCV4MnRNlP+02thkrmLgan182/Nr2HAXWXt+t2dBOY+
b1lfVlcJxv6f2wzZlRAusza8+4nA6m++so9PV8Bo7dS/q49LYKT7weFKDXVf
/cP8gY01OFhiON23qx4VPT1K750pfx8a9P1uR8Nlj+lr3pFluMCPF5fFCOQ9
ZH2c1KPeK/uqnOsrBlymfIoCqFxTU1jcZ7echZsM93hRVzZkj4oEhCdxob2U
k33TuwY/2xOOvOiuA3/m9cT/dlB7cWah5snEVhRxlkl+Eu/Foq5jrkJTPOiH
L+btofhL8SOt+98fAsc3WjYz1YdwaWfkAi3pXkTQiN+Sze+ROGsmvvxA+f/O
/3f+v/P/nf+/nf8fuxkw+g==
       "]], {}}, AspectRatio -> 1, Frame -> True, FrameLabel -> {None, None}, 
    Method -> {}, PlotRange -> {{1., 20.}, {1., 20.}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[
           NCache[{{0}, {
              Rational[1, 200]}, {
              Rational[1, 100]}, {
              Rational[3, 200]}, {
              Rational[1, 50]}, {
              Rational[1, 40]}, {
              Rational[3, 100]}, {
              Rational[7, 200]}, {
              Rational[1, 25]}, {
              Rational[9, 200]}, {
              Rational[1, 20]}, {
              Rational[11, 200]}, {
              Rational[3, 50]}, {
              Rational[13, 200]}, {
              Rational[7, 100]}, {
              Rational[3, 40]}, {
              Rational[2, 25]}, {
              Rational[17, 200]}, {
              Rational[9, 100]}, {
              Rational[19, 200]}, {
              Rational[1, 10]}, {
              Rational[21, 200]}, {
              Rational[11, 100]}, {
              Rational[23, 200]}, {
              Rational[3, 25]}, {
              Rational[1, 8]}, {
              Rational[13, 100]}, {
              Rational[27, 200]}, {
              Rational[7, 50]}, {
              Rational[29, 200]}, {
              Rational[3, 20]}, {
              Rational[31, 200]}, {
              Rational[4, 25]}, {
              Rational[33, 200]}, {
              Rational[17, 100]}, {
              Rational[7, 40]}, {
              Rational[9, 50]}, {
              Rational[37, 200]}, {
              Rational[19, 100]}, {
              Rational[39, 200]}, {
              Rational[1, 5]}, {
              Rational[41, 200]}, {
              Rational[21, 100]}, {
              Rational[43, 200]}, {
              Rational[11, 50]}, {
              Rational[9, 40]}, {
              Rational[23, 100]}, {
              Rational[47, 200]}, {
              Rational[6, 25]}, {
              Rational[49, 200]}, {
              Rational[1, 4]}, {
              Rational[51, 200]}, {
              Rational[13, 50]}, {
              Rational[53, 200]}, {
              Rational[27, 100]}, {
              Rational[11, 40]}, {
              Rational[7, 25]}, {
              Rational[57, 200]}, {
              Rational[29, 100]}, {
              Rational[59, 200]}, {
              Rational[3, 10]}, {
              Rational[61, 200]}, {
              Rational[31, 100]}, {
              Rational[63, 200]}, {
              Rational[8, 25]}, {
              Rational[13, 40]}, {
              Rational[33, 100]}, {
              Rational[67, 200]}, {
              Rational[17, 50]}, {
              Rational[69, 200]}, {
              Rational[7, 20]}, {
              Rational[71, 200]}, {
              Rational[9, 25]}, {
              Rational[73, 200]}, {
              Rational[37, 100]}, {
              Rational[3, 8]}, {
              Rational[19, 50]}, {
              Rational[77, 200]}, {
              Rational[39, 100]}, {
              Rational[79, 200]}, {
              Rational[2, 5]}, {
              Rational[81, 200]}, {
              Rational[41, 100]}, {
              Rational[83, 200]}, {
              Rational[21, 50]}, {
              Rational[17, 40]}, {
              Rational[43, 100]}, {
              Rational[87, 200]}, {
              Rational[11, 25]}, {
              Rational[89, 200]}, {
              Rational[9, 20]}, {
              Rational[91, 200]}, {
              Rational[23, 50]}, {
              Rational[93, 200]}, {
              Rational[47, 100]}, {
              Rational[19, 40]}, {
              Rational[12, 25]}, {
              Rational[97, 200]}, {
              Rational[49, 100]}, {
              Rational[99, 200]}, {
              Rational[1, 2]}, {
              Rational[101, 200]}, {
              Rational[51, 100]}, {
              Rational[103, 200]}, {
              Rational[13, 25]}, {
              Rational[21, 40]}, {
              Rational[53, 100]}, {
              Rational[107, 200]}, {
              Rational[27, 50]}, {
              Rational[109, 200]}, {
              Rational[11, 20]}, {
              Rational[111, 200]}, {
              Rational[14, 25]}, {
              Rational[113, 200]}, {
              Rational[57, 100]}, {
              Rational[23, 40]}, {
              Rational[29, 50]}, {
              Rational[117, 200]}, {
              Rational[59, 100]}, {
              Rational[119, 200]}, {
              Rational[3, 5]}, {
              Rational[121, 200]}, {
              Rational[61, 100]}, {
              Rational[123, 200]}, {
              Rational[31, 50]}, {
              Rational[5, 8]}, {
              Rational[63, 100]}, {
              Rational[127, 200]}, {
              Rational[16, 25]}, {
              Rational[129, 200]}, {
              Rational[13, 20]}, {
              Rational[131, 200]}, {
              Rational[33, 50]}, {
              Rational[133, 200]}, {
              Rational[67, 100]}, {
              Rational[27, 40]}, {
              Rational[17, 25]}, {
              Rational[137, 200]}, {
              Rational[69, 100]}, {
              Rational[139, 200]}, {
              Rational[7, 10]}, {
              Rational[141, 200]}, {
              Rational[71, 100]}, {
              Rational[143, 200]}, {
              Rational[18, 25]}, {
              Rational[29, 40]}, {
              Rational[73, 100]}, {
              Rational[147, 200]}, {
              Rational[37, 50]}, {
              Rational[149, 200]}, {
              Rational[3, 4]}, {
              Rational[151, 200]}, {
              Rational[19, 25]}, {
              Rational[153, 200]}, {
              Rational[77, 100]}, {
              Rational[31, 40]}, {
              Rational[39, 50]}, {
              Rational[157, 200]}, {
              Rational[79, 100]}, {
              Rational[159, 200]}, {
              Rational[4, 5]}, {
              Rational[161, 200]}, {
              Rational[81, 100]}, {
              Rational[163, 200]}, {
              Rational[41, 50]}, {
              Rational[33, 40]}, {
              Rational[83, 100]}, {
              Rational[167, 200]}, {
              Rational[21, 25]}, {
              Rational[169, 200]}, {
              Rational[17, 20]}, {
              Rational[171, 200]}, {
              Rational[43, 50]}, {
              Rational[173, 200]}, {
              Rational[87, 100]}, {
              Rational[7, 8]}, {
              Rational[22, 25]}, {
              Rational[177, 200]}, {
              Rational[89, 100]}, {
              Rational[179, 200]}, {
              Rational[9, 10]}, {
              Rational[181, 200]}, {
              Rational[91, 100]}, {
              Rational[183, 200]}, {
              Rational[23, 25]}, {
              Rational[37, 40]}, {
              Rational[93, 100]}, {
              Rational[187, 200]}, {
              Rational[47, 50]}, {
              Rational[189, 200]}, {
              Rational[19, 20]}, {
              Rational[191, 200]}, {
              Rational[24, 25]}, {
              Rational[193, 200]}, {
              Rational[97, 100]}, {
              Rational[39, 40]}, {
              Rational[49, 50]}, {
              Rational[197, 200]}, {
              Rational[99, 100]}, {
              Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
             0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
             0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
             0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
             0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
             0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
             0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
             0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
             0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
             0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
             0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
             0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
             0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
             0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
             0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
             0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
             0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
             0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
             0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
             0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
             0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
             0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
             0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
             0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
             0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
             0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
             0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
             0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
             0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
             1}}], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.50000000000001`}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -70.6296992481203}, 
                   Offset[{4., 0}, {7.5, -70.6296992481203}]}, {{
                   7.5, -28.33646616541354}, 
                   Offset[{4., 0}, {7.5, -28.33646616541354}]}, {{7.5, 
                   13.956766917293228`}, 
                   Offset[{4., 0}, {7.5, 13.956766917293228`}]}, {{7.5, 
                   56.24999999999999}, 
                   Offset[{4., 0}, {7.5, 56.24999999999999}]}, {{7.5, 
                   98.54323308270676}, 
                   Offset[{4., 0}, {7.5, 98.54323308270676}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -104.46428571428572`}, 
                   Offset[{2.5, 0.}, {7.5, -104.46428571428572`}]}, {{
                   7.5, -96.00563909774436}, 
                   Offset[{2.5, 0.}, {7.5, -96.00563909774436}]}, {{
                   7.5, -87.54699248120302}, 
                   Offset[{2.5, 0.}, {7.5, -87.54699248120302}]}, {{
                   7.5, -79.08834586466166}, 
                   Offset[{2.5, 0.}, {7.5, -79.08834586466166}]}, {{
                   7.5, -62.17105263157895}, 
                   Offset[{2.5, 0.}, {7.5, -62.17105263157895}]}, {{
                   7.5, -53.712406015037594`}, 
                   Offset[{2.5, 0.}, {7.5, -53.712406015037594`}]}, {{
                   7.5, -45.25375939849624}, 
                   Offset[{2.5, 0.}, {7.5, -45.25375939849624}]}, {{
                   7.5, -36.79511278195489}, 
                   Offset[{2.5, 0.}, {7.5, -36.79511278195489}]}, {{
                   7.5, -19.877819548872186`}, 
                   Offset[{2.5, 0.}, {7.5, -19.877819548872186`}]}, {{
                   7.5, -11.419172932330833`}, 
                   Offset[{2.5, 0.}, {7.5, -11.419172932330833`}]}, {{
                   7.5, -2.9605263157894792`}, 
                   Offset[{2.5, 0.}, {7.5, -2.9605263157894792`}]}, {{7.5, 
                   5.4981203007518875`}, 
                   Offset[{2.5, 0.}, {7.5, 5.4981203007518875`}]}, {{7.5, 
                   22.41541353383458}, 
                   Offset[{2.5, 0.}, {7.5, 22.41541353383458}]}, {{7.5, 
                   30.874060150375936`}, 
                   Offset[{2.5, 0.}, {7.5, 30.874060150375936`}]}, {{7.5, 
                   39.33270676691729}, 
                   Offset[{2.5, 0.}, {7.5, 39.33270676691729}]}, {{7.5, 
                   47.79135338345864}, 
                   Offset[{2.5, 0.}, {7.5, 47.79135338345864}]}, {{7.5, 
                   64.70864661654134}, 
                   Offset[{2.5, 0.}, {7.5, 64.70864661654134}]}, {{7.5, 
                   73.1672932330827}, 
                   Offset[{2.5, 0.}, {7.5, 73.1672932330827}]}, {{7.5, 
                   81.62593984962406}, 
                   Offset[{2.5, 0.}, {7.5, 81.62593984962406}]}, {{7.5, 
                   90.0845864661654}, 
                   Offset[{2.5, 0.}, {7.5, 90.0845864661654}]}, {{7.5, 
                   107.00187969924812`}, 
                   Offset[{2.5, 0.}, {7.5, 107.00187969924812`}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.1\"", 0.1, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -70.6296992481203}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -28.33646616541354}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.3\"", 0.3, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 13.956766917293228`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 56.24999999999999}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 98.54323308270676}], {-1, 0.}, 
                  Automatic, {1, 0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {}}}}, Antialiasing -> False], 
           "GraphicsAxes", StripOnInput -> False]}, AspectRatio -> Automatic, 
         Frame -> True, FrameStyle -> Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.0014089238412111178`", ",", "0.5326501446794326`"}],
                "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8919219751005535`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "datavaluesEzPlane1w", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8914243581814737`*^9, 3.891424361775352*^9}, {
  3.891424810479933*^9, 3.891424815514135*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
rGoT6l8RrnQreNajHylMv4RrdEjOvDkCPfeB8FypK6Pvp8cx/RI+V3r8jMY+
VNeU8MEbCTb36LqURjS3lmPve5aF5icJv6tX3HBMqp7pl3DfqFnBurIPmH4b
jED5n2fgZDNUD5Pwoymuw6b/QvdfwqU4V2K+VL9m+iV8s4fsmivlz5h+CR8Q
MjltU9LM9Ev4h/maJ5Z3oOc+EP50IH/GYBd6binhwTnD/SR10XNLCXc9dnX3
zmBUN57waddrup8siWD6JfzMUyUl5f2ZTL+E55c1mY7948X0S/j01jeuH0ej
uqaEW/kceO9FnTum/BJedX+PRHp5AtMv4dFl+jlpTui5HoQ7KH9Pv+GK1o8I
j30zbXl16jOmX8KvlNz9vfTLK6Zfwn3r1i25dYi/rirEX9/jDYOHi9X3jfbl
zz+XC9bpqvaWG/wr5F+fDoJ1OnltxUeX71F1XQTraPJBNWd3zqLWowXraHkr
R+zZJcfPgStY5+rLfRfyYzm1ztXP/ykON0bdP/5+kPq+iwDFZ/xUD3pmyv9c
PGWaqy6wDOy7SO3LFaw37bzlorWazW8fytk0n5l3aH+zHbUfT7BO1FHdlM+y
pvYnCNaJDnx3tZ+2nqrfIlgnKqidLmzXyZ/fcxCs79g3WZ1dnUut7/DPZYIU
PKx5+u78XOp80HCg+KPm2GMaodR+Dwman55w4MK9Pup80CSaL2Q9j6kUpfZL
qNB8ikHCedWj1LqzKs137Fw533Mzdb5Pnea1ov31RfL8+w5Ll+Yn4xPjPDdS
5030aR7gHPI0zIrf32MZ0Fzmp66Tjga/HQgSrKdkyScsbJzJP6cWJFgfcZw9
88b4cKqdH+D/lIfFMSI2FhOo63wkUPxPVOOWknTq/NRYms8L4NQkyVD3KWma
p/14PxhkSPUHJtN8bcvVkjErqXOjKjSvPjfS++Qian+aKs2nr5cyN3/L73fx
1Glue2Xb3f3UPhaeJs0NDo76xttC1Q3QpXnWKsMFcmLU+RF9mh822zBxYRS1
D9+A5uW+wzZWyFDXs2D9YkrbZK349fzPVS5Yv+As6itfuph/Xy4XrFMcqGr7
PKqYul//4//3iaArf2jrbHN+zrxRQPGD+eWPZA5R9QDH0Vzs+9qKnPf8+0W5
NM09ueUzHsVQdWjlaR7ZdOF6ax61/3MyzZ+e+c/NPY0/b9CpQvP92knmeZ38
eZhOVZo/itQ8c30JP/9OdZqvC//xsWwxP89OTZo3G04I7kzjj2s6tWluku+3
emQNf19upy7NvUwKN0gb86//Tn2ah9l42dxaxm+HOw1onvDsQpq8H/9+1CtY
dzj3XxxvWS+/HegVrDucXuT6QOIof92tV7DuYHhLN/wm8PPvFaw7+Mo/OZ0b
Rq0v8NvFoXWBhZsLZaKpfaSCef5N26P7zXSp/S2C+fZPX0/IS7jzx4MgmG93
/Dm9U/cvf56KJZgPnzPm/pf4POq+w99fEMcG9qTcSeJzqfpjwkDxwfwQoUvm
/PYBlAXc8dUzkWCqbpVgXvpmV/XFKxLUuQDBvLGLdlTZZxvqvK1g3nja1Bdv
zYKp+iqCeeMUDdjT4cbvX1kJ5nt5jQ0rLFKodcaf/J/q4CfuE2WsQPXH+O0t
4TcLDffsocetEjRPLNy+/3UixSfRPM4+qL3iMjVeVqH5iSSbF1fuUPdxVZrL
ryk8YXCS+ru6NBfLNX416EH18/Vp7mYyLdbTlRrfGdB89Ujn/tBAal+WYB7V
M0Ni7rdwqr0SzItqVlj7vX5JjS/+8O9LmvAL9pkpTuO/f94IoPgDhfubxuZR
++vG0HyH94/AefXUeQQpmldZnisfaUvtn59E86jS6aNyB6n6vSo0X6zTN47d
TdVzVqW5wrsu75tUnUkHdZp3XxtRdfsvtW9Ql+Ylsgt+RftQdWv1aa5SuvZR
cwH1dw1o7rhVeYP6Mb6XPMH85KGA4AfrYvnflzzB/OQy2/1BVdR52DzBPOTr
hevHtdHP9xzkf25t0AhPCLjaT3mk2k9tkNr+asqeGdR82jiaZ++DCmVP6pyO
NM07ZofKuRZRdRTlaR4p/dX9WTt1X5hMc45EdXOxK3VfUKH5sbJLFgGbqfMy
qjSXW9yw8LIIVTdSneauPt8fHdvJn28s16S5r37m9H8rqXNkujR3nOgsu9GA
qm+mT3P2vt+XI6jzreUGNN/CfbE+1JH/PjsF84dHUpa3W3vz7wudgvnD4wef
PVujzc+/UzB/6Orz6OnM7fzvdadg/jD7Y+3XRmVq3oa/342lB+cllHk5K/jj
fRDM101XrBmQTKPOswjmzRztTt+8Te3/lxTMX5kvM5h/cDI1b8Cv38/jwPqg
D52P2qnxlDBQ/Hbo+v3mqdT4V5nmd7or5jgmUuegBfNIh3sVdcdLUdeDYJ7H
5EhUctNW/vvkCeZ5AnRm9KfQdR0F8zA12xds+pZNjZv4+/vIOH2ci2q2Xyf/
PsLj95+H5lVaxhbfs6HOmYrTvEd69lFF6txuuTLNjWWFQUadfx12CuZJvkzI
HRU5id8udbJpvib1kZK+FP/72CmY32h8oK4zsYM/X9opmN9oT3PcPvo+5V0w
v9F3uORS7TzqvKdgXuKpVp5KfjnVD+Q/b2FoHL3/rv/zP1T+/PaNcLu3loUL
van5hzE0f2i2b74ktQ+HJ0Vzp453aVZH+f0c3iSae6aIcM+OpupTqdB8uPv+
6Bm6lBdVms8/uGDnvWX86xbUaX5o1Uf/qFP87yno0nxjyouCU1upOof6ND++
bKZegB2/nwkGNIfiLxcHNlN1CQTzAzd1Xj7YZEbVJRaM942/XD+nv40a7//9
308yHnw3N73bso5f/4HH728T3izTZGykSNWLGEtzibDv+1If8vcHgjTNtWKX
7xbyps7Xy9Ncxc288vBz/rgAJtN8zt3ME15f+ePxOBWaO1rPGv74Eb9djVOl
eeqB8ypGTRRXp7np5skf7BSo87OaNO+p/VDtrcs/zxWnS3M/8+fBuWVUP0Sf
5rL/rU76OoY6f2Tw//ArO+dX8Pt7DYJxesyGU0siX/KvnwbBOP2yYrMz5yZV
T0YwHq8fiN2/zYM/7uaN/h8n499po3oaGrby+3nlgn225n3d+8/s5j//pVyw
z1Z/i17L7QH+/Ey5YJ9tsU/EqkQ/fnvlwKZ5oeTNcI9Iqi6oYN/sD6mYDalv
qP3Mgn2zMl683WKl1Hl5wb7Z84br70X+puoSC/bBPg8cxrviyG+HuYJ9sKo7
gi3NZfj7irmCfbDfO+7v0RXnj3O5gn2w+0LO6rT84+975I3/Hyfj6M1blD4k
WfP3WfFkaZ52MWFadi1//pA3geYZb58OP6hP1f8U7CN1yzzuUTKFGu8L9pGK
RgS+nGbA/7zlgn2ky7cuatxWz7+vOQj2f7YnW7vfvM6fV3cQ7P+EgBF9Ulz+
eNZBsP9TVXGTVG0Ydf5F7n98aB6gfXKx823qnJcizcOnCU9j+/PvjyxNmrfX
+Xtt16bOvWrTPCPwcFP4X/73IkiwX9Hh7lW/ebb8/YpBgv2KUgNh5lsVqX2G
VN0heThUprC/3J1/PfC0aZ7z6/GDh67U+TLBvjjzeckp20Wpdpi/n5+MIxZq
3r0jrELNu46m+ZcntV951H4nnmC/k4/PmK6DtlQ/R7DfaXlgSEyrHTWOFux3
knOeJbdJj3+9AZvmHb2tXy+upc6BCvYv1Tfv/avmyL+/g2D/ktbntq5R1HNS
QLB/aXdDSXZZOX99DQT7kdQePN77dBtVt0ewH+m/6nzJJ6X89o0l2I/kPLMx
ek0e//OyBPuRmre174m3p+qFiv2PD+3/eZ02N66bep/jaS4Ok6vZp/nXIcjS
3P4kW1XClMphAs2zpWtFOtdS58cF+3wyLEMLVt7gtwNxgn0+H3arVcUEU+dN
BPt83kwUTpy7gv93rQT7c37VbjcNvc2/3qwE+3Oa0/JtV7jw+wNWgv05odJ1
K/9SdUuEqLpY6vBx2kwHuEPN38rR3DFX9O6WBGr8pSjgdrMf1k6luCbNFVqP
rJ14nlpf06a509rLWg0z+e+TJ9hnsub5x95fz/ntOU+wz8TqdWTQ1NnUeIf/
fkj/v3xi9/afbIor0vyo6c130kep8Yg2zYUkD2fM6uP36/IE+xyOFrz5vUOH
us6p+hvawJrja+N0h9+u8gTr3d4uC2NtB/nrpzzBuvZdk+VeBir8dSsQrGsv
2hS8XrSIOrclWNe2bfgUfsCK326AYF2bFbVnMHo3v1/KEqxfSxSnn2zI4n9e
FpvmYxY6vU7ppPrPgvXr7Ln/jUlroOo6Ctavg/pOLjHXpL4vgvXrkPzoRwF/
+d8vlmA9+pWZdMgBNr8+gKRgPbpisdZoeV3+vk1JwXp0/yzWGE4xxQXr0e/8
6uRnllDz8Pzv19D5x+2mJ7fMpNa5xtNc78gq7Tnj+fOTQrI0P+D09pyrBPW8
ywk0r1mYtseqixp3s2n+3vJ+pYs2dV5bsP47iRtZ+m8nNb4WrP/enDfio54x
xQXrvxdS3cw/ZFL9Q8G6bUiXj3nQXP76OwjWbfebFuxdqMqfJwfBuu3w3AgL
/Wv8+1E5//OS/vPKq5Pyba/y553KZWmescfpV4cvNY83geZaYZ/XXnTi74fv
FKx73hSvenjoDdX/F6x7Pv5kGug0juKCdU9JyXiN7Uv5/X83wbrkyTwV0X8/
+P1zN8G65J6qGIXFM/jzujz+95H0YxVWFLT8TqHqhyvSPDg+qGWmLtUeatJc
+qNY9Fs76pydNs3HukJs5nLq3KhgvYw7qtn3iAd/vg7431PSf+MUzhng/uO/
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
FfYAMRTg0A==
     "], {{{
        EdgeForm[None], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
Gib7LIqr0pDyXq6GGyV7LorJVZL3ISlvXpbs0SgmV03ez6Q8qNyhfSbq9Rye
vB9LOfHSZH9Ha2preJ+b5vM34T11Wgt3h/2cq+CLk+vJ5nonYV9FLP08N9e6
O8L7xNQjuyC5BtAzr5tcb+h7pI1VF0gXXZLsPV0Hnx3eh6h+1uXJ3o1yx0XJ
dYt++0/K6UX311Q3qQaRTlN9JL2tuqFb2P/Rd7ZM9n0UM/dLrpNV9+0W3gN2
EDwp2QeXDr+c8ZEF93kPSK7tpWF2De8BqwBXTvYaxHOTe1Hqg1RMrv+lQ+Yn
95bU15iS7L1Kwy9I7o2pB/FKcq2iGuSusIcmHfVqct2iWuPl5L1rqt3qh/c+
qd/dOLyvSv3cccmeqeqXyck9J9URByZ7HNJvY5L3QqmOPijZO5B+G5tcO6km
2j/ZB1Fcap7s2SnvyNuUPyA/o0KylyEN1jp5f63y+GHJ+/ak064N71lVr399
eP+n4t4F4X2j6kvOSfaaVae3St5Tq1w5L7nPp97Qy+HeoHr3ByfvUdP7ujbZ
/1K+U60kr0PauEvYS9SavS55z640Q5XwPkD1f99K7kGqx3RI8v5CaaQ3k/uI
6hNJ42n/lXqvV4f3iWkPwFNh31v7BCol+0SKqy2SvUjl7kOT9zVKu05M7rGp
jlunOJzrk/8DJ4Gd/Q==
           "]], 
          Polygon3DBox[CompressedData["
1:eJw1m3fgV9P/x++9555ry2ooacqI7FBGJcoeIaQQGZUGFSVklUooytYuVLQI
idKSkgqFoih7k2T/no/v8/7+OH3O857zvvO8Xq/n6/k61Wrf9dwuWZIkd4Uk
yfX3Tv2zSn8vFj6jSJJ2MUneEV6hdrvGztfkbdIk+VX4es05TXMa69imcvxn
jd2h/gi16ho/T2OFjv0i3F34Fs1Zpv756p+q3z4l/L1wV+G2wk8Ifyt8nXAb
4ZHCPwh3E24n/LjwN8KdhS8WflL4O+EuwpcIX637XSu8Tm2Ixoapfap+B42f
r/EHhNcLXyHcSvhc4THCRwofJ3yH8Erhi4RPF64j3E44CB8gvKfwecJ/6bn2
EW6p1lD9T3Ssj8ZOET4q8zX6Cu+qdrr6W3SstsaqCLcS/lO4LnOFrxfeTec/
Sriu8KXCuXB94UrC5wr/ofl1hGsKtxFONb6/8OHCXYQrCB8hXEP44oQbTpL9
hPcWvkjwP/1+X+EOagPUP0XfZJXGTlN7TOOHaP6xGttWY08JD1LbR8eeVRui
Y2dr/oeae7Xm3Ct8lvAHwlcJDxY+U3iN8NFqN+i3u+t3R2vsGOEewnsIHyPc
SLincEXhRsLVhS8U/lfnqCd8mPB1wjtr/HDhI4S7Cu8ifKTwkcLdhHcVbsiz
CK8Wbit8ZuE1e5zO9UW5lgeqfaD+pRo/W2P35f5W7YXPFb5HeI1wO+GzhH/R
c9wp/LDa3uUaOFbn+zzx2mCNYwsXlmt/qPAG4StZ68KDhD8Uvkz4HOHmwhOF
DxAeKbxF579H+Am12jr2jdbrR6w/XeNVje+j+ZcJR40dKNxA+FrhHYQPFT5U
uLPwTsKHCdcTvly4ED5I+Cudb7lwfZ3vFeED+EbC22q8gfCBfEPh7YQPFr5G
8z9O/E54NyNyP+s1Gm9d2EaPzvyM2O5Bateov73GD9HY8Ny2f7XwBcLfRds7
dv+acBsdP179L/ExmrtR46+rX1PHXtD4Mv19XvMP0LGPymuepmN/JL6XLsKP
CbfXnG9ZK8KnC//JN8If6Xzz1H9D7Qbhj4SfZb1ozmTN/VL4bd6/8MuFfUBL
9X9L7Bv4Zi2ENyf+lps0f676tXTsRdaTjk0VPlT3Nk74Io5p7C8dewRb0/wl
6r9V2v+nwi+rX01zZmjuKTo2WbiBfj+Ga+W+vwOFRwl/pvmvCO+l+TPxR8Kz
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
9bk=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt13e8T/UfB/DrXiuySyFkZJS994wQooys7Fku/RK/UZJRicoq/IwKkZAV
kV1Gyt57XOsiW2TW8zzu54/j3M/z+/p8ztf3c87n8z55OvV5OT42JiZmlyOF
o4J/MsTFxJxKFhPTR7tM8piY8iw9S2DxrDRLzXbqOJnlZAk+38aKOGfgs1ld
uV2sJHuMzWcN2Uy2kf2fdU6WdOFZjk1sEuvCkml/6VjDxrLW7La+T7CL2mu0
a0Rd2bfsV7nJvCuP1Z7r2Ka9ULuI3FGf72GlnbNGzhrru4nFsjNyfVke9jVb
xz6Xa8fvsunsFzaetWf32Qy2nk1gHdgDtpuVYo+zBcZrxGazzWwK6yYXpz3N
8TP7gr3G7sntZWXYE2yRvi+x0Ww+G8LqyCWwiiwjOx2+c1m2mRVgj8hNY9VY
EZacHZDrwJ5hhVkytpe1Df/fQtHER78Pa+PPp1lRloIdZB1ZAZaX3TH+VvYK
e5LlYNfYBvYCe5RlY1fYL6wOS8MKsr/Zbtaa5WbZ2VW2ntVladlvrKDrpuHT
WQ02in3PBrPnZU+ynOym9q/aL8plZPnYXbaNNWPZWAH2kO1irVguNoEtM95I
3oRfYuPZj2wEe4n9wSay5ewT1pRdZr+zQiwtm2G8mmwcW8w+ZA3kzrGxbBH7
gNVnZ9nn7Af2EXuRJbLhbAb7NyvHdrP87J72du3mrpGdjWSz5d7lVfhBNoJ9
y95hldkB9itLxS5o99e3IMvF/pTZzBqyTCw3u8V+Y41YZraFFdb3Uf4Nq8Wm
stVsDGsle4uVYo+wo9o95IqyMiwtO856seKsJEvNjrDurAjbyp5l6Yw3k9Vm
+1g5lo39yJqxKiwzO6vvW9G6xHay4iyz3FxWn5VmadgxuZ6sGKvEMoVn+k1W
ju1gxVgmfeeweqwcS8dOyvVmpVhVloWdY/1YRTaFrWKj9X2V/8kOs6rs6Wgt
kmvLqrHHWKLM26wSO8AqsBxyy1kLVoNlDXM0gFVhxVhKdoh1CvNWnT3Ozoe5
rMy2s6Iso/G+Yy+wg6wie4r9xFqy/aw8y86WseZsMlvJRrGWxrzJPmPz2Pus
NjvBjrKaLH/0bOrbkR1iVVhutpq1YUdYNZaHrWXt2HMsju03VnuWn/3ADsis
YBXY+WgeUmo7Tw1r4hW5G3Ifsl4sL5vDbrKP2OssH5vLurEOrAw7ZLwR7DRr
xEqwPexN9icbzt5g+fWdx9qzV1kRtlNuMLvHRrN+rITccvYX+4T1ZYXZItaF
vcZKsQP6Dme32AgWbaIF5Raw22wk68MKsYWsK2vPSrOD+n7MOrN2rCTbzz5i
7VhzVjhaZ9lA1pG1ZsWi9ZMNZadYQ1Y8WF9Wh5VgydmksNc2YJVY+rAnt2bJ
/PYT2P9YBd9vHXso93lYh8qy1ewBG8v6s1JsBevAWrGisUk1wxCW3HhT2CBW
TW4Ti2OT2XusKtvI7uo7ir3FirNlrB4rG/at6eHZv8/GsLdZSbmfWKzxJrGB
Yf3bwM7LtWXVWaK+w1iM3Hj2X1Zebi1rK9eMFWJbRN5ld9in7E32rNxilkLf
r8JeG+0zW9lVuaGsO8vFZrGz7GVWNtx/A9gZ1jTck9H89mepjDeNDWN19d3O
EuVaskosQe49do0NYz3Y03Kz2Ty2PaoDtIvKHfN5auN9E/aPBmGvmCO3Nao1
tJ+TOxL9lnIznYeHfWaP3HW5D1hPlod9x9LIzWIfs4ZsL2sj9woryH433jss
rdwc9mnYBw+xR9lc9hl7mR1mLfV9ieUL68bbLJ3cglDDtQr1Swu5xixvVCPI
9WOvsPosJ1vF4lkz1oDlCmtOH3aOtWAV2cnwfKR3jYVsXKgTT7ETcnXDcxTN
eU+WQW5JqNfah/33VbkmYa3bEObtJHuBPRuewV4sgdVjz0X1BXudZTTeUjYx
1H/n2d9yX7D/hP18DWvCnmdPhv2tBzvOarMCbCPrzBaw3dpL9SvFTkXPHuvj
XJtfZl/KzWe7tJfIlQy19wXW0fn5kIvWxKXsUPR7ylViF30+gPUNuSvsK7l+
rDeryf5gU9gbrGv4naP7dCyLZ91ZZXaGfcG+Zzu0F7tGMXY8em5ZvHMtfolN
levFOrPy7AQbzV5nXViFMJdjWF/Wk1Vl59gEtpKd1t7kGvXYnah+YIfZ/HDf
X2XL2DG2jtVk16NagZ2J9l5Wnt1ny9lx9jOrxW6wLOZyg/O3vF+o5TOztWw6
iw/vHyv0PRXNWah3/4r2YnYyzEc0b7dZVnYhum9ZdZZc359YQmxSrVw35LKw
s9G+HfbGBywN2xfVRywfS2Q/sqPRPhvee66xDOwE+yHcB7eitZW94VyDX2ST
XbcP68GqsLNsPFvI9kT3o76l2eloXWHTo3sk7AG75Bqy6tH3jE16f+vAerJO
rBw7zkaxgewz1pnlCGv7IDYurGt5wp6ykT2I7oFQJ+ZgjViNuKR3xAWh3ljH
Lkd7tFwLloodY7XkngnPaie2ll3S3hFq5ZSsKasTl1RPLgvP/i/shva+8N6T
jv3MrscmvQu1Ce8uV9gQfbvxnHwm+4B9GfatEmFfuMwGs67sKfYNW8z2h7ks
H+btEnvfuUv4XWbILWJ7o++mXUbuTLQPsV7O1cJeNlFuCTuovVKuIrvg81Xs
XGxS3d4w3C+rWWK0Xoda/iFbw85Hax9rzP5mG9hf7HCoMbO4xjA21Wf/Cnvy
Frae3Y5NqkU7hneDwWyiXO9Q56xnf7BBYc6zs2nsIuvG6rNbYd1I6Tn6mg2N
TXqH3cb+AeMNHyc=
           "]]}]}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0tsuXFEAx+E1mDrXObh0R/AGhL4BWi8gJvSGW1Ln82GGiohI07QTaRoR
Z+r4ABWPgHgCQbyAb8fFL9//au+110xNV39HXyyEMK8MRbtCt5kh1PGJzczM
CqGdlUywnoNMqcVO8zNP2MNrfuM9l/nCuIdv2tU8ZSNv+IkP7OQrv3JYI9p1
qFHucYz7HOcBJ3jISU7pyJ7mMWd4wln+41z0Ts5zQWf2Is+Z5AVTvOQSr7jM
7xpSPB5CL1+c7wvv2cprNkTvYhWzlLafo7vhHQf5nwkes52/mVSzPcA6dkd3
z7bod2ATH91/LctVph3PL+U2S7jFYv5lEf/wIwu1aRcwzXz+Yh5/Mpc/mMNs
bdgfuB59K9eib+EqHSGsxN7/H28dFECV
         "], VertexColors -> None]}, {
        Line3DBox[{987, 1286, 986, 716, 988, 1451, 1661, 989, 1452, 1662, 990,
          1453, 1663, 991, 1454, 1664, 992, 1287, 993, 1556, 1288, 994, 1455, 
         1665, 995, 1456, 1666, 996, 1457, 1667, 997, 1458, 1668, 998, 1289, 
         999, 1557, 1290, 1000, 1459, 1669, 1001, 1460, 1670, 1002, 1461, 
         1671, 1003, 1462, 1672, 1004, 1291, 1005}, VertexColors -> None], 
        Line3DBox[{1007, 1292, 1006, 1558, 1293, 1008, 732, 1009, 1463, 1673, 
         1010, 1464, 1674, 1011, 1465, 1675, 1012, 1294, 1013, 1559, 1295, 
         1014, 1560, 1296, 1015, 1466, 1676, 1016, 1467, 1677, 1017, 1468, 
         1678, 1018, 1297, 1019, 1561, 1298, 1020, 1562, 1299, 1021, 1469, 
         1679, 1022, 1470, 1680, 1023, 1471, 1681, 1024, 1300, 1025}, 
         VertexColors -> None], 
        Line3DBox[{1027, 1301, 1026, 1563, 1302, 1028, 1564, 1303, 1029, 748, 
         1030, 1472, 1682, 1031, 1473, 1683, 1032, 1304, 1033, 1565, 1305, 
         1034, 1566, 1306, 1035, 1567, 1307, 1036, 1474, 1684, 1037, 1475, 
         1685, 1038, 1308, 1039, 1568, 1309, 1040, 1569, 1310, 1041, 1570, 
         1311, 1042, 1476, 1686, 1043, 1477, 1687, 1044, 1312, 1045}, 
         VertexColors -> None], 
        Line3DBox[{1047, 1313, 1046, 1571, 1314, 1048, 1572, 1315, 1049, 1573,
          1316, 1050, 764, 1051, 1478, 1688, 1052, 1317, 1053, 1574, 1318, 
         1054, 1575, 1319, 1055, 1576, 1320, 1056, 1577, 1321, 1057, 1479, 
         1689, 1058, 1322, 1059, 1578, 1323, 1060, 1579, 1324, 1061, 1580, 
         1325, 1062, 1581, 1326, 1063, 1480, 1690, 1064, 1327, 1065}, 
         VertexColors -> None], 
        Line3DBox[{1067, 1328, 1066, 1582, 1329, 1068, 1583, 1330, 1069, 1584,
          1331, 1070, 1585, 1332, 1071, 780, 1072, 1333, 1073, 1586, 1334, 
         1074, 1587, 1335, 1075, 1588, 1336, 1076, 1589, 1337, 1077, 1590, 
         1338, 1078, 1339, 1079, 1591, 1340, 1080, 1592, 1341, 1081, 1593, 
         1342, 1082, 1594, 1343, 1083, 1595, 1344, 1084, 1345, 1085}, 
         VertexColors -> None], 
        Line3DBox[{1087, 1346, 1086, 1481, 1691, 1088, 1482, 1692, 1089, 1483,
          1693, 1090, 1484, 1694, 1091, 1485, 1695, 1092, 1347, 1093, 811, 
         1094, 1486, 1696, 1095, 1487, 1697, 1096, 1488, 1698, 1097, 1489, 
         1699, 1098, 1348, 1099, 1596, 1349, 1100, 1490, 1700, 1101, 1491, 
         1701, 1102, 1492, 1702, 1103, 1493, 1703, 1104, 1350, 1105}, 
         VertexColors -> None], 
        Line3DBox[{1107, 1351, 1106, 1597, 1352, 1108, 1494, 1704, 1109, 1495,
          1705, 1110, 1496, 1706, 1111, 1497, 1707, 1112, 1353, 1113, 1598, 
         1354, 1114, 827, 1115, 1498, 1708, 1116, 1499, 1709, 1117, 1500, 
         1710, 1118, 1355, 1119, 1599, 1356, 1120, 1600, 1357, 1121, 1501, 
         1711, 1122, 1502, 1712, 1123, 1503, 1713, 1124, 1358, 1125}, 
         VertexColors -> None], 
        Line3DBox[{1127, 1359, 1126, 1601, 1360, 1128, 1602, 1361, 1129, 1504,
          1714, 1130, 1505, 1715, 1131, 1506, 1716, 1132, 1362, 1133, 1603, 
         1363, 1134, 1604, 1364, 1135, 843, 1136, 1507, 1717, 1137, 1508, 
         1718, 1138, 1365, 1139, 1605, 1366, 1140, 1606, 1367, 1141, 1607, 
         1368, 1142, 1509, 1719, 1143, 1510, 1720, 1144, 1369, 1145}, 
         VertexColors -> None], 
        Line3DBox[{1147, 1370, 1146, 1608, 1371, 1148, 1609, 1372, 1149, 1610,
          1373, 1150, 1511, 1721, 1151, 1512, 1722, 1152, 1374, 1153, 1611, 
         1375, 1154, 1612, 1376, 1155, 1613, 1377, 1156, 859, 1157, 1513, 
         1723, 1158, 1378, 1159, 1614, 1379, 1160, 1615, 1380, 1161, 1616, 
         1381, 1162, 1617, 1382, 1163, 1514, 1724, 1164, 1383, 1165}, 
         VertexColors -> None], 
        Line3DBox[{1167, 1384, 1166, 1618, 1385, 1168, 1619, 1386, 1169, 1620,
          1387, 1170, 1621, 1388, 1171, 1515, 1725, 1172, 1389, 1173, 1622, 
         1390, 1174, 1623, 1391, 1175, 1624, 1392, 1176, 1625, 1393, 1177, 
         875, 1178, 1394, 1179, 1626, 1395, 1180, 1627, 1396, 1181, 1628, 
         1397, 1182, 1629, 1398, 1183, 1630, 1399, 1184, 1400, 1185}, 
         VertexColors -> None], 
        Line3DBox[{1187, 1401, 1186, 1516, 1726, 1188, 1517, 1727, 1189, 1518,
          1728, 1190, 1519, 1729, 1191, 1520, 1730, 1192, 1402, 1193, 1521, 
         1731, 1194, 1522, 1732, 1195, 1523, 1733, 1196, 1524, 1734, 1197, 
         1525, 1735, 1198, 1403, 1199, 906, 1200, 1526, 1736, 1201, 1527, 
         1737, 1202, 1528, 1738, 1203, 1529, 1739, 1204, 1404, 1205}, 
         VertexColors -> None], 
        Line3DBox[{1207, 1405, 1206, 1631, 1406, 1208, 1530, 1740, 1209, 1531,
          1741, 1210, 1532, 1742, 1211, 1533, 1743, 1212, 1407, 1213, 1632, 
         1408, 1214, 1534, 1744, 1215, 1535, 1745, 1216, 1536, 1746, 1217, 
         1537, 1747, 1218, 1409, 1219, 1633, 1410, 1220, 922, 1221, 1538, 
         1748, 1222, 1539, 1749, 1223, 1540, 1750, 1224, 1411, 1225}, 
         VertexColors -> None], 
        Line3DBox[{1227, 1412, 1226, 1634, 1413, 1228, 1635, 1414, 1229, 1541,
          1751, 1230, 1542, 1752, 1231, 1543, 1753, 1232, 1415, 1233, 1636, 
         1416, 1234, 1637, 1417, 1235, 1544, 1754, 1236, 1545, 1755, 1237, 
         1546, 1756, 1238, 1418, 1239, 1638, 1419, 1240, 1639, 1420, 1241, 
         938, 1242, 1547, 1757, 1243, 1548, 1758, 1244, 1421, 1245}, 
         VertexColors -> None], 
        Line3DBox[{1247, 1422, 1246, 1640, 1423, 1248, 1641, 1424, 1249, 1642,
          1425, 1250, 1549, 1759, 1251, 1550, 1760, 1252, 1426, 1253, 1643, 
         1427, 1254, 1644, 1428, 1255, 1645, 1429, 1256, 1551, 1761, 1257, 
         1552, 1762, 1258, 1430, 1259, 1646, 1431, 1260, 1647, 1432, 1261, 
         1648, 1433, 1262, 954, 1263, 1553, 1763, 1264, 1434, 1265}, 
         VertexColors -> None], 
        Line3DBox[{1267, 1435, 1266, 1649, 1436, 1268, 1650, 1437, 1269, 1651,
          1438, 1270, 1652, 1439, 1271, 1554, 1764, 1272, 1440, 1273, 1653, 
         1441, 1274, 1654, 1442, 1275, 1655, 1443, 1276, 1656, 1444, 1277, 
         1555, 1765, 1278, 1445, 1279, 1657, 1446, 1280, 1658, 1447, 1281, 
         1659, 1448, 1282, 1660, 1449, 1283, 970, 1284, 1450, 1285}, 
         VertexColors -> None]}, {
        Line3DBox[{401, 701, 402, 716, 431, 731, 1558, 446, 746, 1563, 461, 
         761, 1571, 476, 776, 1582, 491, 791, 506, 1691, 806, 521, 821, 1597, 
         536, 836, 1601, 551, 851, 1608, 566, 866, 1618, 581, 881, 596, 1726, 
         896, 611, 911, 1631, 626, 926, 1634, 641, 941, 1640, 656, 956, 1649, 
         671, 971, 686}, VertexColors -> None], 
        Line3DBox[{403, 702, 404, 1661, 717, 432, 732, 447, 747, 1564, 462, 
         762, 1572, 477, 777, 1583, 492, 792, 507, 1692, 807, 522, 1704, 822, 
         537, 837, 1602, 552, 852, 1609, 567, 867, 1619, 582, 882, 597, 1727, 
         897, 612, 1740, 912, 627, 927, 1635, 642, 942, 1641, 657, 957, 1650, 
         672, 972, 687}, VertexColors -> None], 
        Line3DBox[{405, 703, 406, 1662, 718, 433, 1673, 733, 448, 748, 463, 
         763, 1573, 478, 778, 1584, 493, 793, 508, 1693, 808, 523, 1705, 823, 
         538, 1714, 838, 553, 853, 1610, 568, 868, 1620, 583, 883, 598, 1728, 
         898, 613, 1741, 913, 628, 1751, 928, 643, 943, 1642, 658, 958, 1651, 
         673, 973, 688}, VertexColors -> None], 
        Line3DBox[{407, 704, 408, 1663, 719, 434, 1674, 734, 449, 1682, 749, 
         464, 764, 479, 779, 1585, 494, 794, 509, 1694, 809, 524, 1706, 824, 
         539, 1715, 839, 554, 1721, 854, 569, 869, 1621, 584, 884, 599, 1729, 
         899, 614, 1742, 914, 629, 1752, 929, 644, 1759, 944, 659, 959, 1652, 
         674, 974, 689}, VertexColors -> None], 
        Line3DBox[{409, 705, 410, 1664, 720, 435, 1675, 735, 450, 1683, 750, 
         465, 1688, 765, 480, 780, 495, 795, 510, 1695, 810, 525, 1707, 825, 
         540, 1716, 840, 555, 1722, 855, 570, 1725, 870, 585, 885, 600, 1730, 
         900, 615, 1743, 915, 630, 1753, 930, 645, 1760, 945, 660, 1764, 960, 
         675, 975, 690}, VertexColors -> None], 
        Line3DBox[{411, 706, 412, 721, 1556, 436, 736, 1559, 451, 751, 1565, 
         466, 766, 1574, 481, 781, 1586, 496, 796, 511, 811, 526, 826, 1598, 
         541, 841, 1603, 556, 856, 1611, 571, 871, 1622, 586, 886, 601, 1731, 
         901, 616, 916, 1632, 631, 931, 1636, 646, 946, 1643, 661, 961, 1653, 
         676, 976, 691}, VertexColors -> None], 
        Line3DBox[{413, 707, 414, 1665, 722, 437, 737, 1560, 452, 752, 1566, 
         467, 767, 1575, 482, 782, 1587, 497, 797, 512, 1696, 812, 527, 827, 
         542, 842, 1604, 557, 857, 1612, 572, 872, 1623, 587, 887, 602, 1732, 
         902, 617, 1744, 917, 632, 932, 1637, 647, 947, 1644, 662, 962, 1654, 
         677, 977, 692}, VertexColors -> None], 
        Line3DBox[{415, 708, 416, 1666, 723, 438, 1676, 738, 453, 753, 1567, 
         468, 768, 1576, 483, 783, 1588, 498, 798, 513, 1697, 813, 528, 1708, 
         828, 543, 843, 558, 858, 1613, 573, 873, 1624, 588, 888, 603, 1733, 
         903, 618, 1745, 918, 633, 1754, 933, 648, 948, 1645, 663, 963, 1655, 
         678, 978, 693}, VertexColors -> None], 
        Line3DBox[{417, 709, 418, 1667, 724, 439, 1677, 739, 454, 1684, 754, 
         469, 769, 1577, 484, 784, 1589, 499, 799, 514, 1698, 814, 529, 1709, 
         829, 544, 1717, 844, 559, 859, 574, 874, 1625, 589, 889, 604, 1734, 
         904, 619, 1746, 919, 634, 1755, 934, 649, 1761, 949, 664, 964, 1656, 
         679, 979, 694}, VertexColors -> None], 
        Line3DBox[{419, 710, 420, 1668, 725, 440, 1678, 740, 455, 1685, 755, 
         470, 1689, 770, 485, 785, 1590, 500, 800, 515, 1699, 815, 530, 1710, 
         830, 545, 1718, 845, 560, 1723, 860, 575, 875, 590, 890, 605, 1735, 
         905, 620, 1747, 920, 635, 1756, 935, 650, 1762, 950, 665, 1765, 965, 
         680, 980, 695}, VertexColors -> None], 
        Line3DBox[{421, 711, 422, 726, 1557, 441, 741, 1561, 456, 756, 1568, 
         471, 771, 1578, 486, 786, 1591, 501, 801, 516, 816, 1596, 531, 831, 
         1599, 546, 846, 1605, 561, 861, 1614, 576, 876, 1626, 591, 891, 606, 
         906, 621, 921, 1633, 636, 936, 1638, 651, 951, 1646, 666, 966, 1657, 
         681, 981, 696}, VertexColors -> None], 
        Line3DBox[{423, 712, 424, 1669, 727, 442, 742, 1562, 457, 757, 1569, 
         472, 772, 1579, 487, 787, 1592, 502, 802, 517, 1700, 817, 532, 832, 
         1600, 547, 847, 1606, 562, 862, 1615, 577, 877, 1627, 592, 892, 607, 
         1736, 907, 622, 922, 637, 937, 1639, 652, 952, 1647, 667, 967, 1658, 
         682, 982, 697}, VertexColors -> None], 
        Line3DBox[{425, 713, 426, 1670, 728, 443, 1679, 743, 458, 758, 1570, 
         473, 773, 1580, 488, 788, 1593, 503, 803, 518, 1701, 818, 533, 1711, 
         833, 548, 848, 1607, 563, 863, 1616, 578, 878, 1628, 593, 893, 608, 
         1737, 908, 623, 1748, 923, 638, 938, 653, 953, 1648, 668, 968, 1659, 
         683, 983, 698}, VertexColors -> None], 
        Line3DBox[{427, 714, 428, 1671, 729, 444, 1680, 744, 459, 1686, 759, 
         474, 774, 1581, 489, 789, 1594, 504, 804, 519, 1702, 819, 534, 1712, 
         834, 549, 1719, 849, 564, 864, 1617, 579, 879, 1629, 594, 894, 609, 
         1738, 909, 624, 1749, 924, 639, 1757, 939, 654, 954, 669, 969, 1660, 
         684, 984, 699}, VertexColors -> None], 
        Line3DBox[{429, 715, 430, 1672, 730, 445, 1681, 745, 460, 1687, 760, 
         475, 1690, 775, 490, 790, 1595, 505, 805, 520, 1703, 820, 535, 1713, 
         835, 550, 1720, 850, 565, 1724, 865, 580, 880, 1630, 595, 895, 610, 
         1739, 910, 625, 1750, 925, 640, 1758, 940, 655, 1763, 955, 670, 970, 
         685, 985, 700}, VertexColors -> None]}, {}, {}}}, 
     VertexColors -> CompressedData["
1:eJwUmnc4lf8fxrUkpYhkJSlNmqKhbsooSSiykxRJKspoaAhFIdGwWpQWSmRU
nH2OvcnenOccI0q+kn6f31+u61x6zvN8nvf7vl8vV0ucz1gcnyoiItItKiIy
jfy8L/HicpAtGx83GWTXnKVDJvmS+4xCPhyudt7a8YiNQoep9PEROoZoUe9a
G/gIfn32se87NkSfzvb7pcyA3de5kcfb+HCkO7+O2c9GbrVcsLUlHdyUfUpX
2HzwxS+n16zj4PrCO9PltZgoTzZ00p9OQVaveXidKgcbJD0M5eWZYMzsPB4q
QmFwtoUUX46NK1dqgk5109BubSOnmM3HwJ87M6s0WPiWnqrA68yHb/LUtZQv
H2EiT8dnOrMw8OmfRZVTAUySYoPXBPPhNc1hk+ZCNmLB1Slqp+FHdWzpi898
NM3iG8e0s5CnVGzTeIaGifirT/+l8HF87ID3IS4Lev/KXDduo8HFUPaownNy
/ZMi1X0jTDxdKvXkdf83lOBsjbwbH+zbaT4yvUwMVCgOLP38DY3Pi0Ufu/Ch
yQ6JYHawoBvqTzviRcNHltcZi9d8nLASz9PwZyNtmo/W+Ac61jOnuLlU8rFQ
466PdRYbAR02/w1vYiDMjy8t18mH4Z9khwvdLCTRzzkt9KMhQkHu5tw3fFhl
Hg60ucGGmHzsDx8WHUlS//l3V/OxPuSBLv8iB51hqjJPa5i481DPmilH4a8V
bUnRznI8VBkyuf63ChJFnzvjw4UwHzoQndLdDnGdSPvx4C8od5jjdeQqB+F3
TP3vfabg02HkcGVzO3YmmR/eO6cZJ8tNDyRpd6OHpWERQOYg8+Bqzom//Xjv
vW/hhNV31Iym+Xo0tMGi/+LwIkE/dvfpSgbmlUBqhtMn63kV8LHRk6goEcBW
fHz2lQIOMvXZ5b4nWVhxuI5irKEgk/bVcH0hG1t0e/lKjgzM4pxfGtjHR9K8
Es49Mp97dsTUDZL5nPGtiiVG5nO6h8ST+/c4mJPYZMubwcLlqrcZP5Up3Dp3
6Vx7BQeW4rH3PcJZ6CnoSglcT2H94Is7reksIMGdbStGw1ikVfbHOD5KbR7s
HnLmgP73EyftOROK848lbplPYSKYM7qigQ1Puuln8WsMiE75tq9VyMc54wRD
QQ8Ps3sbkuf94UHW/8jwPDqF2Y/UxI9UFMHq33ZslijFJFXo/MdIAIXfY3oR
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
YRNipfqtsBBl4u1iBU0UOmOfhh85w0ZW6jSPZQl0lNx5NplVxofOXiNtZddC
vHkmiPOdXQRueq2BVDfpfeVnc/fpFOPMrNDNrkOl+LJ/+UmN4wJcfO3bJafA
gW+59N2+mUwcrL7TeWiSeJn/vi33FpLcq4tmXSX8uOWXf2vobgrb/H1pReQc
TvpM0xceycci/9wd58g5lHstDa4nn7uypoWokvMpWqWbe558/tzBf1ThMQ+l
sYkxny15aLjCel7+joJXnkax9yAH6Z2aD3eVsOA36Md6sIWCrcyGBXXFZB/F
N33n7KZhT0zdK8sXfDxb91VCLYKLLytiBTEqHFwx9g/d4EIh8mpt60QKGxuP
eBRFLmSAt6rV2quVjzaFbWF8NgsGfQzDddo0lJzbv/fzMz4CUjm/KqK5MJui
tDJZnYNVtgt3fztO+G2fheVU4l8pBzyM8xwYiE/+9dCH+BflXOFwdpzwef3A
lRdMBqJ0fQVpv/ioiMvHyR4W1r8seLToIg3Ozj8UzYmf6sjE/j6jzsKZkqS1
Xc35mPx1d9tt4um5lT6mnV1sjJSzL9Q/YGD08nPfkkE+3LYsMdTo42KTiPVJ
EjAo8Neddf0yhY1/JkZspHhY3mIzrreZi8aqSM38EAoG3GJexyY2mHYjhl+V
6bg70pfjl89HM03ydMvLQtwLDRH2RxWBF7Q80n+UgpKmjrZoKguBUuaz9k+l
oU4uLUpAcinufrL43HIWDA8YhsQb06BxYK6jFpnbu5MD/4WUcBBwuzB2bRAL
0Y/fPDm4jsKjj/unP/jEwa4cG0MNMxbWFO+lAldSsF+7p2iBaiEs9h6awfUr
xLGG5zTtSgovZ60MmN3OQ3jqKtPoAR6CE1wsLxRQeL39M2enNwtOan6bXIMK
8O26T0VLKB8rDkbNDAzjYDmzzaRnjImu7Ha6ySIKYdS6pQlbWWCfX/Hih3gB
Ei4371G9xMfug0ovtLaxEf8zauc6dTr+XZcV20Qj3Mtx+J12nAMN481zQ1KY
0Gc4MMeIzwq3vaBy7TiwmDyW4nifCfsa/6+6khSydz282mbARqDcrrLf+nSo
/Kw75MzkI0a5zvqONRurPyx0SPIgXH3P9vIlHh8yxvbzRktZuKj6KnbvHhr+
+LVQfDKfSo7fHnv0czB20sVhhMvCxFC2yCwyz/seHIuNj+XgqUHC0gk5Fq7Y
TDPwWEIhXzn6ao4sG/uS626w22jQ77u+/8ZnPq5I7JcPHCH/fidf9mcMDS/q
szu73pPv7X51edlZ4neBO1rZiXQsuWjHFJJ9l9y2MNPpDcklif+8744X4JBR
yzsh6a/lrQ6VslZspD50/uTuSseEj9/DMi4frrbXZFSPFEFXbUGIr0IJAqoT
hnkrBWjZXGf3KYgHjQzZTQHqxA+mfrt88xXJ7f0P58k3EO7p3nml4wkLspYH
59E3UmCKTr/wcT2ZV5si5QFtJmTrD6Rcm04hXuqf7D1zDpxFXy5iX2FiOZz3
X5SgIJXXpJa/nOS7qMSfiqnk/oUFBh15fIRz5g1KZHFw0S1pjslBFkSMgyMo
Mldv/zyZKGxgo8vESPn4dQa2eZuVze7nQ9xFMCeOPO/Q1RSPWX8KUPZXLW6C
PO+OVnVOTTcLHst8d3T5kXlO8KtbSfZx/6Do5Vtkr6+2rrOud2RgqMd2axzZ
65v2XWnT+Bx8M9eMis5nYa85Pb9ai+Rz5mh4wFM2hi30U27OYGCh7o0klWbi
0Z35jtUkhwcj5mYoFhXCQbFrbjHJ4U/Sc9xuOJNce7h3W2Y7F5VU5d4+0stm
Rfr/Zuwvgprc+PmJkWJoG0fNqV8qwDXT3e5i2UWY981xumNdCR7k09ZL6gng
oW/xt45wjEJGrdlRkj/bjeeJnSL3ma89f+NQBgv/Pcme3TKXBvWiM2O34vno
ZL49PbeWhWdeh5Y7HCbzYyDX8T2Z5O3+vHFzGgcPD0w10DnFwsujG+ZNriH3
c2P1QHUvB05dKbpSX1lA2x2ZG+R5TwuvXpSv4EFub3v4x2Ie/hxKy1H4QsFo
mFE03Z4HSis/iKri4tCxs9Gq8RQqdxs/Ef/Jwrw9ivNkHtJw9eSs7lmpfGw6
8Z2r78SBdcNX/2kJTLjvnz55RYrMz63yORGZLKhPTw0/MJ+GkEO+GCf3X8+R
NkoUZeFbR0PImh35kJOWit98mnCR3oERaohFese56WwkDfu+PwldR+Z//bH4
o78WsqFh8zj7eCcNyV67wuvJvoSffzlxXsBG4eEPZSVJDLzc+uPVox98WPOr
WcFL2bhbccd4/A+5z/Db6lPIvFk++Bx/djYH26XnezH6GDiaXmp2aJyPqWl7
TqnOIF7vmzV46A8Lwe8OHLuxk/BGyfPcm5c42FK814uqZWK+snXxAOGHF4L5
c37rcxC+3nTjP2cmStxCT80SpzBOXS+f956L7T6uvBXkPEwTKwrtPSh4h1kG
st6R97vAVzRuMQPXrtrWXmzjo3/s0HXaBQ7ud9bx3hYy8cIk44/dQgp33i4M
drfkoNKQI/YziAnlzg6nkLnkvbhce/Kml5y/1yV/7mUaItfdakohc26gssF/
yIWN+kvsz2PBdKhZ2SU3F/MR7OBtYL6IcJRj/r2XnoVYsnzmFaqc+GNmkvbJ
ezx8WvF7iaMBD/r62wuz3hCOenVfplCX8GpmWs96hQJoiu1tWXiFnI9zBGrG
OahSGjc+R/YsvjjO5ON2Cum7U9aXr2Wj1OmH8Jc0HYtsPy6V/Ub6RWlWuP0B
FkRvS7xbsbUAEXcYl+dfJ3xVsHbp9t1s7J8Zet0adGjtW+30mnjW4R8Ww5Mv
2Ph17YzDrzkMSB4Jd13Qwodo2Jvv0vEcqM+5dUVeiQUlsdN5lSQ/OwXrujM7
WDjhPPFQ14sGk+oDnqav+ZgoP1RUm8HG7MTRG0/WMnAmR73Fjfj4/B2Wp16V
c/BfqZh5RRgL13YuoDTWUxDTN1w/CB5OSOeE7XjExWqfLE/faAqMkyYXqA4O
zBZ2r3rykQXvD9reqzeTvpthe3/JIjYyYmf4HBugYWl+6pJdOXxkrf40bzXZ
n1Du2tHNdB6UE9K+0XIpnIztn+4eVIS3H8yUy06VYL1gpGHHJgHO7UgJrdxe
jNB8lSWug6W4tpV/bQ7hsXeDX6IOTy+CYOCizh2bYnDZ4tf+zSM8r7K9PGOA
i7rsEdnnAg7mvOKt3RtAocOU97KAwYbN0oX9Z8wYuKzxAbQePkZFTJd/K+CC
6bfr4X+3OeAe+i/4yzkKmuIDD4ab2Zg4qL5G/hYDO1UWHeojudr2t2GeEcn9
zmTZQT9Pcg7/hbrIRxDe2BK6ZE0dGyu25Yd98Gdg6u0n5+cK+SjU2er91YKD
TS8eHNa/xsQcWWnzYpLzKd4uJ0JliK9KTb+m2kTD18CYF3zCz+G1VyXubic8
ceKyy7x5BQguXfvxNenxhRfX/zMkfRm2/VrFgm00jOxM+ST7nPCz1LLFluFc
/Em8tbBJmYNJp3eMsWMUShtmcq7eYOFWzbmy8uQCTClyXjgrgo+UL5vkbEzI
eXWcv3Zzfhnm+mS/jTgpAOU/YVc7XASjttRU80OlqCgbylY2F2AvQyElJZuD
tKLI/GprFrYrRMc/XUUhdLXs2bx5xbiSJHnj871SHBfXDZpqI4C57Na6vuk8
ZG7JmVmpwIWYoOKqzU0K6/sa/zSqVsInuDsvtaEWbLtme+nvQticDrb2Cm+C
3ZBN48WqDvzW+KphQDzXs6vLxnFLA5pjZUPiL7dj9zalfcKZA2iZtuKXRn4F
Dq2I/R2oX4vmorkHdxcKQdkMOb31LkXOm8ELIlUVKFiWPiYvIoRi7dcNn4g3
vQosX76XeNMv5+i3//emlMUP5y3fQvroMt/tYwgX14azNh2OonApKz3rWisL
XUtfpJ85RUOZ10FNzxQ+BBMeU8wELBzMsy8MuUmDOe1Ozqu3fCg/0D4ecJsN
s2VnZJKr6Sh0/9FYX8vH7wDphVFeHGz0NVvay2DC+l3poSuyFNbuzVz2l3Cp
ai2MfhEufaqnIbxKuNRNsX7YxI6N8LjCO1e86HBz2Ni+vZAPK5ULcr7zOKBv
jpQ1/8FAUZrVh9N/CEddCjj/xKwQwq3hk28aC3H+wadKYQvp2V7J5uFELryU
ur+s3sXBwSTP3TfcKMw+YX+lJL8ExipDmb3SFbi+TPHPRKkA8TOucNSiquGY
G/7pdVAD3IyNEz9u7kdcZEaOIeM74gNNfCfXtEO26vSjzX+I505GFErxqvFI
/eAs1/oGzDCQGGvc0Y/hwda779LqkEUPqVmi3YpPp9caab3rR5X8Ny3p6kbs
53Frn7t1wCTPwdt04QA8pmSOGLzswMhEX/mUL71givxYe/LIAAQHis8ktrRh
5Q/3aMXibjCtWkPqDwzgQ8LdFUrra2Baerb7mXcjnB+NNazZ348gjTSOfWQp
0jX2+13+UYHnUu9TBmeSeYg0Tjy9vhBOCSOrdz0k3D3oYK9aS6FcfpHO1kcc
aD7JnseXJvmtYWXJUiGeVZxVkXSTi1KZQZaBOAdfzlreOHiU8Jv3pcjJbjbc
5jyy3viYgSnydWUKQ3ys47edTvPn4Vu/icrP+Tx0fV5poZNEcibXNXVlPBt7
stebmU7Q0TBP+8GPRj50HYx/fS9hQ5Pydeg+zkCcQEQjkM/HnY0bZj2cz4X4
y4UmQtLbC740jqzdRbw7mFoc2sGDeIGiDe0HD2u3TS1vJl6we32r+m7SI4pL
E/YWzqdDZGfw88GvhBN2m02U2NVgoErF+EJmI8RyouTeHOxHAC166BOnHV++
J9TZ1fXAasqirN1HBzBVyIuTM+vA27GGaV+9e5GroD56/tQAVpU3Gr9wakPU
t+8+r7d3I/hK+AlPwwE8LlIDI+U75s79VT5Drh3WLyt+6f/uh8d6xbxNZnVY
d1i+Zf+rFnzTDjUTTexHJdfwjfTGBgTWMNWm+JP5WaqhlE7219nzpEWKbh3y
Srv7OiJacMBb+ndWXD8+ftl66NynCgzftFY/rFkLv5G1rW+4QnSUP3s/eLUQ
+7dPdGzSLcLPiTjFegGFBAsJz/6NJVAQeSyiE1COzU+NIoNSBNiT8vrO8sdc
VIu8ZdRv5kAh2eG38ASF808PWE76czGP8dU6aYSNKJ6N2ClHCpYj7hN777AQ
ICKnkZhbgOTx2FOZ9/hQ+CJ6TiaJB5EMBftZp3lQHJJll6WROVGr08ydxYZH
tqH3ShYN3tJr2L8y+IgtU95ffoN4zdnFRe49TMI1Jd+EChR6r1v/bCU+FajO
tXtPfKrY6EqDMfGpcyKiW9sLOIjcvPy9iTsLy28eMGgl/Cl3fdft1q3F8O2p
K90lKEVsZgxuugjQcb9jYfmlKpg0tLrbdtQjvOz8Cqs5/fCKErsHWjU2vlH9
mFjcgEc5M8581OlHyuC/LTp3mrDzRYGpVmUH8YaboutJrkrMnz/ff2or7H07
jt/c3gVxO5lbXzYP4JEhNyd7biV+K6Q4WH+pxYqsQKMFtULcpZb9MNFqh31L
yrSk9T245fDy13GrAaxuPrwk1qUK2w6Ntjvn12PtsPLqTrF+7Aow4cd71SNu
X6GO69o2yD5KXLuW14/IJ3kvmFurkat8Ym6QSAO2t+70i1zZj6+r5AXVKRzk
ybpabtJm4Y2rloGpGoXghpWjtho8SFzetY5xlgvTQpdcF9Kz7y91bM68wMWd
9iSF2xQb25rjL8CB5J7qPN87SznobUqt+qvIxOd3rAi+CIWGbjyRogh37rF6
Vcf4httP3v48eZwPFb3i2JAKMgdZaTuyTjNAt0zfd5PigzHdpWs66eWXg1vL
RRtpyDu8ah2L9LKe3ECjXSYXtktTFHjnONCSUWU99aTwRuaW/FtZLtSO9xY9
UGFjY2faLJPdFNye1WdcIDliNiV+X2oPA6F7ikvmEX7ObdtXUNJdhOWTrlVP
tpQisvLoy4j9Aiz5xd0yzaMM226eSPreUIl7Z77e5+8WYqXitQ8XUY22msZn
i2c1wEp9Iu/kqn4kKB/t3VZZjrafe87cbSV5fNccEq+ECEiTaZmQrUDEQauP
qkY1iJ+ZOaT/QYjX0ncXqJI9OjGRJnp1ZxFWntEZe0L26HeMv693khDR3oVn
fpDcfB385lDE3T5se3BbeZ6sANNi9lCz84SwFosrnjpbgNA3dk/3JnfBcFDc
+vNR4iHPD1ZskR7Ag8dVUxbbNiNhfqDuzj2diBoKc29XG8DCzL6GHc08BK2s
8L7aw8PUQL+Lp/IJt3/gTFzz56CPKxv5vJKJCxlL/jtKfOF4vYTHWyc25mW5
qvRcocNIbcu6jCI+jA5qS/0pYyPlUszLU+6Er5ZKzJAj78vGa9+uE4s4cGBu
qBfOZWIyVT57+z8+vl8UnbmM7C371CJzkzHy3nZ/PVP2lELA/Bf/wtew8Nm2
dvHKhnxsWNJSvM+Xj5X3WnYd53NRWPfnsF0b8Zio9K21l0meP06+wnckXBh4
J2hJLBNmDo9WLSa+dkavkjtO/DF7lemv5x4slB4fWa6uTvx9He86c4KHs7T7
ty6vKoT7tY8bZ3LJPHg+ulhQ2QR6SdiRF+MdcA0+d6dShZwPNStOYm43og21
dqpnE/7b+GNJ7LQBHEvhmzlyyPVWFRnPqReCe9+tMOi6ANknq5MmIwTYUb/4
lGK4EGbmc4sdD1J4V7fGpLGjHH0v1N4+HqvG6OYuWtBrIS4b3Z21YWE7QjnU
nwV1mXj6d4+UvBULiXZhif2Eyyh7q6GsjDaYCqxrRuybsHC7QZW1ejccxyJW
qFfwUSqu0b7gXz/cvRe8Pxj2HS1Gcm+/T2nH8ffLV3YP90Nq6dZG9xdFEL/S
2hXxtgRSQb6qZ7YLcLTshdHNbVx0WYspMjzYWH1eqWfBfgqioWKhjs/YSJyy
/4HTTAaWGS0rcWjmY3hL/u7+i2zcfv5v1YdMOnr2usS1VBIP7a7PeezCgtRl
25E9JwrwtWebSmswH549x05vdeNivtrUmx2kV3cuVhmKtKGgsvhYT04aCxln
h0upGTSYzci/7RzHx66QhRfT48i+a87uNv1Dx3bDXEY56eWdhrnLWSHEEyqU
BoeHmLiMe5uNlCh0zzG52WzExYMDb/eqEL6TEKFP5JpRGNP/G+G9qRiJmUrR
Cc2lmLlI3I7hLEC1/uMLO540oGzs4fQHn9uxlNpmypw9gNLdk7dl/bth+OHy
vWsk959751UnjfTD6k3SzPy5hH932x+Zx+sC635cwJBIO4zGN/UoO/Vi357u
x/mvq6HU05NzaF81DH//PSVGuEJLYRlzFuGKBVO2cfrI/Y8LeQ5a/zqhdzN+
bNoYOQd4ZrYsLkGd16nWjlvE9++bJdhW0fEiJtkllXDpgz0Gn1QEQtCr68Sf
ryX3c/bI+YVKPVD/4/T+ezEbxm+2ljCPMbCo7tbGHYRPBrTFXRvC2nDn7FYp
rdPdoFuz1V7vHUDoiL7zYzUOps//udlGhQmjwUtdflPIPP1K/n6AWY69KfSs
mMJqeK/oZ/4h+aKX7371yiqyvz0tR1+K0VE6skHi+Rc+tvrt9NBQ4WJOu4F7
kSYbJr//fukyoHDNfjDZRpOFdo5c8c1/+TBPXmDz0Z+P5XGtPjpf2Gj4F2/k
q8sAP7mgLqOLD28pu+LkWBb0neYWq3wvwLUMhUXPYvi4oS5lR89jIzgsrtwb
DOTqr7gWRX4/RXRpvssEC2vWGu+rSqHh95a7n83TiXd76t/K/cDBhkPbfysY
s7DReM/aLysoNJakZW0pZ8GP67nptzEN5zf0Tt+VRLzAaMWy9YTbrc7cttIl
3D7878Y0TcLtrnaUkc9cFv5Oqs647piPpyLdPTZn+Lg4J1s9VZ2DDx/CVhxf
x8To9WftrtMo3JXY4Vc2ysRCw5Ov/v73DWIzDid0ufGh2clc85P0SPZNbdG8
XgZuya202kh6RNfdrcFRjI24lGxHQzrxkaAH/Q8Ih9Q5XNW+dbQQizQ2zXn8
rxCRlhdLQzspHIyWPj10n+xhZs7sOooOuaXa0zK+87FHMk5q0eFKvNTbscN1
VR1KzkRvq2sT4uf7ieBC4ikxpdyc28RTShJEFbyIpyi/WpEud70DT0Z6iw4m
9EI221Ttp8sAvJ0Nvwy4sFF7y1n0VzAdZp0ta/7/d5WanSJ6tFIhJrfMvdup
1ge3pSF2/cJOvFzxz8xiBembxIwuSyshVJ2/L/Al57PZ4OWGheQ9Rx5Qdb/j
IUR2Pacs7LgQStcvTCs824GcgF/pLRG9MAgUj3R2HYB0ram2wbRy1PXoZIte
rQJD65qdoqcQoy7pfJsmLsrvLXnzgsnBkOYDV0N/4ndHSniaxNvHDNZeeNTA
xoes7zKb7CgcinRpEUkg+XNlMFV+knjZxQWJ6k1kHhblfrazJfPAG3Y9H8nE
pUcy9W3zKFwfXfhpqgsHz/bF9Y8mMTGVtyY8cD6FShetor+b2fgiMfBQaykd
uY2mvbML+LjcZ/7xpjUb9xQCFKM96Hj3Puq4P4/sV1hfwRDxCKt/dwcCpHm4
XnZ2pSnxCMlu921XPSqQ/jbH9SenBjWDy3r++ypEEqP3ntLsDrioBTxIWtaL
nAtFW/efIDxf+arstJCPjutb3rYnktwvnxr0frkQvwOzlCVM28B2E3bbLO+G
7i7vSnGDARQLrlFZvTVwPPPQZPutJjilWt4/79YPO32R1oOra5F9N/xSjLAJ
tU+3pdl69ePX9sqj1oSHfWOCch6TXvX4pnuwg/Dwtcmp+4PNuThPv/7sJTm/
n/vurP9/H5nFWP67SOZhNJAm9y+IjjpuzL2vZB5GxPWGw+s4mHo0SeYK2Vel
Ua0wyY3//zsSXaSQ7NEhmbWGId502G3PFHUke7QEd3Jd/7HwxYUesjWNht3D
13SWfeCj/LZv2s6jbCzj5IkvvkrHfoH68UbCCT5xObe57Vw8LcmMWFvOwa5D
L5TpFynsean6eJ13ITyi7i1TUitC/NbOWvs+Clq3patHzEvANNHes/FJOR4k
Hd09mS6A4uEHBiV65UiPPpTfPa0az+51+epFCjEizerzri9HllbP3v6+asSs
zB/7j3DX9fpbc+zT6yBcbKK9eksr3psfszMj/mvIb92yNrwOQw/sXr6b3oqS
c9+UdF71Y/23uN8jZyqR8vN2R6VpHaLqJDRudQkR6+Qpc+V5IWa1v9v85HYR
nr5Z7mT0i4ItvVBW0qgISXIT8ha9xTg6NPW4tqoAttG2924OcXDYbsGG4DIW
LC9F6bZvofCnYHrCBU821P+6W2yKo2PgZuQi3zI+IvZELZkU48DHxFIvspMB
8/5s3df/8dHnbuNvpEDeS2VXyD4xJrL0UuOOTpL5LDnbdXITF2JVYgZvHdjw
1Ms/qraPQlKdfFbpUh6YL5v8/O25qD+w2px3h/D2/e698iweXKwtwjdm8BDQ
c7KhKptCVfKH1vlXK6AZ50gf6qxBpqHd4y8FQuhOcQ5+1VOD4ZUbvZ8HN+Gm
5QyYkDlcdTKGdsqqCfqdTy/ZZ3SAK3JWX0NpAHrrlwY1Uo1YPKfC9eOFDnyN
/3tkpdwALu23K+8+0IFKZij7BvFZVZ7H6nPEZy+eWXq0/vN3nJLarOm8lHDL
eFHejf/6ccJsmmexWBkWP7u/4Ny5Snw0WmtTuVII9/suVbe5JC/+Ps2IusjC
k9ucxFENCo67t1wfjmJDfsWMq3l9dOgEpb0/TfJzmXwA69UcLs4GzZxnNpuN
lugMpUhdCh4WZ7htEhy0F8rn/uhnoPXZifxJktvLbX9tevGXgwoz84YTAhYW
rWy08tGhMFmwsU/OmAvvJw3uLXfZ+CzXO+WwOckB9fB1y65ysX+HV3z0JBvt
g35tlUcoKAakXddczEPHt9ahDxZc6H9OiQ0JI9wS4P11pU4p7l0ojRF9VIGx
o5OffgwJQJ//xl74sRncr/bU8kud0Mkz+r5x1QCKDi/wFnfvQGdA8qz9ob14
z3i8xMVtAOY/auS17zQg+tMLwft37WAYSR2cS3gmPs6ydNDzOyIovdW+wjYs
CDuu+n6gHw/2V8X1V1VgwJo2xDpWi4l7Q8nWJSSv5v8+vE+/EOGtF9760Qrh
Yq8+K6KRgvzGAImon1yY3+xdrjDGQeiLxiOdVymExwhW2zHZiLXP1M02Z+B7
17Ozgh6SayafJDyaWYjRsG2c5krDmsxL9KZXhN+my1TPv0B8TDzoyRYeEy33
ru5VX0jho9PhTdYP2JAb8Lo8MkhHbFrXcrsG0qdp2qte3mDhkaDUUfVlAfI6
LkRJR/DhcCt/Q6ImB2UKxgO7dJkIP74zL2oG8UrH5WkFGoV4cOs9K+peIV6H
HbByraHQM1j50PRYIaLOZNx2nFaE2jnL20S7KPx0QuyMWeWIaNS1QVgVfJMX
ncU5IXTGwxUWitaji+dvaZ7TCvHCh18lcvrxIT/Kft3WIugdnTejhleMAKHN
gdPKAmjslNEq3FaIa/TSaMP3hfi5SuH1aD0F2YGHhmfYhJcmlxdJPeDAKTT8
hLE3ham60b4fsnmweBpjU/uIhy9XldLOZlLoGn0+MXCEi+EnR+L0CTfNWTR8
fP9hCvG2ryZWFHExNTxBTeEpB54hgeeiz1M4EiG6b+N3NnTuh30UCSCe9atf
K570ytw+5Z3abBamm7e5fdpMwz/d/MfBzwhX32a7z3ViIVVi6/xn9gWwuDx2
8VkQH2dM+4ptc1ioeuZ8wkmBcPginwfTEvkQtXSfF/KGh7GQK5lfLvIQFbvk
UtQHCokzs6XlHnHw8c3f2OfSLGROvWv0RYXC5Xfc+CN+RagQeX5W3qwETc5v
jFPXCcAN8vneQDxtJN9ZcmcqCxL2/s6xmsQrxVJ836TwsGjZ0FSuDw+zci9b
S5LrK+VM2ygM4sBqF390Rj8TIxLLpdiKpK9HtcPKCafNil6aIOKUjyNxHne8
CIf0sA92J8ST/hD/WLFzEQvSq2afHltC9vRFwYNmGy78zMtqj6SxISldrJNs
SaGo5WmbyCALX1dIBx25Q4PgzYec1+/4eGIjIuZE9vONZ7TRhSdsnBA1THpM
+lHh6fEaK2c2xHJ/m3tdp8P46ZSuFaQf07quFTRrcFD484w2tYGJ8eMb2bmE
D9+N+2gfs+FAXTvjiEs4E2Jrz/6NJxwido0W7/yTjRshAb7szwxoSsykif3k
w3r3jre8Bha20F+3uR+lIWFNY8Iysi9Nu81L7pDeNbw+mCqoL8CXhVV7Ywkn
ax2peHOQzcFTS6v01gsshMcdnmlPcm95VOFG/hQehKv/6/SS4ULyo0VXSCA5
t4rMJSe/sqEd/WDl6C4G4k/3Dc3o5uP14cDe6HVsrFcYpB4uoEMlwa5h3zc+
5t+o3KFBOMxtu4qi6TkW7pi8zGMRX9Z6tK1LYz6PeAfbfLo2F6u7Tkn/F0Ku
P/+slOkPHnZa/ty+RKoQX9XPD3UzKdzeo3xfMZeFkR1LZ4wr0nD5WObWLWSu
ZERF9xnqcbAt9vXnFXZM2G145j1zFgWDolWKJbdZyJmT03koswAmpk9uzrzH
h4HEjv0jZWwcX+yy3M6dgeeq23oWUHxwgxMC6ojvzzyxec+fx6QH5z2DAvH9
b7Sx4jg3sheWJ94ww+kwWi9c0lLCx/5z+Dl8gA3dlKF0R1s6Qst2HVPl8CFb
9vPDfSs2bM9bzT7vRscfWcv0H1w+0l+Kxm7gcTDfeJHm70tkzgMeey4jHhYt
ePZ6bQobp2hLnjQsYCDHy0J8WysfuU4XTRaNs7B6WC3szwsaIsPCXT+mkb2z
Yg5wjcjzzu9S/OvGRJBfxK1ScZJXQt3BRyQv/HNjZm57VoS+7pM9B8YouO8e
EdGI4WLLgZL4E2S+lk3ZuLjuOIXI+hTFOXYcROm4aQnuMWH5WXKqFPHUQadW
9cADHDyyy05w8yfnICeVQc2h8Exp2r8UwrEvh7GjnXBs88P/TAMJx9bVmUy7
fY6DpgMrOjJoTHT4XBjRlCXelMaanrGLDfceXwPtnXQEbdm++SaDj69uYx4H
q1gQvafVFGFOg1NR4nTFZD72vT+lNvyeDSVufbW8KgPZCcr9xW18SNyocbhU
zUG5ecz9kfssbDabG7B1A0VygT81OpTweceoO0X8qS9L4ersRRRytlTckOzi
wfXYlpbJnzwsefDObQ+NwoXgiJcyMYUQ6/v9bcnpIngFhy5N/EHyPGbT6O8X
RRhuuZST964E0d/HXsdsFyAkVVluzUay53MWTMgq0vFw/M4bEeJBx6bMkGWU
ceDMcVoqJPO1+MOme4PrKIiEK1yZ/YfwUkLKROMMLvh6Z3+8uk6hfMjr917C
+T55M28pkXn/trggQYVwfm6L1K7Q1WxMBAf5tIvTofT93xkB8eI7xtZSA6s5
uN9qN/FuDROmqRuD+6dSiLszo6wzgAWTWvOraokFkHFyLZ4Tzkf8zQ0JTDJP
wctWmgU+LMBGH+v7G++S/NmzbDGdcEmWGXeTP4+G3OeLvwZ+4sN5o8GsGRVs
/D5cWvzUgwG2U16SE5n/lTK7j80gz5uiNqOZrUBHYluJ4yjZ3+tNdpLNezmw
Vr9U4XqaCfdBz5ojsykEKol49hNeeiOstT5Bvl/TcXeFFJln/7ZbGh4krwZC
Tdx9SV5x7tSdeULySkHx/Zqwk2TPc+ZrpJezYaj/c2W/DYW1po2htZIc9M/l
N2//yYB3u1RKyR/iX29UK5Jk2ciNqYuMbaNBzLHu1eXPZC+cZYUvL3MRcMn5
hvF/bKj+eduyjHBR1hG57cc+8XBxM39HegTpQZ2BrN2fiKdkM0Wrg1jYpe6S
2/muAD/XiJX8IL2vHfAx4RCNA4sZW1v1TpFzTQzg/P//gVwMqZWY6GPBSeON
X8xVGtpzQv5Nf0v2dyCufh+P7CO3SFZXh4Yugc+Aw3M+Vj9/SKMFsTFU+Nn6
UzEdTXJIrqohnvIwX0fqCgfs8Zv/aTaQPN/4Q9JOnoLmtqgRDukLFdF3waLh
JJ+f71/QRvpiqvDQiPgfci6rL40KWAxkNCxf0vCLeHd6QIXVOS76hJlvdNvZ
aGArysy1Jz2u6L69+Djh75jo8FwuG1rbQ8x7rcl5+n3eoe1F5vZG/qu1L+i4
5zGWfqWc5L+y+uVTU4rhkaIna+pdisnAfEkFSwG69IpXbdMpRNI2N89D6YXo
sI1aYved9K+CQCwsi4OCJNdWy0MsvOvYlz1nFYWz1R7sAD0uTr74rP7wEhu/
jFdk/jUl+TCr68DiCTb2ZvVv0OYyENJp/FBtlI+13ZJRL4iXeWS/ndpG9kYt
7K5oNvGyVL5kI/cvG+OhXqfyixiQSQ7kPSa/v6W+VPgigw0325JTm9Yy0GVy
aNy2g49kI6Ot9ldZmFks66D2pAArehPfa5D5f3V8vCAtiwVhQeu0TBkauiVt
ZPYmkLk1fc576MCFy8aZx/Z9ZuMJp5f72oqCfpWF4ijhvfpHH/P+Et5jbfb7
8obw3vmIxu51asVI00vVN80vxaFF1/VaHAVguUYU+Zvy4Cat83jpZy4Otmj1
nnlEznnmQ8oVhP/ePvo7p64YDiVPVqmoCJC6lPvIVLkJh8zurtlwvwMGIgiU
USD8XD6wv1esDn5H29O6trdARkJ59PT9fmR7KHQskSpH039B6pfiq6Bsvu7A
+wtCzPMN/fuBwYP8Fhk57XTy/Qcbv50jPjUvLOdHywoe9vRzqhXJ+w/madp1
36WwF2JPx9tYqLRqyIjypOFJ/LhLTQofhSbx174pkT25fONHZD8NhlomMity
+AgNVdspRryCVtKqaFjMQORsJ7m35PwncrzSwx6y4Ss2o+naMB1jH1uV0gg/
q9Ck/3Mmvda+S/7mHNJrgzn3nLtIr03J2px4ezcH02UlM0ePMKEV7vEimfTv
LtkXppokh+8OLx0w/kU4Qr5zrQXJ4fGBDYEWzYXQm/DiPRcthqtS4cjhGQKU
3RA7Oi5dCf2L5TG7mbXQ/7EYzbVChFntvSNZWA+3O42vDc+24cKqkFkatf34
e2nRlNOJzUi2YaafONMJpZgRjufKARw4NHHi3ZQOfC6t3Vsp34ukNYffPDpO
fGfjzL8vvBtwkt998GFiO0wMaHpLxQeQpBqfGL2rHP63ay3vzqjGRM9Ry1Ti
+58a2iI9fAqBWaYP/64pgk+76gbwKSwzK09lZ3LQe/rqy08WLNxdMKpQt5JC
nu6hZslpXKztYGQMjrJg/utu4Y8dJE/Wrv1Xu44LmSteOtLk/Lz6/kWuMSZe
/3hHofN1Dv7e2rrEuZMJh+jhoVsKxCPEPItfcNgYnVZ26aM1A6rpK8bLe8l7
5MRve0Cu87a3N/62JcnvpYnt8uQ65ekrjvn94qJUTidm2jgHqttf6Kteo8Be
6rPbzL4ETmJbLDTflKMnZUFQZYYAwUt5RfGyLdizjOGw/1MnktTfnxKqD0D8
Z5ogSKsDLTciitytevHbYFVu2MkB3Ne/WjqroQ5t/Qy1nz6tuLbMo+/6x37c
uHDpU9WC77hqsW6a9es27GEMbDrT3o+zsZ7HeEuqsc2y1tSl6TtOCJ6vElHr
h+4+mnnemWJ8/tE++5NDGbSbfs/Z6i3AjVjRqK8zSzBi/qrVxqwcU3omsnPj
BTB1/RakR7hFyWa/VhThlterruQ0EW6xXX3rv8wIwuej8qcqp7DQt9LRyEuZ
wue6bK11xCO+2TxmVhGPOPKr/hGdeETw9Jeuo6s4yB0V+5K4iokT3GU9r0mf
WjUsCH1/kIMem2XXdt0g3LIqp1ViLjlPmxdi6505ZD9bzBY+Y+L+qdVLps8n
eauyoESllYvCZ1GbQws5CJRsDxQjOaY7p6ZUnleGXz9OLSjYUQVtxzmxhxyE
+GsRy9hsVA2d+JMLWTINqDm6rjpidT+09jt5zJ7SiJvDjm2vBttx40TM91Pz
BvDDTy419ForbOXfWRYGdmFWwNMzXtsGEPX4oHrj3hpYv6/Ydiq2ESfKS/f9
MyPzL7Jm14v5tfD0Ntbo5jZBoUDMr8azHyvVbtkazC2CTqPE+mTPYpzXLA7N
nC/AxVbfmPkLeMhmJW1YvYOLZV1SBxm3iHdLiimf3cfFmAr7w+dINlb/bs/+
ZE4h/Uii9INzbCDj/ab6Z3Q8vrU/zZz0yBVp0YRi4uOXT78XqyA+njyuofKb
+MWzhy5fdxAeLv/q+bzZmo5FIdJ9Q2w+KmsmJtYf5aLL3rZi6Bvhxwlni2Ti
oT6LNBi9hJP6Ujt2j02wEPL6h0H2Tgo6535l7SP9EiwS8X416Zc5b38wBkm/
pDyeqhZ0tgSH5J3XvMsvh27v1kmrHAEmLvxVsXStxKvTwftq9erwI2i+jm6n
EL/7DZuzfCow9yqz3rquBvZhHx4E5AuR0bLNatpJIbwfU2OLdwqh5S7oCJnD
h3heJf28Ch+JrbPPtBgIcSk2qaExRog9ktXKm0+24+1o8N6pp3qw05/fsMl2
ALPbW3b8sS6D/Rq9S8/YlSgWyOh/Jtdj0l4XfnnCQYenhWPbUhZOq2jfq1Sl
QJ+Z4RTjyQbdU6PCJ46OSeYw72oZydv4u5HqfWwctZAVrU5ggDZ3ikbGEB+P
R1OWGRhwMf/Rq+j4QDbU/QX3Z5gRjlo6fE/iGhvNbcZJMQV0tDQyBvWr+bBY
4nvxDeGEy/T/PIcJJ8jqywqXEU6wd7GOUjjOwfLEW/F7XzFRL+H5XxmZ5/qJ
edrvzbh4GbHY9nscG+fVO/mqxE+nhR1D971KLM6a1Pl1vQ5Z24963OcLcVa0
TnpaTgdK1yY89CvqRd7z26MJ9gNQZY0suMTnI0M18sCjBCG+Xtfr3bNSCNX5
489s9TsxLlaz3/4HA+dOdYovIzn6dMqOutNDQlyY6hS8hHDkJGvqBo3+brzr
PmOh96AN6qMle5b6d+Pf7nK1s8YD8JU8JT3zSRm0Auw75khVoacwKaHOXIj4
Zc3p88nzLi9K7k1rY2OLWof/HzsKXUdwNDKejS+WjJTVf+m4bCTskWjio2Ln
q5UjS9m4KSp81DZBA9+2l6mcx0fH8cT7J3vYiDJLzVsQy8DfGxpiW8j5uznc
Lzh6mw0pmxBtt2o63B2+zqqo5QPjT19tCGBjodIe5+df6FBuuThBr+Ijxfn+
O/Z9Dn5ms5gXxFm4uW+6V/hiCpTtlpmMXaTHXxvFI5GLfTMPyeyIoeCgdjvL
OLcSzRWnHpd/q0NKwvn10YNC7DapGvyQ0IGCoWnR/Z/IOYebP0p3Ijk8prh2
EyVEoFpn/sDTPtTWy96oO9yFrohOtXN76hC2wHlhQlwLmq5EKLTG9+ONZPHb
LW+rUf12Xt6Ztw3QOzX7ksfWfkTeKLsgF1cBpRqr3BVza1FdbxPfwxRCmH4g
+6FcMS5JZBwISyrF3XdTO07bCcDe4bbtEeFAj2cqfecIB66ff8tCknDg8cno
VveDLEzIPBll6RXgNndCZO0NwgkbpyZ2SrLB+Xp+s1M1DbOnpbtQmXwEbPOo
DP3JxtiyDX2K2QwIC/PzpH/yERQiby1XwILsAv+fH1cST3HpLGh4QvLk7l1e
/DoOhh2yFZ9uZiLJL6dWczrJ5+OpnVLaLNRnj1fcnlGAneVBF85e5OPNtnVr
TxF/D1pBqSwg/j69bM+7CeKz/edCT49NluFrfcDnPz5VmJybqyHuIcTYkS8b
tmQ0w/11xDGLS53Q9X2ZunnVALxuq+rlNAuRcjKh8zjJxycPeNysqB6klQ+q
FmT24A/LuWXSoBLdk7/fFdZVYsp2f341eW+mOpWvlxDPcbg27Z7PcDdSDxg0
7tjQgdzNIxH2Zr04sW00bTnpU28JC2WdU6X4Wqh7TLywArk635yK/wpQrin/
frMsDy1Di3OjwYVgLVU6/zbxmtxNM2JL2eipaPS74spA+Wr/xM9k33I6Yg5M
arNhPL7gqe8KOt49Uf4fRecdT1Ufx3HKiooQitCSrMooDX2kKKOhgRZCERqI
kFRSqRQKWUkaKEWlkhL3utPee+97uEpJizy/59/bedU55/f9fj7vd8/T1XSv
kIcT2laTOtoc0Ht1dp7cxUJEyr4eL3MKtirfqSY5NszmPKqfJsiAiM/0Sa9J
Hiy43cPtMiw4bQ9f/K6ZhsmLa6ry3vEw201k4IoIG6mFks272ovgxGhLnvhF
/Mu6/rdiFhcOKz0EAkK5MKUNF1S/piBcPs9t9udqbFskeCyI0QC12MCji8me
BwfO3rG3pQtVovBv4fdjrmCc4kcnwhuldKki0rfbObbGbS+G8bRxzutxmWHs
rB75JPmM9HbFD/um7mFoLm2YnvFiCFvNNwvnqQ7g+yz+rVvHhnDzouL54kw+
MjT9JNaJtWP13vL5szN70Lo3pNKJ8IzNz6y/wVOlyDTVv3xvayWinx72CEwY
wp2y2FilOyT3dKfX9aix8ath7RcBwhVupalq015wIGTRXSjuyEZOwDvJ/Z4U
OvWe+ywl+55vYXYmjOx7GNM/rYDse/YkNWf5LRbK42Y8PtVKB7W8R6OpgYcV
b7Sd0i4Qr1mkH/KpgI5DDQViy0k+s4Pl0opusGDyPszAroGOpXl/nq8i1+9y
+Br+hZzT6nPjnmcP0TFdR+eQK5sHR9m3+7XLi/FZnL/7TH8Jog3itxoIDmGt
zdYgj73F6C2IO/mppxjUZzOj8Q4Kj2LWZ914VwfXQyG6yza24uMpmy9Lj/BR
Ge16bBu/Fn6PnNV/zG6B47BTgtFmPqQ3b1JNr+9EtHl16B96H3pnLDcw3kn4
Obrywk7TWgh4brk+OKcZ3b4JUVsJt9wLOG4ub1eLaP+5Xno6zVDb4iYkrc3H
yxJXaX5cCYI0vn7fElOG2suxzCjDIUg8lBHbv6AEa8M5F17eLsWIStXpGrkh
OE1XfZqnzIJx8YZszigN6R3xta+Ij8Q6P78mP8JG7J8tUfbFTJwU/ZO5xpDC
V37O0a+9LKjm55mNxRahTChHvOoLD5aNmwIjGCyEDIa7LttdhIrpKz787udB
9vU3gyhJDq6FSwtfnMOC0UbN9IObCL9dPV8vWc/B+Y2aZ83ek36+nMy4fZbM
7e132TTrYgjMrsqRaS/G0LNH0hvI+8zLzku1/lyFHJmMWYab68F5fDVmUfEw
4fPvzeutq8E/kP34pmoDpJS/h//sGMb7rSY5O5614KGK2lT2rm4s3fJ++PPc
EcitFzi8cKgJ1xYY3p1u0YUvFnofFwqOwG5I0tbwbivimMJua+q7EXQro95b
eQT+L3Zs2idXC7FL2VKLS5oQY9Bw2moxH7QnXVU3lpcj/MtKRYRW4VrV/IOt
Q4R/Uk1fbjvPxvyNA5xnzQw4XQ3Td59HevDFnYoLuhyYBIZ2fjjIQl7UrLN9
xBfehJt/oT0kvHFwSbGeWBFex88e9W/jYVtTwpyyjyzYuS6JvoEieG+ffiKm
l4ecqS9tXSRPhDojjlHWLIhnan1MJXkSVDtYNyHPwZY51GkX0quW6f82pW+m
8EpmtcYCQy5Uj7MvPbhGft2ynbn3DoVLLw5JXdPk4E5q+xWeFdmDEcNF/7aR
PV/hr1J6sAo3+0P/lrysg63B58Tgj8NQvO/U8rymDSyJkBn8Wz1wttec56kx
gtstQVnLVnTB8uKXJ97q/bi9YZ9J274RlErw5D7pNSMhMcJvLKALldsnfhaI
jsB1vpC8z7wOsC83+GVv68W2Y+t3xa0egeeq3zv82Q1wFN0t+vdAB9YkDFwt
yOJDZ4bn+QyLEuj3bP7xc6QUe3yCJ3QXD0HM38DKfQsXg355AkUPOTD6EZ2W
TXr87atdi7GCBfWkrswuWTpEDJec0v/Mw4wR7TssQQ4YGQs6Vo0xUdUWkHCP
+GB5t7bauatsnF/9N9dghIFRXss8viIFX7PC3J8WLNSLq01ydtIR4XRQh8Uk
OVwsPedlFRPH9wlfk9pBwyoDajztMQ/z82X/Gt3kgP37oLClAvGhyNh8VWcK
+ncaltxM4qLmdW6z8GEuZooO/yp8QXienptuac5FjsXNjwszOdgXP7tU+B7x
8dICKXmvGjRct5ipV92IGcMRG0jmwHPO6yc1Ci2w7ZJQt5jsAsXTstkpNYKT
66qvTO5qwMrE523n09shb750+5JkPlQ06+rGE+sgy7bZsECuFd82/WjTPczH
8pwPDwtky/Hjh1DUspNViORubNDpJ3N7e5Xo1kclMJYKKdr8vAy/VKYfOLp+
CGGeb+yyTIgvJNrvVya5Wxhu0LFrJ4XgLpt2r38suFwtDFcrK0KHeckX9jgP
uScMT7+NZ8JZe4fUooZCHDS/cc4hhoerb4JTbuuS3FC+FUgp0tG3Z3ajYgEP
b1umSzxczsIGwb28UTE6Zm/uoD3/RLjuG2eaShkTb6VfZjluoWH90CfL4494
2PHUotGTT3jvSIzXRHoRQl+f3bDoGw/2KbqmbiPFsHXw8/mqUYq1rm2G08SH
8FlB+2Y/i4uHC5IzRN5z0aQ/VGr9gUJg5fZe6hgH4vndzxVLyHOtvXbPYD8F
x/fvIhJ+lMAmdThU90A51NL85nVaD0H0n+VOU61ipFZmPvW8XQwhz6MFU7UU
HILKZ+pGcCCbueL6K1U2tn37KmfgQnw2OHBuYAQXbo+HZphs4uJ1dOS9FaRH
T2995XNZgIPCmEXml0eZyEkacACZw0bOd8cs0vvJbmxFa9L79fkpdS9I76/P
+7VW6xUHCnF7RHrdCM+66qoHnaCgIa0WilEWwkJm/1N8VYRjZTir/Z0HD5nB
VU6ibChnVI0u6SyCuncW0/A3D9GY55BOfFLJUUm8vYeOHZJ/HpY18vD6sWeZ
QD4LpxR/+SuYFKFwhvIZHskZzs70KJf75P61s5pr7LkoNdpuO0HmtiLk+GsN
QxYEChO/1hHOmTrN/vmIcI6IOJ25nOT1qyevV3iKleLY4tq8O8JD+L2p0k7+
KhcJ9+2u79Lmwm9QJ/RBGoWiCzk64mDB2qP//unVdJhHlhwLpfOgtCghKGsG
yTfe7VsCwizMkL18uRAU8suvJfycyUJgXmqFeCkNmw1Pb2zMIfOgJDb5jEd4
eEOY1C/CraovXE9OW0Phsf2GQ5IVXCTzRFQPc7hIrPukHv6RwpNH/+SnJTJh
OvqG19tUiIT0d7vyyHz+u+ohdWYJB4erbjp1GbFAqzRNldxKIde6ddj+Kgs9
J9x2Tiun44BvSsS/Oh5kRi1pVrHEc+KDNFq+0HEtoU7Erpl46wNl5Tv5bGy6
sD17izMTrbPX//ypQaH10Y48FxsW3BzSNkq50bHr2fq2//++7u2xDzO/9TIx
NqvDTuAsDaV6nelUBsl5tcWqWa1MhA3Uu3kfpeFzjoJWBvF6C7eXDi76bPx7
VDuHpBm82oJGQ4TJHIrNoLYs/f+/g2z98ESFgWp7Xs0RQQqzxXc4KRJvqj10
+1V1DR35tl3V+cSbuuOCS7uaWTgqb3Qv5lIRtA15M6T5pMdlnibHeXOgOm/A
Z7iHhbldUd+OEm/9Oy8tL4tLevrhOoPp55lYsVylw0yHIl4TYyHBZ+NxzIm4
JRwm0uMenxwh73/BQ6/8sEA2eo1fCtTUMjDzaPdkhgLpO8EQl9pINrINm4T0
hJgQsfQLKlSm0Pdl0dm/H5nY6fbwww8VGl4e7zL5mMxDWsv0RrdvTJjl3d+X
dJeGASRX3XvBQ+GyDePcw+T9R75WZp+lQ3btxSpeMfncv5n7spX0pvPqRcev
FOEzo50XQZ5rSn5tkAS5ftu54iO6fnRMSLSVvyXXX1hp8OgEyZPGyULVfyRP
ors6fP7Pk4jDAkueRnIw86WYDmcxGxY7crITyF6ftD0doExxoWt+1qZVsBjf
sj49/EKnEO5rkszNKIb78blJC+NLYMheGmv6k0Kb8xfeqgQWNG5cnFr4i/y5
i4a2u7Xw4LBcVe2odDFGwjO1vGyLMehvOzVSRuG2kpzRgmwuQtJynyaSvZGl
CU8pvKGgy81tvf6XA+9FDy4PipCTV1nuU3yJgmDnE6U6URaWm8tlL6TR4FZp
ZO31hocy/Y+L4hXIvqtdekHrpUH7w88twrk8PBWNEl/fQfp+/dDcmhtFaEj3
mm4yQvI5+efP5qPk/Ujvm6TC6Nis9itzQRkPPjJLl3F/MGExt72Tk0DDotvm
1Zdf8tC76edcWjELDnPc7+9yKIKCWveLZ4PENyNfBWu0sFGnrXtxWSoT6+Rr
cmfqUUjVk7ia9puFha2qeb/oRdBPNJAN+MGDpsb3q4KSXOwMzFUzW8lBeCtr
k+I1ChkHIndISHFgcdbK97I08ab4vn9BhBvFfc1+z9Lk4t7YnYwODw6uf146
UHSbAit1+vuDTUxcpQ+ZHrGnQXfTrFeFT3l4ELTM/cVGNlZ0SnxN3cfAvgWX
BqzFKCSf39xBLeVi/XXTjT8cObidZl1x6BbJ58sHt+17yMXs7FVGeq5ceG9T
YElmUTDPFCk8H8KEwYuUi6VPCtF//vl1sQgeejbVGMitY0Pdcgmny5IBAcm8
aXNEKSis0TV9EMNEdluLvE95IWaoPajeFE3yasvCt8OPmbD59HHRz5FCqGct
CD4Vx8OB4oevxTxZkAxX/CERS95/3eU7ZeU8SLDSxSM92Cg1oISmv2Xg5Fu2
711ZCtUDWqybWizsOymTvESSDh3ao7Sz+TwICTjs+ryBDQ16Be+qNQO8Parv
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
3XrCE6I2IqYsktUEwYD/S7ngDvzK3DPqWj+ILo0V127kc5C++J3fEOGFUKMj
xQsX05BvrdJN6eDgfE2kb8lzNuT3Su24QHJJ5sfUA5uyO2BsvKdzwo1epJ6f
es7HXoQZiVN7xhNKsepGIivCrwymatM+RQ/RWB6daVHwkwcZ3yemcaqlUGwL
fPjvfSeZ+0cMm2N4mJhldLxcl4fzz9wvXnpMI3DB4aTFS7gYqP0xaYE9BWrj
WGePDQ3j7w1rnmXyUGfoeMyW/J0VKxp1dF4RXnKR5t6x4OCl9KeI8R0sqFbN
H/aTJhy+U2znJsKZI32zeKzdJdA58+DxR7LfbX7NbAxeREGYXTR2SoqBSxWV
0XcL+AhaNi3I154Nk8xl7g3Li1FbPPmJRTQfx34qWHoTXmrq39OSQZcgM7ni
LYfwksXQX+8pP8uwIfOyjfj2SlzIl56Q5yRA1k/++UKtUiz/tvWuXFQphia6
iuaQPknQnPzriz+Fbanesa7xDKQdkln1ooKPhUFuv251sZFsvGOHZGgJFCwf
K61/Sn6fwcJnrakU2A+VvErlmBgVu5zp9JkPv+/tmkkvePgzze7yUVK/4tU3
VH+QOpzO4Ro/Ivti9YC0VKU2C0v1jGw3kn1RbDYpPtaGwqetM17fsmPAIo5R
NJvNh5edPWN0OeHh6OWaRR4UMjS3SktuoDHeFMt4m0IhWOPLir+TmJjvOWah
T7iusUp/1XN1DvbUz7pzWp6FjpLqGQ4kh301lWfmTeaitNtB4fVf4vHCa/u+
mhJPEUuvmjyTi4DMdY8OzaPg5rLxT4Yl4b3ob+ddORwscCjvlIxiIyWhcuyh
HqmPqramH/GvczXyiu7Ev/7bPmLoQfzrQfxVu03JXES19K/UW8WB6z7fmt/E
1yy2WLcz0ijYr25Iez2N7BF9QUUCqY+askuOlhIHAyLb6NkjTGh7Bv7ZS7y+
Uv+jfU0Y4ZmsDfZHJxOeqSnVefiQzMsbwQ+vfi6yDG5bKrZxIKrTgu1RGoN/
f2oGdXPhrD5j4pM6Djo2NQYaHqFR6DhdcXwrhaSN4obb9jAgFywvLk/2eE/E
kElOMoUPC8drpv9moPhc2RvrVj6UazSKZEm/frSZBDcN4t8fdzjkkFz6kX0o
yIDFxua0K6oBBiW48X3qypEUPmwPHnarXVsBIUd3atX5alQnlKiceCaA6o6Y
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
HRK/uRyElMi8O3yEjbGL+/dPX0pD8OxnpbxiKbKK7Bveby1Ff1Lvy8YKGrF5
spaSZq2Yvs91D1OpC8XRzk6UggizJ7CFHfWNaPqTM/AipB1iPaNPu18OQqb1
+vn++/WwGJBqlFVrg2OiIZO7YxA2JYn38rdx8SpY58rPTOrf5wE8FxdS50u/
KLFvFC7ZXk1784qJIKWY/3y+8xFn9KvogSqFSWaraCV+CaoLOMFXiYfuXWdy
vbWIg2cjDXmaAWxYvDD9eIPkUkd4n1RuDBcaH+cqniVzv7uTkXDXm0ap8s7q
KQkV6J4em7+4sxp+Hs/ffisRwJTVkZy/RIClC7f5yucIoX3gl7QXTUPaUgeL
t/UhY0ujyk0uDZ3j6gd8agfR8lEjP+pcOwRJzzW3nutBLeOLbaGxCGcSLVr2
elZAbrNvXlhmNTKvKPnvzhVgZ9+FVbHEI+i+mV71xCOOPl4wo5R4RJdSel3j
bwp3p8ftm1PExNUnEw+O/iB+Xa6yLq2VcKNbpa/uIzbWNazD0hU01hs9Xtsh
TqFrU3p08psSOO2f0Kzyivhsa2L7pViyL57kJZ8YYuFbZKivEdnXDUu1LK2W
cqGos+nw+80UhhuWJH8gfXsseUhx/HMt8nz9F6v9akSKStYpqZ9CPFn+IHhW
cCfpn2Mzt+zrw8exJL0gNxHKzdsrD5M9eU7KpaVTg8bxqJfi6yX7cJpW73ac
2Yk7knP7LOT6kLqpYYuOswgKWdF/R9dU43jkmiXrv9chYfIr8bE4IebXTFzn
48TFqp5GJTfCcSkr9dyct9B4tHtUMyeYwrIJvbMibzDwqlM0e4zMhfXWhYaT
O8i5MlYZHc5k47qd3mYvQxpGL1MPeF4iXi+vNmlCOwPyUumpek18PHl4h3ly
iMLRLIuycy+YcE43fzxCOJNxzUz6bSsPl5ftmGjezcM27QSmWBGN8JlwNzld
i5WGVyZ9DmpEVerspF39Qjh+NPMz3tKFLRxzR+eD/XDxEOvMDhKhRq7/nIRA
CJUlutmey2jMf9xROE29D1NyYwLPLOqAj72BX+RYDwzNG3ocLEQorNF+LXG6
EuZJ79QdumuQKdrXbSchhOHPUO7jQi62TXqhdSGGA7enjXcXHyC8wfZ8H1FM
ob9nYn2ILROXYpaptJI8vzXDpCKsn8K6I4Z7N9xh4pAHIy96iOy1PJ0bm8k+
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
KCUlKo7My86ljzgzOZBiqpTo+9L4P0+h7Jw=
      "], VertexNormals -> CompressedData["
1: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
hX721CdzlsDZTztFnbc4Rg72c123w7wZo+2qM/GQEpiqb0P47Luy/KCqwhEV
bRU+HWhKBGeNvGuMBE/8PjXGU5kJT0K/HX3Isxu+1v1Mm/5NeBP8Vmx8Sgvv
rhtZF5v1GN8sMf4784v0a342H357eIHkfkGZ0KIsfKbFXnGN6G2ddd6yR9Zb
w2OePlavy3H4q8pA7CWxn3ch15fxfDBGUFiXXFqc4ffBu8L0ZJ//OIqiKpJj
0bVuI290YiTIqaQbZRM/Ttsac9ikJwIrf/C9hXgNPPx08PpJYsfqHefG+Q9e
4N5XJifq74LI5Hnclti5ZpYU2tWkhdWu7XZW2u4Y+Shm63Mqz8cWFA17g0FE
PCKQI9QXZ+44HqkleYNdhqul7bgF8C14xO+L8cVzyl1KLmR9uIPQhZ+7HFAb
7U3ch+/AyoM/olS9LSehk25J64YG4cU+K94u8OLB8uj/z0unmeqEnTUuSSUc
VcjVwqN/Q25+I/h81tCBhO8B8DDh+H0fXm9MfmrjSp1fnd8Z95jdKQF1xOpT
xex1cVOwsKwl+a44q+PDVpcCcfT2F1lb9nhs4DLQpM7lXr74vPGlrg/Mbi0q
VhiPRDXL9emHyf63DPtfsf5lDdffse4doo1Ci4q/mz0IvvY11Ffb0AYjRJaV
n+8IwUUhgVpqv9Y4Nje6WBKHwuq7HiulKID3yrY7VL9wZgQcmCopwOdJMo06
V+pRTIJ9wOopBT6N+uvRM3gAQ/SoFHt8I95WcMP3OaTv2MdpI5ieCQYprCO2
XPUo8GfmEeUZBWzn7M5MsCXCk9EhMSbeMswt1YqiGaPATbu7o5/4HMF1XLdi
2jAOZdjCrMqo80PmEiPNd+qoeHH01W8HD/h9iPZHFdmnNq181Wm+UNhxyX6e
6ZMH+vL/YX5Lvkvk9r5AYToHPOfjs2+W0x0Kj/wJTCXrRaOF3CkPfIEnd1OX
3xYJKOUL/viA4Jtufh33lDAG2nJD54l2b1yx7DOm1uuN/aZ2dxq9wezvqciR
LH9c682KZCN477UmI+lDgnDPi941nVUJ3BNcBv4SvOicfemwZiTqT7HIJIz6
Q+se5k4+sp8roLIoFaCNHg/lsv54+OM75xIOK6oOX3T0r2EJQdNt394o+D7A
kcCrxhZUvd1hzlzAmoUHXrTQ3++1Qc5Tplt/kfNi0lXtcmAK8OUfs8xT2wpx
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
YLEkuisOM8vu+fUnMiAglfV2LmX/HzWupNM=
      "]], Axes -> True, AxesLabel -> {None, None, None}, 
    BoxRatios -> {1, 1, 0.4}, Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, PlotRange -> {All, All, All}, 
    PlotRangePadding -> {Automatic, Automatic, Automatic}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[
           NCache[{{0}, {
              Rational[1, 200]}, {
              Rational[1, 100]}, {
              Rational[3, 200]}, {
              Rational[1, 50]}, {
              Rational[1, 40]}, {
              Rational[3, 100]}, {
              Rational[7, 200]}, {
              Rational[1, 25]}, {
              Rational[9, 200]}, {
              Rational[1, 20]}, {
              Rational[11, 200]}, {
              Rational[3, 50]}, {
              Rational[13, 200]}, {
              Rational[7, 100]}, {
              Rational[3, 40]}, {
              Rational[2, 25]}, {
              Rational[17, 200]}, {
              Rational[9, 100]}, {
              Rational[19, 200]}, {
              Rational[1, 10]}, {
              Rational[21, 200]}, {
              Rational[11, 100]}, {
              Rational[23, 200]}, {
              Rational[3, 25]}, {
              Rational[1, 8]}, {
              Rational[13, 100]}, {
              Rational[27, 200]}, {
              Rational[7, 50]}, {
              Rational[29, 200]}, {
              Rational[3, 20]}, {
              Rational[31, 200]}, {
              Rational[4, 25]}, {
              Rational[33, 200]}, {
              Rational[17, 100]}, {
              Rational[7, 40]}, {
              Rational[9, 50]}, {
              Rational[37, 200]}, {
              Rational[19, 100]}, {
              Rational[39, 200]}, {
              Rational[1, 5]}, {
              Rational[41, 200]}, {
              Rational[21, 100]}, {
              Rational[43, 200]}, {
              Rational[11, 50]}, {
              Rational[9, 40]}, {
              Rational[23, 100]}, {
              Rational[47, 200]}, {
              Rational[6, 25]}, {
              Rational[49, 200]}, {
              Rational[1, 4]}, {
              Rational[51, 200]}, {
              Rational[13, 50]}, {
              Rational[53, 200]}, {
              Rational[27, 100]}, {
              Rational[11, 40]}, {
              Rational[7, 25]}, {
              Rational[57, 200]}, {
              Rational[29, 100]}, {
              Rational[59, 200]}, {
              Rational[3, 10]}, {
              Rational[61, 200]}, {
              Rational[31, 100]}, {
              Rational[63, 200]}, {
              Rational[8, 25]}, {
              Rational[13, 40]}, {
              Rational[33, 100]}, {
              Rational[67, 200]}, {
              Rational[17, 50]}, {
              Rational[69, 200]}, {
              Rational[7, 20]}, {
              Rational[71, 200]}, {
              Rational[9, 25]}, {
              Rational[73, 200]}, {
              Rational[37, 100]}, {
              Rational[3, 8]}, {
              Rational[19, 50]}, {
              Rational[77, 200]}, {
              Rational[39, 100]}, {
              Rational[79, 200]}, {
              Rational[2, 5]}, {
              Rational[81, 200]}, {
              Rational[41, 100]}, {
              Rational[83, 200]}, {
              Rational[21, 50]}, {
              Rational[17, 40]}, {
              Rational[43, 100]}, {
              Rational[87, 200]}, {
              Rational[11, 25]}, {
              Rational[89, 200]}, {
              Rational[9, 20]}, {
              Rational[91, 200]}, {
              Rational[23, 50]}, {
              Rational[93, 200]}, {
              Rational[47, 100]}, {
              Rational[19, 40]}, {
              Rational[12, 25]}, {
              Rational[97, 200]}, {
              Rational[49, 100]}, {
              Rational[99, 200]}, {
              Rational[1, 2]}, {
              Rational[101, 200]}, {
              Rational[51, 100]}, {
              Rational[103, 200]}, {
              Rational[13, 25]}, {
              Rational[21, 40]}, {
              Rational[53, 100]}, {
              Rational[107, 200]}, {
              Rational[27, 50]}, {
              Rational[109, 200]}, {
              Rational[11, 20]}, {
              Rational[111, 200]}, {
              Rational[14, 25]}, {
              Rational[113, 200]}, {
              Rational[57, 100]}, {
              Rational[23, 40]}, {
              Rational[29, 50]}, {
              Rational[117, 200]}, {
              Rational[59, 100]}, {
              Rational[119, 200]}, {
              Rational[3, 5]}, {
              Rational[121, 200]}, {
              Rational[61, 100]}, {
              Rational[123, 200]}, {
              Rational[31, 50]}, {
              Rational[5, 8]}, {
              Rational[63, 100]}, {
              Rational[127, 200]}, {
              Rational[16, 25]}, {
              Rational[129, 200]}, {
              Rational[13, 20]}, {
              Rational[131, 200]}, {
              Rational[33, 50]}, {
              Rational[133, 200]}, {
              Rational[67, 100]}, {
              Rational[27, 40]}, {
              Rational[17, 25]}, {
              Rational[137, 200]}, {
              Rational[69, 100]}, {
              Rational[139, 200]}, {
              Rational[7, 10]}, {
              Rational[141, 200]}, {
              Rational[71, 100]}, {
              Rational[143, 200]}, {
              Rational[18, 25]}, {
              Rational[29, 40]}, {
              Rational[73, 100]}, {
              Rational[147, 200]}, {
              Rational[37, 50]}, {
              Rational[149, 200]}, {
              Rational[3, 4]}, {
              Rational[151, 200]}, {
              Rational[19, 25]}, {
              Rational[153, 200]}, {
              Rational[77, 100]}, {
              Rational[31, 40]}, {
              Rational[39, 50]}, {
              Rational[157, 200]}, {
              Rational[79, 100]}, {
              Rational[159, 200]}, {
              Rational[4, 5]}, {
              Rational[161, 200]}, {
              Rational[81, 100]}, {
              Rational[163, 200]}, {
              Rational[41, 50]}, {
              Rational[33, 40]}, {
              Rational[83, 100]}, {
              Rational[167, 200]}, {
              Rational[21, 25]}, {
              Rational[169, 200]}, {
              Rational[17, 20]}, {
              Rational[171, 200]}, {
              Rational[43, 50]}, {
              Rational[173, 200]}, {
              Rational[87, 100]}, {
              Rational[7, 8]}, {
              Rational[22, 25]}, {
              Rational[177, 200]}, {
              Rational[89, 100]}, {
              Rational[179, 200]}, {
              Rational[9, 10]}, {
              Rational[181, 200]}, {
              Rational[91, 100]}, {
              Rational[183, 200]}, {
              Rational[23, 25]}, {
              Rational[37, 40]}, {
              Rational[93, 100]}, {
              Rational[187, 200]}, {
              Rational[47, 50]}, {
              Rational[189, 200]}, {
              Rational[19, 20]}, {
              Rational[191, 200]}, {
              Rational[24, 25]}, {
              Rational[193, 200]}, {
              Rational[97, 100]}, {
              Rational[39, 40]}, {
              Rational[49, 50]}, {
              Rational[197, 200]}, {
              Rational[99, 100]}, {
              Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
             0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
             0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
             0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
             0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
             0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
             0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
             0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
             0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
             0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
             0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
             0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
             0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
             0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
             0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
             0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
             0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
             0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
             0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
             0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
             0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
             0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
             0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
             0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
             0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
             0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
             0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
             0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
             0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
             1}}], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              
              LineBox[{{7.5, -112.50000000000001`}, {7.5, 
               112.50000000000001`}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -112.50000000000001`}, 
                   Offset[{4., 0}, {7.5, -112.50000000000001`}]}, {{
                   7.5, -44.72891566265061}, 
                   Offset[{4., 0}, {7.5, -44.72891566265061}]}, {{7.5, 
                   23.042168674698797`}, 
                   Offset[{4., 0}, {7.5, 23.042168674698797`}]}, {{7.5, 
                   90.81325301204821}, 
                   Offset[{4., 0}, {7.5, 90.81325301204821}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -98.94578313253012}, 
                   Offset[{2.5, 0.}, {7.5, -98.94578313253012}]}, {{
                   7.5, -85.39156626506025}, 
                   Offset[{2.5, 0.}, {7.5, -85.39156626506025}]}, {{
                   7.5, -71.83734939759037}, 
                   Offset[{2.5, 0.}, {7.5, -71.83734939759037}]}, {{
                   7.5, -58.28313253012049}, 
                   Offset[{2.5, 0.}, {7.5, -58.28313253012049}]}, {{
                   7.5, -31.174698795180724`}, 
                   Offset[{2.5, 0.}, {7.5, -31.174698795180724`}]}, {{
                   7.5, -17.620481927710845`}, 
                   Offset[{2.5, 0.}, {7.5, -17.620481927710845`}]}, {{
                   7.5, -4.066265060240964}, 
                   Offset[{2.5, 0.}, {7.5, -4.066265060240964}]}, {{7.5, 
                   9.487951807228917}, 
                   Offset[{2.5, 0.}, {7.5, 9.487951807228917}]}, {{7.5, 
                   36.5963855421687}, 
                   Offset[{2.5, 0.}, {7.5, 36.5963855421687}]}, {{7.5, 
                   50.15060240963856}, 
                   Offset[{2.5, 0.}, {7.5, 50.15060240963856}]}, {{7.5, 
                   63.70481927710844}, 
                   Offset[{2.5, 0.}, {7.5, 63.70481927710844}]}, {{7.5, 
                   77.25903614457832}, 
                   Offset[{2.5, 0.}, {7.5, 77.25903614457832}]}, {{7.5, 
                   104.36746987951808`}, 
                   Offset[{2.5, 0.}, {7.5, 104.36746987951808`}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, -112.50000000000001`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -44.72891566265061}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 23.042168674698797`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 90.81325301204821}], {-1, 0.}, 
                  Automatic, {1, 0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> False]}, 
         AspectRatio -> Automatic, Frame -> True, FrameStyle -> Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.0014089238412111178`", ",", "1.6584660560460833`"}],
                "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkerSize", "\[Rule]", 
           RowBox[{"360", " ", "Null"}]}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8919219754470177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"10", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"10.", ",", 
      RowBox[{"Abs", "[", "datavaluesEzPlane1w", "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891508604065546*^9, 3.8915086096898403`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJxdnXlcTV/3x5tQom6TRnW71W2+3QmVaJnJFGX4GpMpc5lnN/OYocgQQlIR
mUKmayoyFDJmCFFEkkpl6He8nrP2/VnPP/fl/Zzv6ZzP3nvttdfaex3H8Gn9
x+poaWm9b6ylpauF/6sIxN/9jRWHH1ZK1fz/Acj92lzVMghBrs/4hTNLS3o6
IRdoeOKdFVGWMp6bM75Tz7H9Z28Jz60Yb9be6pBeGHI7xvcqYpqNzcL7CBlv
KDglvtyoDc9FjEs/zagZ7N2K586Mb+lU1N9KjfcRM969f0+rymVynrsxvi46
OTv9C3IPxoNUBUXZL/157sX4Ce+FZs+WBvBcwniIq2KS3xK8j5Txph27lm1N
RN1kjMvmWTw51Qy5XMMP97WJnYn3UTB+5nL2W/s1eL2S8dCmnkdeeXmr8d//
+9UCeVB+m0NjhWr8N/6edrOL6txMm/+3PuMr/e6OGTz7G//fCxgf+L791aNG
jfj7mDN+3ip72rzxFjy3Yjz0WvGh/edFPLdjvM8ugy+bBnrxXMj4jKn3gwdd
8eG5iPEeLxpFHWf905nxIb0uFF8rxvuIGQ9uludt5ozcjfF6veQJd/9T8NyD
8dq3pYLrC1A3L8blBhv7lC3E55Ewfs110ea8eFeeSxmfcc9g5N6HzjyXMb56
7+GbbzLNeS5nfHH/j2vGJ+rxXMH4/I8rTY6YlvH6KxlvnnL49r3JP9m4/d+v
Pqgytw3P7OOmxuuQP+2T+CtmftFl/Df+2jT/ef2hUQXPBYwXp7e36flbl7+P
OeNR69TdNxua8NyK8ej8qkXTAlAHO8a/vru37ZvanedCxjsbWgy+a+jBcxHj
q9+N7nnTC3V2Zrz7zjaJ4UOx/4sZvxqZXvf6At7fjfG7rpMtf77H+3gwnrbl
e8ncBLQDXoy/+5S+yW8fcgnjHWprZl0yQz2ljMf4vG5t4It/V8Z44zc61/0/
m/FczrhoafaEVdsb81zBeHShbUDwy2+8/krGnxde/s/5YCnPK9j4+3V/hY2F
tgN/H2xfAWye9ylpw/JmavzvkUfNGx2UtN1Wjf/GX5dPIQeWOOA4NWd89ABv
x9Yv8XorxhcteD0q7hbqY8d4wbOviSdmYjsKGX82IHR8+wq8XsR4m4lZHXYv
Rd2cGV/dTnn+speS52LGl6eMueuqwHnBjXEvr6trPQ/i9R6M62gd3nVhFdoH
L8azr5jf/7gJ/66E8fO194cH19H2FYBMJq+vc0V7JWP8/p9HpZN24riWM545
pKJznUtLnisYH/J+wPZBcrS3SsaDRkRHB/fH67F9zUE1z8fVLBvtA7avOdy6
YKdu3dWS5/qMPxhUdmjBHWxHgYYPy12ujrNW47/xt/zlYL+a8fg8Vow/di/X
Kf6O+tgx/i7p5VHHni48FzLuu6TitmCAJ89FjL/5ld3rTHNqn82h+oFRSUM2
Hb/m0HbeW/1b9dh/3Bg/8csqUDkM7+PB+FnVsJNea/F6L8ZXd1Fm7/uA7Shh
fFdAW4u9W/B6KePzzrd9oHuQtq85PM0dnGR9zYrncsbvPFio9b4KuYJxmydf
Jrm9RHuoZDzKdP4ll6HIsX2tQJRzrOeFNy14ju1rBQeCLIpfW2A76jP+s01l
3s/hTXkuYDxu45ktDSubq/HvIV//yyZA2NVOjf/GX58PA32mmzrx3I7xjp/d
xxtF4HwnZDxlWnRDWhs6fq3AomiyqeoaHb9WoP1q8fTuadheYsahpb9fbhKd
f61Af+y5+VsB+48H48XC78Iej2n7WkHVjcYWs2KRSxi/0X/gIqsfdP61guz9
3bPXD8X3kjF+YFNnt8yWOC7kjBc1rT8JqaingvELryYOLLiE+isZVxUeOim0
EfAc29cOnmb4dJqynNpnO2joKLnS+QKOa33Gjb/uPKTz2JTnAsblenUHKmfa
8Nyc8Vu9J5+LeE3Hrx28Ca0eYrsH9bFjXLe24sSrnnT+tYMcv55baiTUv7KD
iF7BgUXL0S9yZnz2+VkOjQyo/2wHNl+uVN32oOPXDn7+Z67qNZn6V3YwYplH
qybz0G57Me6SDa88vqCdlzC+7cwMg81nxDyXMv7AesFc2Uoc7zLGe+8zGrKj
gdpnO+hRs6/rqJvUPtvBib7L42qH4LhTMn6uyZIbD8NxvGP7CqGx2OdGShHe
H9tXCDk3z/tenYR2Up/xniGL5lqPwecXMB5t3GrxyO74/OaMm86uP5tmi+PC
inHV72vBXY2ofyWEE9dXqa79pPOvEAIONTkj6YftLmI85vi8rysVOC6cGf/Z
GFqdXEPnXyG86lfeRzcf292N8eTUBxc7HPLluQfjnffuM+h6A+28F+PLHc9W
fI/F55cwXnpo6O4sC7o+EsJOncVd9jtT/1kI2+93DFzzQ8xzOeODtgwvbJuF
9kfB+InYi3cLc/B6JeMbT8+c4ROC98f2FYGbcMnyDouxH2L7iuBM288f14zB
dtFnfNme5ikFqaiDgPHdBVHpOoybM+52R9XKT4jtbsV4ZciDhzfy8f52jAeb
X73S9DnqI2S8mYuedpP21H8WgYu8ynm4J51/RaAUCPt+/k7nXxG86FnVpU5K
x68IFFfSuzlcpf6zCNLuq9NO1qI+XowPe3q1SUEk3l/CeNs47UeLLXCdLmU8
dYTzyhbBeH8Z45XmJu22zcN+K2c8KP6gV09n5ArGL36yWPJjNPZPJeMWV4Uv
Oo0X8xzb1xm2up/pfHQ82iVsX2dI3zBY2eEOPr8+4wW3tTpvl+L8JWDc97/B
OrfnITdnvOG80aSJrbCfWzF+c8qAkAf76Ph1Bk+TNWskp3HcCRl3GtfjTMEP
vL+IcduNzYt9VrdW47/xt37wsAX7gql9doYs730RsdNxvLsxnr1nq32zOOQe
jM+dOPbWU2+6PnKGtS1q9w6oxX4lYbx+/QzrL/l0/DqDz6hZTqMfY3+WMX7z
te/41Jv4XnLGN/gdWXPyCv5dBeMFS8+krW+P91cyvm3cb3/FWXwebF8x5Mef
mXRyHm1fMay++n5HQAONX4nhaKPC4bFj0W4LGN+Z3FEW14naZzEU5aTfTGiG
z2/FeP91O5fc9qDxKzF81XvZ/2Im9a/EIIo6fNVvA/WvxBCsOyx94iy8vzPj
R3ob3mk7H8eLmPFuFsNKNs3F93VjPNLOIdZyBo1fieFh/Mr4J5fxPl6M7wky
K096i+0lYXznyJyRfQJRNynjfSdkbe3E7LCM8Xcn14N0BeomZ7wo/da4PYtQ
ZwXjR89VX/T+jnZYyfgBn2ZJT5j9wfZ1g/G+Kb+Ne9L2dYOY3Ah1zQk6ft0g
ZfoYfWEoHb9ukBueFf7tPb6vOeN7V1qk+F2k49cNdgZc26/ajO9lx7jH6xXb
NwVQ++wGqxqnzspaju0uYnzZwPvVgztR/8oNwl1b+Pr7+anx/ZF/7OuYFdKd
xie55zl2quWWi9h/PBiXxvlWWLSi7esG8/1yQmPjaXzDDR4POW5ql4n9Vsr4
VJfVs/ZspePXDcTNJniXeuB7yRmPCTHxX/EWuYLx9QueTxbUo91WMj633+2a
eBEdvx5wbk977Z3t8D7Yvh4gdj3VZU0qcn3Gryy75vRxEuojYPzIEz2x7DHe
35zx473Dxvu0o+3rASGxoQneEtq+HhBjs++hV0e0t0LGTZW7jVYdp+tfD9i1
fc63zBmoszPjBpvO7uuixri0mHEdh4C4pFbUv/KAbgsGxTZtQ9e/HnDjxMws
0XXsz16M16qqLs9YQudfD1g1/7horCkdvx7Q5f7CTjtc8T4yxqUWL1Vbc+j4
9QDL4SL909/xfRWMJ8ydv3fSETr/cs8b+XN79g3UGdvXC6a1Nd4er0A7gO3r
BTNDG4suMH9MX8NrvzjeL6L22QuUc+Ujnk3CfmXOeObFvJyVL7H/WzHetP88
g9n3aHzDCz7K3OzrJ+P1QsYDFrgYB5SjDiLG/QviKzauofFJLzhz4ELVqRPY
P8WMb/22Lq/ZLdq+XpDYdkrV05nYrzwYd5k2pqj0C/WfveBy5ccXHwLp+pd7
ztnbH28JRf9Bynj2s4FDVwL1n71AlTtt1p40uj7yghe2+mbpU7A/KBjP/Tw5
On8Vtc9eEHusLuhcO9QT21cCM4YdSizMxHUWtq8EZjY1mn6lANe5+ox7R6s7
ByfiuljA+DR/N8X9XvY8N2d8zNkd8SuMMW5jxXiKTgtpsi31nyXQ4VRDQ95j
bEch47PbdZX1WI86ixjPsJvgpB6O3Jnxdrek97zn0PiGBCZ/tDmu1Z36VxLw
mevTOXk0tc8SuHJ80NOUChqflMCwn+NG7kum618J7MnPb1X7ScxzKePrlTkP
X1pjf5AxPv/O4KC5Z1AfOePvkg8uq4zEeIKC8Ve34s52bUTXvxKQLnRp4ibB
67F9pfCgrJdf/G8av5ICBA6L+ToC4976jC+N1O2je5rGr6RwbqjZyi/5Rjw3
Z7x3+c+iRScxPmPFuPDEyK0vqx15bsd4d70nfZX2aGeEjEd7/fE3yqf+sxQC
Sh8EhA9E3ZwZt+m5I2h5T+pfSSFqSY+Y6/9h/3FjfHhTE5PEHtQ+SyHpUlz4
rON0/pVC0d6Ro49FUf9KCvNDl7p02UvjV1JYcuq2V+Qs7D8yxoWtU5/NV9H4
lRRenO+WUHQC4/8Kxpf+mC4PW27IcyXjRw99a+eoQ+NXMuh4a2SUfUvsD9i+
MrB++PbduhE0/iyDR0FtXkQcpONXBt115K9WT8XrzRlfvrHxxq7DcVxbMf5g
5bqWV/aJeW7HeM6H3bcWdMa4pZBxl0tPEgSudP0rgzsOTy8Mm0bbVwZ6KVMH
nrWh8Q0Z9Gr3s9/cZrR9ZZB6d09Tz3I6fmVw3tk+bbYZzQ/KIGlhzbGYWOQS
xssfHHk+cQD2QynjQS8n6egOpPaZu4+/X9GNh5h/kTMe8+x5/11t6Pjl7jNw
190RLH6oZNzojLlnhJDGn+VwY+KRnZcLqH2Ww22PbglCbRyP+oyXfZYlHK2k
+SM52BuNsa9qh3bAnPFKk35Fsa/wOa0YN/T52c1pN+pgx3hQt1QL68/UPstB
JG7bYfE82r5yCNyv27d2CNpJZ8ZNBOX1G00w/y5mPEJp133vPhyPbox3aKl4
l5dL21cO32ZNLI0twXnNi/HFU1p3KB1Hx68cjh9d7fj+HPWf5bBm8aK4JVm0
feVQOC320HF/tGNyxtPNTVpPeELbVw4nXF6sasjGeLKS8aSx2v6lA5Bj+yrg
VHKdR/1+Mc+xfRUwJqbX+6D1z0j+VwFd33RZbNWF5n8VUPQw7ndlQGP+PuaM
705rYqrqiP3NivGJcCYnJIXGNxRQ2k9xabKMrn8VcH/wkazHb9B+ihgXn5nx
u2sK9a8U8HH/6ZYvo1BnMePXv8wFjyg6fhWQWrddFu+AcScPxpd66N7UnUPb
VwHL03Y977mGjl/uebadF8r60/GrgNopRet+TMf3lTH+84pra88DqI+c8UZL
Ww1YMxr3SygY3xrb9sDc3pUk/6sA+w6b2obM+UTyv0ooroz8En6Y5heUkKXe
3SU+lu7fUMLnkzpl0cJKsn9DCYvajMk/6EL3byhh4O9WMy62ofs3lDBg0Xst
aXP0w+0YD+7QaP2QpjguhIznZtn7BbSj7auEXvN6Gpgl0PikErodb1W7yYau
j5Qw4t6s74d30PikErwafDaOGEnzC0pwT5iWfDmI+ldKsHFyrz2iS9tXCQkB
I8ufldL8oBKmH4hbtWo4Hb9KCNlb4Z/Xm+7fUMJ+r7UuN9bS/RtKqBft3tDh
QynZv6GEX6Zdc2dcrPsfV2G7VQT279t4vQU+P+Na8DXgVK5D/R/+Pobsertp
r3SeL8b3NWTXKxPPB/ksf/i//gOm7Pq2exv5Di7nxxfjWmAuHb5m4kH0ByzZ
9RnTnq9fHCIhXAu2DSj2TD3H56HUtuz6gaZ/ii5tlhGuBfd6n9F/e4HvJ6DZ
x3XwzJGwE7mtCdeCwqELR33W4d8rUcSud8gecE1pqyRcC8JmRO3Y7oE6uLDr
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
cly+5d5vqYS0718+dGPQ8k5k/uX4n54tCg5mkLqmHG/dEDkiitVHFTO+Lb3T
03GHSN1aju/+NvZBzxqyPuJ4SLVq5vQwUjeP414/FxjvnUHWvxxXrM3sfh3z
fdi+HE96Hm8scib+Fcc3S8ectD+D9kTO+M2vTa1+dyR1TTn+449828fxxD5z
fOax3p7+RqR91e7wvsDyrsU+Yp85/uupSp0WgVyfXT9jyP2G9Heog4Dxd2+n
WebivlbmX7lDXtXsY9LexD5zfGGE6He8P6lby3HRyXa95l1B+yZkfNTRxQu+
lBH7zPHB+Tryw+mkfTle1XG5cowPaV+OO9yonVs/iIxfjt93PLC8cDwZvxyv
lHg7djAl6yOO6z+NOTEnnNSt5XjOlWZLqmpI+3I8t+2lj/9ZkLq1HDeOm/q4
IYTUjef4h7ZhRhtlZPxyvMP9wfIlLYh95viIxzHXTj4i388SeoFq5OxJ4oMY
R+Lbl+MJS2N/mt8jdWs5XmNXvTnbldSt5fjyLaX9lrL6uuaMjxp+51SyFqlb
y3Hzlu8Me7wjdWs5bpTWZWG8Lqlby/E2ZUNnvskg/hXH18//WX30BamrxvED
la1HTvtA6tZyPMfATv/CNtK+HJ8wcsKtG06kbi3H+x5499r8HvGvON7jmsmK
/ivJ+ojjw2e9nLgvG+2elPHpr18+sGXnFmWMJw65ZDp5HfGfOT4gp+rRf/PJ
+OV4r+s2xxaVYHspGV8Ay2r6LCDtq5LAoXjHul4/cL2D8UkJ9FTnr1yL++VY
fFIClfeCd7+4R9ZHHA+KF8ZnxZLvtnDc4uaDL2ZXyfqI4yunRhgoH5Dxy/FO
q6vNUiNIXUSOp84IPeKLeU8Wn5TAerl7uJ0JGb8c76f+8e5BRzL/cvxLzLiU
qGZk/cvxrBfjzzi3JPaZ4y7D4/qkp5H5l+OLnMcWjXlG6qpxfKvsYpShFY1P
SiClQ9tZ9n3I+OW4UP1jS6ofqYvI8WRllxqTSbjeUTA+qOaiIFqJ8Sgl44JV
T0PFB8j6KFIKXx1yvl+zJ/ENjp/0ejQq3JPENzge7tbjXtd1uI4WMH6nf9lR
+zJsd3PGH8UJ029cJN9N47jkdaXQRJvENzge1sR+6/ep5LtaHPcbdreLQzKx
zxxfJ31U0HcUqWvK8X0rbz//sp2sfzke3bFE8b0NqYvI8XvGga8StEn7crxP
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
ek388Ep7ryWNB/DvVaSJH07vN+dhX/bdkG8sHtjsrL2H3hx+fQSaeN282VP3
n8zB8yyauJlR2H/DA0/x7yXQxK9e99h47roA11lVLB4l3mqeUCREv0IHkJdU
By2RzcZ9Ai0Z79f/cozDIzzPookjCQ03eunifiSVJs7T+1x6zCmsG6zSxHmS
7n8Jzi3GuhCaOEx/7c//LbqO66YfLK6iHV3eSceNn0dUvP/M8X7mkxOvf8Fz
04aMJz0V53W+hv5DS8Z3DFh13Hw6r3ORJk5SufJurPoGP46KRIw/zCrr+kuB
87UmvnE9etrMsOs4z2riG63HbR7f7xHeRxPfGKBya+2L59kjNXGJsbdNO96f
jfte6lmc4anbkF1deqL+vH3jeEAn83jHtriebc74286x7y8n8X6mypRxs8kr
Lm/E77ar7BkPk4SF7sbvqYEj46e9FJOjc7BdnBjXDm4XVrgE6+q7MB7et/LD
SjwnC56Mt+q/IWV3E7yPN+OfC79lLu+J52V8GPdpn3cvPg7PvWriA8Xbk9wr
xuD+Z816/63D0OPmyajDb7Z+13oZ98loE1//QcX72xy3mKNw3DS3ludGjP9J
2lW6cj3W+zJjvMvvwQUHtfF8vSXjjRb3+rrvItbTdmD82YeT9xPxO/WJjoxX
27oPicb9n4lOjN/qWNV6yxTkLoy3XrWg/2rcF53oyvi1r0Y59zG/nOjJeEqk
fHjdczwv4M34yj0PZpuJkfswblv/1bJzPp4H1KzTBcOPfV/6iY9T5WvW6aub
f3pQ3Ivvn/ma9fiIQsPzL4Jw/7PB/zi3/rWvCUg8ev05P69o9tkm9rGd11nF
r3PVmn223a82m3/Bhm9HtWafbVRqxsx9zXh7FSZi/KPP69T+rXHe1OyblSxL
devRG/cza/bNzolOSJ2K9ZTCNPtm120M3dy7MZ630uyD9VuzJOz5e74fSjX7
YB8HbG9okcv3Q6lmH+yD5jXOxZX8+kKq2Qe70yfjoNk0HV4fk/9xbh09bFvS
ddsTeN7EgnH5TaeMO2n8/VXWjGtVmR5ejd+jUWv2kTZOPGhzGuupqjX7SHc2
sU/6vBnX9Zp9pFGfj8tu4PcswjT7P7td3OVXvpB/3zDN/s+U8qHKt6N4exum
2f95dGYf3cmtcFy0+B//u2/zbYlV3HGcp2wYv+urdTMJz0cLXRnXET+V2u3B
+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
bxz39m6Sd2IbuT/Hp0TcveWG3/9CPTm+J++xcWuMLwk1ccjCRhue7ME6KipN
HHLM0VNHbfGcL7MDMvj260uocjN5Ho5vu9B4RbkJ+Q4dxx/tGndtRRCZdzh+
qLzP2OuPaT0WGQxc6CnZOpfYVY7b97n3bU8V6f8cD4y/NvfxZPL8HG8fefLd
8FBSB5LjBxcIsj80w/UF/15ce65V267s1RO/h2vIeNz9HtV1YY3/fS+O26Sv
8UnyxbirJu4X0m3USekjjG9o9udYdO75wdOEjHeOl/Z6KM7RJ/Vn/vLAPNsw
RzLPcnziyHfLv40m3xfj+N10/6Xjjcn5eo6fgsMLCjYQHTg+drSzMvsKqaPL
8e+z9x44fQDjG1h3URv0e5+/Z/3pPqk/rA1ePa30RqTg/gRLxo0GN4nL20zq
xnB8cs/1bgVA+uffc+t+TbO6fyD1jjjuMXLJVxMTUn+A484q7/bWAlrHUht6
VOktapNJ7DzHk0IGD48/R+bNv/dvVxZm6EV0+Ht/vSONK26T+th/32ue+R3V
n+ukrrghKPMf/Filh/sALRkPWHi+Q08fWif/7/nx5s9MXuC+KRfGby3zy24x
g/pXhjA+/1RM+GX6fQFDeHg4//XSBjp/GcLAN70X5q0W//tef8+DN46LLPaz
+Pe9OO5nfsmjky+pL8G93/LIJWlT1eT5/+6H2VA539fB7d/n/OsnNy9vFq0i
z8nxmTNelz6bROv7mcLQ861CvvWldW5N4eidu12OJ+A6ThOvO/d20IiRWMdG
rYnXfXUtXWywhthnjv/KWCjZmUzquHLj8kfegY2dazFeZ8h4i+a+s0v9yTz+
9/zgu4I9t5eQump/z+uNUwz9mkr1EcJF87Iv1WZkXuP4iKeylY06kn7O8fLk
7ZM/bSX1AP8+z6OyH20mkTqiHL+6Y2/deCt+HlRp4nU6xZeWxueQ/sDxuPeL
Kt1wH0WiJl73LOTw2e0LaL1QIdiUzJ/WtjupC8q9R6+p7e5cYPE6U8Y/Knp9
D55K6lVy3OxTi7iaraTezt8426kT0yc5kPmd40Pt58bMXE36P8ezO/SaOHwg
+W4ax4NvRraNEJD35fid4YNHV+XiulUTr7O5/b6p1lJaF04E0wrMrpTjdxNA
E687O9voxZdy+h0oF7ANHvdVedvj3/fiuFfxok46/rTOvwvA9eyqkB10/LrA
vSb9vo/3x3lBE69r77ciYQHWCc/XxOukzn1a9mf7nPnn4f7O4FDDIS9uEZ05
Pnaxctp9GbGTHM+q8jy5B79zna+J16kvPD/9Kpr0Z+6/M592u1tAOMbr+HHE
zT+ZJfpLXd7jeQdDxo9cbee1e5P4Xz05XhsT//iThDz/37jZmbltm48n9WM5
bnKh3v8YxjNBE687OvnMphvmxH/g+O8Dwz+7eJD5lOOf/Fa8fGtP+hXHu9S+
/W1xlNQL4virC2PeVrYn44vjFzKFKT3wHFmkJl7XJkSw/FJfUk+M4w9TCoco
N5O6mhwXvhzfND6cfJeT+zvR1xx0Pq0y/1c3joenhC2S1JLvn3K8emiPd54b
xf/qxnGPLzWza9ZjvT4R4xnzYhYPwu+ks3lWAjPfGdjvfU3q3XH8YNsbL6ED
6bcc/z7A+Fezc2TccTzteZcMnVHEznB88rHUgH5rSR0qjt90uN/1uC95X+5+
B7Y33lQZQOqkcTwyMmuOQRapd8Tx9ltmu0+1Qz1dGB/gZmz6EOvh4HtxvCYy
yL5TFKnHxXGTlQ96bEwh8xTHLb+sMO92jtSF43h2O8GWMEsyb3L/nRw26lgu
JePo7/78l6OnmupiHk0Tr5vaofKxpIE8z9+4X3bUK+dvtL6iDFarG3b+6WP3
7/3/7ouOuXR80V5Sp5fjftqPexRd8VD/H45x9IQ=
     "], {{{
        EdgeForm[None], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
Gib7LIqr0pDyXq6GGyV7LorJVZL3ISlvXpbs0SgmV03ez6Q8qNyhfSbq9Rye
vB9LOfHSZH9Ha2preJ+b5vM34T11Wgt3h/2cq+CLk+vJ5nonYV9FLP08N9e6
O8L7xNQjuyC5BtAzr5tcb+h7pI1VF0gXXZLsPV0Hnx3eh6h+1uXJ3o1yx0XJ
dYt++0/K6UX311Q3qQaRTlN9JL2tuqFb2P/Rd7ZM9n0UM/dLrpNV9+0W3gN2
EDwp2QeXDr+c8ZEF93kPSK7tpWF2De8BqwBXTvYaxHOTe1Hqg1RMrv+lQ+Yn
95bU15iS7L1Kwy9I7o2pB/FKcq2iGuSusIcmHfVqct2iWuPl5L1rqt3qh/c+
qd/dOLyvSv3cccmeqeqXyck9J9URByZ7HNJvY5L3QqmOPijZO5B+G5tcO6km
2j/ZB1Fcap7s2SnvyNuUPyA/o0KylyEN1jp5f63y+GHJ+/ak064N71lVr399
eP+n4t4F4X2j6kvOSfaaVae3St5Tq1w5L7nPp97Qy+HeoHr3ByfvUdP7ujbZ
/1K+U60kr0PauEvYS9SavS55z640Q5XwPkD1f99K7kGqx3RI8v5CaaQ3k/uI
6hNJ42n/lXqvV4f3iWkPwFNh31v7BCol+0SKqy2SvUjl7kOT9zVKu05M7rGp
jlunOJzrk/8DJ4Gd/Q==
           "]], 
          Polygon3DBox[CompressedData["
1:eJw1m3fgV9P/x++9555ry2ooacqI7FBGJcoeIaQQGZUGFSVklUooytYuVLQI
idKSkgqFoih7k2T/no/v8/7+OH3O857zvvO8Xq/n6/k61Wrf9dwuWZIkd4Uk
yfX3Tv2zSn8vFj6jSJJ2MUneEV6hdrvGztfkbdIk+VX4es05TXMa69imcvxn
jd2h/gi16ho/T2OFjv0i3F34Fs1Zpv756p+q3z4l/L1wV+G2wk8Ifyt8nXAb
4ZHCPwh3E24n/LjwN8KdhS8WflL4O+EuwpcIX637XSu8Tm2Ixoapfap+B42f
r/EHhNcLXyHcSvhc4THCRwofJ3yH8Erhi4RPF64j3E44CB8gvKfwecJ/6bn2
EW6p1lD9T3Ssj8ZOET4q8zX6Cu+qdrr6W3SstsaqCLcS/lO4LnOFrxfeTec/
Sriu8KXCuXB94UrC5wr/ofl1hGsKtxFONb6/8OHCXYQrCB8hXEP44oQbTpL9
hPcWvkjwP/1+X+EOagPUP0XfZJXGTlN7TOOHaP6xGttWY08JD1LbR8eeVRui
Y2dr/oeae7Xm3Ct8lvAHwlcJDxY+U3iN8NFqN+i3u+t3R2vsGOEewnsIHyPc
SLincEXhRsLVhS8U/lfnqCd8mPB1wjtr/HDhI4S7Cu8ifKTwkcLdhHcVbsiz
CK8Wbit8ZuE1e5zO9UW5lgeqfaD+pRo/W2P35f5W7YXPFb5HeI1wO+GzhH/R
c9wp/LDa3uUaOFbn+zzx2mCNYwsXlmt/qPAG4StZ68KDhD8Uvkz4HOHmwhOF
DxAeKbxF579H+Am12jr2jdbrR6w/XeNVje+j+ZcJR40dKNxA+FrhHYQPFT5U
uLPwTsKHCdcTvly4ED5I+Cudb7lwfZ3vFeED+EbC22q8gfCBfEPh7YQPFr5G
8z9O/E54NyNyP+s1Gm9d2EaPzvyM2O5Bateov73GD9HY8Ny2f7XwBcLfRds7
dv+acBsdP179L/ExmrtR46+rX1PHXtD4Mv19XvMP0LGPymuepmN/JL6XLsKP
CbfXnG9ZK8KnC//JN8If6Xzz1H9D7Qbhj4SfZb1ozmTN/VL4bd6/8MuFfUBL
9X9L7Bv4Zi2ENyf+lps0f676tXTsRdaTjk0VPlT3Nk74Io5p7C8dewRb0/wl
6r9V2v+nwi+rX01zZmjuKTo2WbiBfj+Ga+W+vwOFRwl/pvmvCO+l+TPxR8Kz
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
9bk=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt13e8T/UfB/DrXiuySyFkZJS994wQooys7Fku/RK/UZJRicoq/IwKkZAV
kV1Gyt57XOsiW2TW8zzu54/j3M/z+/p8ztf3c87n8z55OvV5OT42JiZmlyOF
o4J/MsTFxJxKFhPTR7tM8piY8iw9S2DxrDRLzXbqOJnlZAk+38aKOGfgs1ld
uV2sJHuMzWcN2Uy2kf2fdU6WdOFZjk1sEuvCkml/6VjDxrLW7La+T7CL2mu0
a0Rd2bfsV7nJvCuP1Z7r2Ka9ULuI3FGf72GlnbNGzhrru4nFsjNyfVke9jVb
xz6Xa8fvsunsFzaetWf32Qy2nk1gHdgDtpuVYo+zBcZrxGazzWwK6yYXpz3N
8TP7gr3G7sntZWXYE2yRvi+x0Ww+G8LqyCWwiiwjOx2+c1m2mRVgj8hNY9VY
EZacHZDrwJ5hhVkytpe1Df/fQtHER78Pa+PPp1lRloIdZB1ZAZaX3TH+VvYK
e5LlYNfYBvYCe5RlY1fYL6wOS8MKsr/Zbtaa5WbZ2VW2ntVladlvrKDrpuHT
WQ02in3PBrPnZU+ynOym9q/aL8plZPnYXbaNNWPZWAH2kO1irVguNoEtM95I
3oRfYuPZj2wEe4n9wSay5ewT1pRdZr+zQiwtm2G8mmwcW8w+ZA3kzrGxbBH7
gNVnZ9nn7Af2EXuRJbLhbAb7NyvHdrP87J72du3mrpGdjWSz5d7lVfhBNoJ9
y95hldkB9itLxS5o99e3IMvF/pTZzBqyTCw3u8V+Y41YZraFFdb3Uf4Nq8Wm
stVsDGsle4uVYo+wo9o95IqyMiwtO856seKsJEvNjrDurAjbyp5l6Yw3k9Vm
+1g5lo39yJqxKiwzO6vvW9G6xHay4iyz3FxWn5VmadgxuZ6sGKvEMoVn+k1W
ju1gxVgmfeeweqwcS8dOyvVmpVhVloWdY/1YRTaFrWKj9X2V/8kOs6rs6Wgt
kmvLqrHHWKLM26wSO8AqsBxyy1kLVoNlDXM0gFVhxVhKdoh1CvNWnT3Ozoe5
rMy2s6Iso/G+Yy+wg6wie4r9xFqy/aw8y86WseZsMlvJRrGWxrzJPmPz2Pus
NjvBjrKaLH/0bOrbkR1iVVhutpq1YUdYNZaHrWXt2HMsju03VnuWn/3ADsis
YBXY+WgeUmo7Tw1r4hW5G3Ifsl4sL5vDbrKP2OssH5vLurEOrAw7ZLwR7DRr
xEqwPexN9icbzt5g+fWdx9qzV1kRtlNuMLvHRrN+rITccvYX+4T1ZYXZItaF
vcZKsQP6Dme32AgWbaIF5Raw22wk68MKsYWsK2vPSrOD+n7MOrN2rCTbzz5i
7VhzVjhaZ9lA1pG1ZsWi9ZMNZadYQ1Y8WF9Wh5VgydmksNc2YJVY+rAnt2bJ
/PYT2P9YBd9vHXso93lYh8qy1ewBG8v6s1JsBevAWrGisUk1wxCW3HhT2CBW
TW4Ti2OT2XusKtvI7uo7ir3FirNlrB4rG/at6eHZv8/GsLdZSbmfWKzxJrGB
Yf3bwM7LtWXVWaK+w1iM3Hj2X1Zebi1rK9eMFWJbRN5ld9in7E32rNxilkLf
r8JeG+0zW9lVuaGsO8vFZrGz7GVWNtx/A9gZ1jTck9H89mepjDeNDWN19d3O
EuVaskosQe49do0NYz3Y03Kz2Ty2PaoDtIvKHfN5auN9E/aPBmGvmCO3Nao1
tJ+TOxL9lnIznYeHfWaP3HW5D1hPlod9x9LIzWIfs4ZsL2sj9woryH433jss
rdwc9mnYBw+xR9lc9hl7mR1mLfV9ieUL68bbLJ3cglDDtQr1Swu5xixvVCPI
9WOvsPosJ1vF4lkz1oDlCmtOH3aOtWAV2cnwfKR3jYVsXKgTT7ETcnXDcxTN
eU+WQW5JqNfah/33VbkmYa3bEObtJHuBPRuewV4sgdVjz0X1BXudZTTeUjYx
1H/n2d9yX7D/hP18DWvCnmdPhv2tBzvOarMCbCPrzBaw3dpL9SvFTkXPHuvj
XJtfZl/KzWe7tJfIlQy19wXW0fn5kIvWxKXsUPR7ylViF30+gPUNuSvsK7l+
rDeryf5gU9gbrGv4naP7dCyLZ91ZZXaGfcG+Zzu0F7tGMXY8em5ZvHMtfolN
levFOrPy7AQbzV5nXViFMJdjWF/Wk1Vl59gEtpKd1t7kGvXYnah+YIfZ/HDf
X2XL2DG2jtVk16NagZ2J9l5Wnt1ny9lx9jOrxW6wLOZyg/O3vF+o5TOztWw6
iw/vHyv0PRXNWah3/4r2YnYyzEc0b7dZVnYhum9ZdZZc359YQmxSrVw35LKw
s9G+HfbGBywN2xfVRywfS2Q/sqPRPhvee66xDOwE+yHcB7eitZW94VyDX2ST
XbcP68GqsLNsPFvI9kT3o76l2eloXWHTo3sk7AG75Bqy6tH3jE16f+vAerJO
rBw7zkaxgewz1pnlCGv7IDYurGt5wp6ykT2I7oFQJ+ZgjViNuKR3xAWh3ljH
Lkd7tFwLloodY7XkngnPaie2ll3S3hFq5ZSsKasTl1RPLgvP/i/shva+8N6T
jv3MrscmvQu1Ce8uV9gQfbvxnHwm+4B9GfatEmFfuMwGs67sKfYNW8z2h7ks
H+btEnvfuUv4XWbILWJ7o++mXUbuTLQPsV7O1cJeNlFuCTuovVKuIrvg81Xs
XGxS3d4w3C+rWWK0Xoda/iFbw85Hax9rzP5mG9hf7HCoMbO4xjA21Wf/Cnvy
Frae3Y5NqkU7hneDwWyiXO9Q56xnf7BBYc6zs2nsIuvG6rNbYd1I6Tn6mg2N
TXqH3cb+AeMNHyc=
           "]]}]}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0tsuXFEAx+E1mDrXObh0R/AGhL4BWi8gJvSGW1Ln82GGiohI07QTaRoR
Z+r4ABWPgHgCQbyAb8fFL9//au+110xNV39HXyyEMK8MRbtCt5kh1PGJzczM
CqGdlUywnoNMqcVO8zNP2MNrfuM9l/nCuIdv2tU8ZSNv+IkP7OQrv3JYI9p1
qFHucYz7HOcBJ3jISU7pyJ7mMWd4wln+41z0Ts5zQWf2Is+Z5AVTvOQSr7jM
7xpSPB5CL1+c7wvv2cprNkTvYhWzlLafo7vhHQf5nwkes52/mVSzPcA6dkd3
z7bod2ATH91/LctVph3PL+U2S7jFYv5lEf/wIwu1aRcwzXz+Yh5/Mpc/mMNs
bdgfuB59K9eib+EqHSGsxN7/H28dFECV
         "], VertexColors -> None]}, {
        Line3DBox[{987, 1286, 986, 716, 988, 1451, 1661, 989, 1452, 1662, 990,
          1453, 1663, 991, 1454, 1664, 992, 1287, 993, 1556, 1288, 994, 1455, 
         1665, 995, 1456, 1666, 996, 1457, 1667, 997, 1458, 1668, 998, 1289, 
         999, 1557, 1290, 1000, 1459, 1669, 1001, 1460, 1670, 1002, 1461, 
         1671, 1003, 1462, 1672, 1004, 1291, 1005}, VertexColors -> None], 
        Line3DBox[{1007, 1292, 1006, 1558, 1293, 1008, 732, 1009, 1463, 1673, 
         1010, 1464, 1674, 1011, 1465, 1675, 1012, 1294, 1013, 1559, 1295, 
         1014, 1560, 1296, 1015, 1466, 1676, 1016, 1467, 1677, 1017, 1468, 
         1678, 1018, 1297, 1019, 1561, 1298, 1020, 1562, 1299, 1021, 1469, 
         1679, 1022, 1470, 1680, 1023, 1471, 1681, 1024, 1300, 1025}, 
         VertexColors -> None], 
        Line3DBox[{1027, 1301, 1026, 1563, 1302, 1028, 1564, 1303, 1029, 748, 
         1030, 1472, 1682, 1031, 1473, 1683, 1032, 1304, 1033, 1565, 1305, 
         1034, 1566, 1306, 1035, 1567, 1307, 1036, 1474, 1684, 1037, 1475, 
         1685, 1038, 1308, 1039, 1568, 1309, 1040, 1569, 1310, 1041, 1570, 
         1311, 1042, 1476, 1686, 1043, 1477, 1687, 1044, 1312, 1045}, 
         VertexColors -> None], 
        Line3DBox[{1047, 1313, 1046, 1571, 1314, 1048, 1572, 1315, 1049, 1573,
          1316, 1050, 764, 1051, 1478, 1688, 1052, 1317, 1053, 1574, 1318, 
         1054, 1575, 1319, 1055, 1576, 1320, 1056, 1577, 1321, 1057, 1479, 
         1689, 1058, 1322, 1059, 1578, 1323, 1060, 1579, 1324, 1061, 1580, 
         1325, 1062, 1581, 1326, 1063, 1480, 1690, 1064, 1327, 1065}, 
         VertexColors -> None], 
        Line3DBox[{1067, 1328, 1066, 1582, 1329, 1068, 1583, 1330, 1069, 1584,
          1331, 1070, 1585, 1332, 1071, 780, 1072, 1333, 1073, 1586, 1334, 
         1074, 1587, 1335, 1075, 1588, 1336, 1076, 1589, 1337, 1077, 1590, 
         1338, 1078, 1339, 1079, 1591, 1340, 1080, 1592, 1341, 1081, 1593, 
         1342, 1082, 1594, 1343, 1083, 1595, 1344, 1084, 1345, 1085}, 
         VertexColors -> None], 
        Line3DBox[{1087, 1346, 1086, 1481, 1691, 1088, 1482, 1692, 1089, 1483,
          1693, 1090, 1484, 1694, 1091, 1485, 1695, 1092, 1347, 1093, 811, 
         1094, 1486, 1696, 1095, 1487, 1697, 1096, 1488, 1698, 1097, 1489, 
         1699, 1098, 1348, 1099, 1596, 1349, 1100, 1490, 1700, 1101, 1491, 
         1701, 1102, 1492, 1702, 1103, 1493, 1703, 1104, 1350, 1105}, 
         VertexColors -> None], 
        Line3DBox[{1107, 1351, 1106, 1597, 1352, 1108, 1494, 1704, 1109, 1495,
          1705, 1110, 1496, 1706, 1111, 1497, 1707, 1112, 1353, 1113, 1598, 
         1354, 1114, 827, 1115, 1498, 1708, 1116, 1499, 1709, 1117, 1500, 
         1710, 1118, 1355, 1119, 1599, 1356, 1120, 1600, 1357, 1121, 1501, 
         1711, 1122, 1502, 1712, 1123, 1503, 1713, 1124, 1358, 1125}, 
         VertexColors -> None], 
        Line3DBox[{1127, 1359, 1126, 1601, 1360, 1128, 1602, 1361, 1129, 1504,
          1714, 1130, 1505, 1715, 1131, 1506, 1716, 1132, 1362, 1133, 1603, 
         1363, 1134, 1604, 1364, 1135, 843, 1136, 1507, 1717, 1137, 1508, 
         1718, 1138, 1365, 1139, 1605, 1366, 1140, 1606, 1367, 1141, 1607, 
         1368, 1142, 1509, 1719, 1143, 1510, 1720, 1144, 1369, 1145}, 
         VertexColors -> None], 
        Line3DBox[{1147, 1370, 1146, 1608, 1371, 1148, 1609, 1372, 1149, 1610,
          1373, 1150, 1511, 1721, 1151, 1512, 1722, 1152, 1374, 1153, 1611, 
         1375, 1154, 1612, 1376, 1155, 1613, 1377, 1156, 859, 1157, 1513, 
         1723, 1158, 1378, 1159, 1614, 1379, 1160, 1615, 1380, 1161, 1616, 
         1381, 1162, 1617, 1382, 1163, 1514, 1724, 1164, 1383, 1165}, 
         VertexColors -> None], 
        Line3DBox[{1167, 1384, 1166, 1618, 1385, 1168, 1619, 1386, 1169, 1620,
          1387, 1170, 1621, 1388, 1171, 1515, 1725, 1172, 1389, 1173, 1622, 
         1390, 1174, 1623, 1391, 1175, 1624, 1392, 1176, 1625, 1393, 1177, 
         875, 1178, 1394, 1179, 1626, 1395, 1180, 1627, 1396, 1181, 1628, 
         1397, 1182, 1629, 1398, 1183, 1630, 1399, 1184, 1400, 1185}, 
         VertexColors -> None], 
        Line3DBox[{1187, 1401, 1186, 1516, 1726, 1188, 1517, 1727, 1189, 1518,
          1728, 1190, 1519, 1729, 1191, 1520, 1730, 1192, 1402, 1193, 1521, 
         1731, 1194, 1522, 1732, 1195, 1523, 1733, 1196, 1524, 1734, 1197, 
         1525, 1735, 1198, 1403, 1199, 906, 1200, 1526, 1736, 1201, 1527, 
         1737, 1202, 1528, 1738, 1203, 1529, 1739, 1204, 1404, 1205}, 
         VertexColors -> None], 
        Line3DBox[{1207, 1405, 1206, 1631, 1406, 1208, 1530, 1740, 1209, 1531,
          1741, 1210, 1532, 1742, 1211, 1533, 1743, 1212, 1407, 1213, 1632, 
         1408, 1214, 1534, 1744, 1215, 1535, 1745, 1216, 1536, 1746, 1217, 
         1537, 1747, 1218, 1409, 1219, 1633, 1410, 1220, 922, 1221, 1538, 
         1748, 1222, 1539, 1749, 1223, 1540, 1750, 1224, 1411, 1225}, 
         VertexColors -> None], 
        Line3DBox[{1227, 1412, 1226, 1634, 1413, 1228, 1635, 1414, 1229, 1541,
          1751, 1230, 1542, 1752, 1231, 1543, 1753, 1232, 1415, 1233, 1636, 
         1416, 1234, 1637, 1417, 1235, 1544, 1754, 1236, 1545, 1755, 1237, 
         1546, 1756, 1238, 1418, 1239, 1638, 1419, 1240, 1639, 1420, 1241, 
         938, 1242, 1547, 1757, 1243, 1548, 1758, 1244, 1421, 1245}, 
         VertexColors -> None], 
        Line3DBox[{1247, 1422, 1246, 1640, 1423, 1248, 1641, 1424, 1249, 1642,
          1425, 1250, 1549, 1759, 1251, 1550, 1760, 1252, 1426, 1253, 1643, 
         1427, 1254, 1644, 1428, 1255, 1645, 1429, 1256, 1551, 1761, 1257, 
         1552, 1762, 1258, 1430, 1259, 1646, 1431, 1260, 1647, 1432, 1261, 
         1648, 1433, 1262, 954, 1263, 1553, 1763, 1264, 1434, 1265}, 
         VertexColors -> None], 
        Line3DBox[{1267, 1435, 1266, 1649, 1436, 1268, 1650, 1437, 1269, 1651,
          1438, 1270, 1652, 1439, 1271, 1554, 1764, 1272, 1440, 1273, 1653, 
         1441, 1274, 1654, 1442, 1275, 1655, 1443, 1276, 1656, 1444, 1277, 
         1555, 1765, 1278, 1445, 1279, 1657, 1446, 1280, 1658, 1447, 1281, 
         1659, 1448, 1282, 1660, 1449, 1283, 970, 1284, 1450, 1285}, 
         VertexColors -> None]}, {
        Line3DBox[{401, 701, 402, 716, 431, 731, 1558, 446, 746, 1563, 461, 
         761, 1571, 476, 776, 1582, 491, 791, 506, 1691, 806, 521, 821, 1597, 
         536, 836, 1601, 551, 851, 1608, 566, 866, 1618, 581, 881, 596, 1726, 
         896, 611, 911, 1631, 626, 926, 1634, 641, 941, 1640, 656, 956, 1649, 
         671, 971, 686}, VertexColors -> None], 
        Line3DBox[{403, 702, 404, 1661, 717, 432, 732, 447, 747, 1564, 462, 
         762, 1572, 477, 777, 1583, 492, 792, 507, 1692, 807, 522, 1704, 822, 
         537, 837, 1602, 552, 852, 1609, 567, 867, 1619, 582, 882, 597, 1727, 
         897, 612, 1740, 912, 627, 927, 1635, 642, 942, 1641, 657, 957, 1650, 
         672, 972, 687}, VertexColors -> None], 
        Line3DBox[{405, 703, 406, 1662, 718, 433, 1673, 733, 448, 748, 463, 
         763, 1573, 478, 778, 1584, 493, 793, 508, 1693, 808, 523, 1705, 823, 
         538, 1714, 838, 553, 853, 1610, 568, 868, 1620, 583, 883, 598, 1728, 
         898, 613, 1741, 913, 628, 1751, 928, 643, 943, 1642, 658, 958, 1651, 
         673, 973, 688}, VertexColors -> None], 
        Line3DBox[{407, 704, 408, 1663, 719, 434, 1674, 734, 449, 1682, 749, 
         464, 764, 479, 779, 1585, 494, 794, 509, 1694, 809, 524, 1706, 824, 
         539, 1715, 839, 554, 1721, 854, 569, 869, 1621, 584, 884, 599, 1729, 
         899, 614, 1742, 914, 629, 1752, 929, 644, 1759, 944, 659, 959, 1652, 
         674, 974, 689}, VertexColors -> None], 
        Line3DBox[{409, 705, 410, 1664, 720, 435, 1675, 735, 450, 1683, 750, 
         465, 1688, 765, 480, 780, 495, 795, 510, 1695, 810, 525, 1707, 825, 
         540, 1716, 840, 555, 1722, 855, 570, 1725, 870, 585, 885, 600, 1730, 
         900, 615, 1743, 915, 630, 1753, 930, 645, 1760, 945, 660, 1764, 960, 
         675, 975, 690}, VertexColors -> None], 
        Line3DBox[{411, 706, 412, 721, 1556, 436, 736, 1559, 451, 751, 1565, 
         466, 766, 1574, 481, 781, 1586, 496, 796, 511, 811, 526, 826, 1598, 
         541, 841, 1603, 556, 856, 1611, 571, 871, 1622, 586, 886, 601, 1731, 
         901, 616, 916, 1632, 631, 931, 1636, 646, 946, 1643, 661, 961, 1653, 
         676, 976, 691}, VertexColors -> None], 
        Line3DBox[{413, 707, 414, 1665, 722, 437, 737, 1560, 452, 752, 1566, 
         467, 767, 1575, 482, 782, 1587, 497, 797, 512, 1696, 812, 527, 827, 
         542, 842, 1604, 557, 857, 1612, 572, 872, 1623, 587, 887, 602, 1732, 
         902, 617, 1744, 917, 632, 932, 1637, 647, 947, 1644, 662, 962, 1654, 
         677, 977, 692}, VertexColors -> None], 
        Line3DBox[{415, 708, 416, 1666, 723, 438, 1676, 738, 453, 753, 1567, 
         468, 768, 1576, 483, 783, 1588, 498, 798, 513, 1697, 813, 528, 1708, 
         828, 543, 843, 558, 858, 1613, 573, 873, 1624, 588, 888, 603, 1733, 
         903, 618, 1745, 918, 633, 1754, 933, 648, 948, 1645, 663, 963, 1655, 
         678, 978, 693}, VertexColors -> None], 
        Line3DBox[{417, 709, 418, 1667, 724, 439, 1677, 739, 454, 1684, 754, 
         469, 769, 1577, 484, 784, 1589, 499, 799, 514, 1698, 814, 529, 1709, 
         829, 544, 1717, 844, 559, 859, 574, 874, 1625, 589, 889, 604, 1734, 
         904, 619, 1746, 919, 634, 1755, 934, 649, 1761, 949, 664, 964, 1656, 
         679, 979, 694}, VertexColors -> None], 
        Line3DBox[{419, 710, 420, 1668, 725, 440, 1678, 740, 455, 1685, 755, 
         470, 1689, 770, 485, 785, 1590, 500, 800, 515, 1699, 815, 530, 1710, 
         830, 545, 1718, 845, 560, 1723, 860, 575, 875, 590, 890, 605, 1735, 
         905, 620, 1747, 920, 635, 1756, 935, 650, 1762, 950, 665, 1765, 965, 
         680, 980, 695}, VertexColors -> None], 
        Line3DBox[{421, 711, 422, 726, 1557, 441, 741, 1561, 456, 756, 1568, 
         471, 771, 1578, 486, 786, 1591, 501, 801, 516, 816, 1596, 531, 831, 
         1599, 546, 846, 1605, 561, 861, 1614, 576, 876, 1626, 591, 891, 606, 
         906, 621, 921, 1633, 636, 936, 1638, 651, 951, 1646, 666, 966, 1657, 
         681, 981, 696}, VertexColors -> None], 
        Line3DBox[{423, 712, 424, 1669, 727, 442, 742, 1562, 457, 757, 1569, 
         472, 772, 1579, 487, 787, 1592, 502, 802, 517, 1700, 817, 532, 832, 
         1600, 547, 847, 1606, 562, 862, 1615, 577, 877, 1627, 592, 892, 607, 
         1736, 907, 622, 922, 637, 937, 1639, 652, 952, 1647, 667, 967, 1658, 
         682, 982, 697}, VertexColors -> None], 
        Line3DBox[{425, 713, 426, 1670, 728, 443, 1679, 743, 458, 758, 1570, 
         473, 773, 1580, 488, 788, 1593, 503, 803, 518, 1701, 818, 533, 1711, 
         833, 548, 848, 1607, 563, 863, 1616, 578, 878, 1628, 593, 893, 608, 
         1737, 908, 623, 1748, 923, 638, 938, 653, 953, 1648, 668, 968, 1659, 
         683, 983, 698}, VertexColors -> None], 
        Line3DBox[{427, 714, 428, 1671, 729, 444, 1680, 744, 459, 1686, 759, 
         474, 774, 1581, 489, 789, 1594, 504, 804, 519, 1702, 819, 534, 1712, 
         834, 549, 1719, 849, 564, 864, 1617, 579, 879, 1629, 594, 894, 609, 
         1738, 909, 624, 1749, 924, 639, 1757, 939, 654, 954, 669, 969, 1660, 
         684, 984, 699}, VertexColors -> None], 
        Line3DBox[{429, 715, 430, 1672, 730, 445, 1681, 745, 460, 1687, 760, 
         475, 1690, 775, 490, 790, 1595, 505, 805, 520, 1703, 820, 535, 1713, 
         835, 550, 1720, 850, 565, 1724, 865, 580, 880, 1630, 595, 895, 610, 
         1739, 910, 625, 1750, 925, 640, 1758, 940, 655, 1763, 955, 670, 970, 
         685, 985, 700}, VertexColors -> None]}, {}, {}}}, 
     VertexColors -> CompressedData["
1:eJwUmXc8le8fxkkKFUVDKiHfaJd20aXMFpKkQrIysqMSIpSWUFRSqSQzIyMZ
RSKlsrLn4cznOSehIut3//7yegnnOff9+VzX+31StHYztpsiJCTEnCYkJEK+
Jiq2P+y4xYbcU5b62hgKDkOzNQ968JH4ztH6ihkHVm4BBY8FFDob5Lc0TuHD
e9tVKeloDs6n1WZLiNNQL1DM/NFD4/JOcxGXk2wMBiXJ84IoBKZdO/voOh/a
53+eteVy8Tc91C38EY2FIiz1I6o0hNKuiMdXcWE6IByQdZtGrYKGeOJ2Gmle
714tOM3C1FDlTG4DD4FnKzJVa/jIF0mFcUELDi7c8SNAuQcTiysYb0f4mFuH
8h/HurGI35/RvpGJqzIPd9M6AixvCH/nYcEC478S+8FqHkwPzvt1v5aP3X3x
BYNzmNCyWCOwKeTCuLjikKiIADNXGTwYt+zD8ES3UY4KF49GEjivlwjQYBT/
0qHsC+reD65x4n9FgJ+DH1OLQsW1DJ+57HIIahcJluWXoO1Z9bQHtlzYS0UE
/lrIhG9dzLqxUi7MTqQbNAgLIJkp5r/qDxsObhWfsz9Q+PNfapLnNj4Ez8fD
32Rx8EiTcr0xj0Zk1LParXU0NvN1hYZXMXGYMtdsr+Fi/HqpkfIkHz512yUE
MhwYRQT4ZdRQmH/k1O/tqnyo/3ikZH+TB6Edk+JZfTTGOzccufidQs2neK2b
ZTTa51iYrfjJRt/pVakni3tR2uL1PWZTD+ytrzIaPuehrXDW3O6Ejzi7ry9s
sUgvJt7OKWEwymDddmbCwO8zRkscgqPvcWBz9VyPglgLXIczF0YMNIJ+FnFl
kQ6FFWsf79oSz8CUoZ0Pzf50wkPn04WbEzT6Crt4UWlcuC/gFGxzZyL9ru1j
xS4emp8X7t33ncbKHXuliiwouCazp0ZxObi8zrict4ZGo8f9+xWvye+/eDVV
PJycW/WFtbvJfA6W5sdsJvP553J8nGsqDwNcW0kzBg1804q+n0pBKDp4mv8v
HnwrPxy68okGN0f4+vw9FEyuNWSOvuyF4mLRn+kRHGzCav7YNgE+5HZqWB7n
ob06vKTtG40vCYfi3/Mo9MS13/w9l4tEZUuxVk0aZ4WKFRXiaAR9NvSrvE/j
6jd1/dDVNP5eLCm6V87B8WbJXkEDDa+10du1P/Dwz8a2J6ibhf6VvVtH5Clc
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
u/n62DIlNvri04JXnSbP5eC5XjSNjyOuR61UDpEcmuk8myIeMTi19r3Pei7u
T4/ebziFD68UcxmbO1zUFzTP6jdg4twv/b4tVVy8CMwKMn7RgUPzY1VE61uw
cnBJxwNxNh5U53jO9aqHXvf6p4nh9bAvCfU7Rua7+fWOhdsku2F5dDLlhH8b
PtyeNr5mOg2JAE/pZS/7IOn2LNKntxsPz7l+7ReiUTUn0H3ljT6krpoVrfql
Gx3hScwOiosVCnc6npE8nGL+/s8o8cYYGaac3jEKtfOOsnVIzjtoc6oqXvBw
rzxQsUGeDRRUBRfYUVCtnG1an86Hj0fImwgBFzEXjU1rntAQrT/qGPwfDeny
2w2O4SzY7Jieav6bh8SshL79n/k45uaYM2rXB3Ne190La7gIXTAukrxYgNyv
u+e9cmVjTPW4TlQYhfzWL70HLvPRaTl2K7qPwoJH9/wFhN/fXKkNHqnnYq9j
oMAqgfjwtPkRLmI0pvbvN98YzsGMdy/aC4douGsqXjhInmvDoFr83EomAqad
M5AmPHrlwxbHJEMOds23ubVtTh9ilX47vSPc1bHHL2OEcNccIf3/PhDueie3
I28DmXuRmJCrg0G9MJtXmpci0w1uZbi6STLhepE5cTOf9mLxXvmUNNVuaC+I
sd3tTaNRsgnP77JgLZCZoxvBwNqqaby9D2kY/P4cfH8VycMMzuaa9xwErwnO
7fhIQ6FnpdwqVQqyV0orm+3Y+Pfrdo+aKIV95nkpe0pp8H2Xa55WpnDnfJfy
vDg2jn9qvWxNvHxs9rjzLUc+4kutD5+L4UA13P5hojjZG67LoHQPjZEvVLaC
OxfLz4stfu5A8rtEzd/Vicwz52j/w10UGu8rSMmROR8X7v3e/5WHd3mJpcbz
aDTYTRMZNic8u6VWL+o6F9wbux9SO8m+9Zx1LiG+PLRpnY6HERcPcpQfm/z/
/2fPbrsXQ/L51cn1lmInezEpUu+zmszbAlHFjW+v9iGGYfV21Scyp2apEdzP
POQ6mknPPt0Dsx+bd2sZdkA6/XLlXcIZZS7sAZWnPVAQuS/1/lEHVH/0SDuR
XN00GvZw7vd25JlIL9i/pwWKZV36S31Jj4f535BW7QVvNJnJSu/CV+cdMSfF
+dicyV+etZoLmcwtfL3aPih13E6pId5kqL+qsLKDRsCHdaYD98kem5rKh7DY
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
      "], VertexNormals -> CompressedData["
1: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
H00KzmRYL+t/SYZ3SvnCD2Op8D+eeG1n
      "]], Axes -> True, AxesLabel -> {None, None, None}, 
    BoxRatios -> {1, 1, 0.4}, Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, PlotRange -> {All, All, All}, 
    PlotRangePadding -> {Automatic, Automatic, Automatic}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[
           NCache[{{0}, {
              Rational[1, 200]}, {
              Rational[1, 100]}, {
              Rational[3, 200]}, {
              Rational[1, 50]}, {
              Rational[1, 40]}, {
              Rational[3, 100]}, {
              Rational[7, 200]}, {
              Rational[1, 25]}, {
              Rational[9, 200]}, {
              Rational[1, 20]}, {
              Rational[11, 200]}, {
              Rational[3, 50]}, {
              Rational[13, 200]}, {
              Rational[7, 100]}, {
              Rational[3, 40]}, {
              Rational[2, 25]}, {
              Rational[17, 200]}, {
              Rational[9, 100]}, {
              Rational[19, 200]}, {
              Rational[1, 10]}, {
              Rational[21, 200]}, {
              Rational[11, 100]}, {
              Rational[23, 200]}, {
              Rational[3, 25]}, {
              Rational[1, 8]}, {
              Rational[13, 100]}, {
              Rational[27, 200]}, {
              Rational[7, 50]}, {
              Rational[29, 200]}, {
              Rational[3, 20]}, {
              Rational[31, 200]}, {
              Rational[4, 25]}, {
              Rational[33, 200]}, {
              Rational[17, 100]}, {
              Rational[7, 40]}, {
              Rational[9, 50]}, {
              Rational[37, 200]}, {
              Rational[19, 100]}, {
              Rational[39, 200]}, {
              Rational[1, 5]}, {
              Rational[41, 200]}, {
              Rational[21, 100]}, {
              Rational[43, 200]}, {
              Rational[11, 50]}, {
              Rational[9, 40]}, {
              Rational[23, 100]}, {
              Rational[47, 200]}, {
              Rational[6, 25]}, {
              Rational[49, 200]}, {
              Rational[1, 4]}, {
              Rational[51, 200]}, {
              Rational[13, 50]}, {
              Rational[53, 200]}, {
              Rational[27, 100]}, {
              Rational[11, 40]}, {
              Rational[7, 25]}, {
              Rational[57, 200]}, {
              Rational[29, 100]}, {
              Rational[59, 200]}, {
              Rational[3, 10]}, {
              Rational[61, 200]}, {
              Rational[31, 100]}, {
              Rational[63, 200]}, {
              Rational[8, 25]}, {
              Rational[13, 40]}, {
              Rational[33, 100]}, {
              Rational[67, 200]}, {
              Rational[17, 50]}, {
              Rational[69, 200]}, {
              Rational[7, 20]}, {
              Rational[71, 200]}, {
              Rational[9, 25]}, {
              Rational[73, 200]}, {
              Rational[37, 100]}, {
              Rational[3, 8]}, {
              Rational[19, 50]}, {
              Rational[77, 200]}, {
              Rational[39, 100]}, {
              Rational[79, 200]}, {
              Rational[2, 5]}, {
              Rational[81, 200]}, {
              Rational[41, 100]}, {
              Rational[83, 200]}, {
              Rational[21, 50]}, {
              Rational[17, 40]}, {
              Rational[43, 100]}, {
              Rational[87, 200]}, {
              Rational[11, 25]}, {
              Rational[89, 200]}, {
              Rational[9, 20]}, {
              Rational[91, 200]}, {
              Rational[23, 50]}, {
              Rational[93, 200]}, {
              Rational[47, 100]}, {
              Rational[19, 40]}, {
              Rational[12, 25]}, {
              Rational[97, 200]}, {
              Rational[49, 100]}, {
              Rational[99, 200]}, {
              Rational[1, 2]}, {
              Rational[101, 200]}, {
              Rational[51, 100]}, {
              Rational[103, 200]}, {
              Rational[13, 25]}, {
              Rational[21, 40]}, {
              Rational[53, 100]}, {
              Rational[107, 200]}, {
              Rational[27, 50]}, {
              Rational[109, 200]}, {
              Rational[11, 20]}, {
              Rational[111, 200]}, {
              Rational[14, 25]}, {
              Rational[113, 200]}, {
              Rational[57, 100]}, {
              Rational[23, 40]}, {
              Rational[29, 50]}, {
              Rational[117, 200]}, {
              Rational[59, 100]}, {
              Rational[119, 200]}, {
              Rational[3, 5]}, {
              Rational[121, 200]}, {
              Rational[61, 100]}, {
              Rational[123, 200]}, {
              Rational[31, 50]}, {
              Rational[5, 8]}, {
              Rational[63, 100]}, {
              Rational[127, 200]}, {
              Rational[16, 25]}, {
              Rational[129, 200]}, {
              Rational[13, 20]}, {
              Rational[131, 200]}, {
              Rational[33, 50]}, {
              Rational[133, 200]}, {
              Rational[67, 100]}, {
              Rational[27, 40]}, {
              Rational[17, 25]}, {
              Rational[137, 200]}, {
              Rational[69, 100]}, {
              Rational[139, 200]}, {
              Rational[7, 10]}, {
              Rational[141, 200]}, {
              Rational[71, 100]}, {
              Rational[143, 200]}, {
              Rational[18, 25]}, {
              Rational[29, 40]}, {
              Rational[73, 100]}, {
              Rational[147, 200]}, {
              Rational[37, 50]}, {
              Rational[149, 200]}, {
              Rational[3, 4]}, {
              Rational[151, 200]}, {
              Rational[19, 25]}, {
              Rational[153, 200]}, {
              Rational[77, 100]}, {
              Rational[31, 40]}, {
              Rational[39, 50]}, {
              Rational[157, 200]}, {
              Rational[79, 100]}, {
              Rational[159, 200]}, {
              Rational[4, 5]}, {
              Rational[161, 200]}, {
              Rational[81, 100]}, {
              Rational[163, 200]}, {
              Rational[41, 50]}, {
              Rational[33, 40]}, {
              Rational[83, 100]}, {
              Rational[167, 200]}, {
              Rational[21, 25]}, {
              Rational[169, 200]}, {
              Rational[17, 20]}, {
              Rational[171, 200]}, {
              Rational[43, 50]}, {
              Rational[173, 200]}, {
              Rational[87, 100]}, {
              Rational[7, 8]}, {
              Rational[22, 25]}, {
              Rational[177, 200]}, {
              Rational[89, 100]}, {
              Rational[179, 200]}, {
              Rational[9, 10]}, {
              Rational[181, 200]}, {
              Rational[91, 100]}, {
              Rational[183, 200]}, {
              Rational[23, 25]}, {
              Rational[37, 40]}, {
              Rational[93, 100]}, {
              Rational[187, 200]}, {
              Rational[47, 50]}, {
              Rational[189, 200]}, {
              Rational[19, 20]}, {
              Rational[191, 200]}, {
              Rational[24, 25]}, {
              Rational[193, 200]}, {
              Rational[97, 100]}, {
              Rational[39, 40]}, {
              Rational[49, 50]}, {
              Rational[197, 200]}, {
              Rational[99, 100]}, {
              Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
             0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
             0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
             0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
             0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
             0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
             0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
             0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
             0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
             0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
             0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
             0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
             0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
             0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
             0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
             0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
             0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
             0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
             0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
             0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
             0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
             0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
             0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
             0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
             0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
             0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
             0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
             0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
             0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
             1}}], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -50.203583061889255`}, 
                   Offset[{4., 0}, {7.5, -50.203583061889255`}]}, {{7.5, 
                   23.086319218241044`}, 
                   Offset[{4., 0}, {7.5, 23.086319218241044`}]}, {{7.5, 
                   96.37622149837134}, 
                   Offset[{4., 0}, {7.5, 96.37622149837134}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -108.83550488599349`}, 
                   Offset[{2.5, 0.}, {7.5, -108.83550488599349`}]}, {{
                   7.5, -94.17752442996743}, 
                   Offset[{2.5, 0.}, {7.5, -94.17752442996743}]}, {{
                   7.5, -79.51954397394137}, 
                   Offset[{2.5, 0.}, {7.5, -79.51954397394137}]}, {{
                   7.5, -64.86156351791531}, 
                   Offset[{2.5, 0.}, {7.5, -64.86156351791531}]}, {{
                   7.5, -35.545602605863195`}, 
                   Offset[{2.5, 0.}, {7.5, -35.545602605863195`}]}, {{
                   7.5, -20.887622149837135`}, 
                   Offset[{2.5, 0.}, {7.5, -20.887622149837135`}]}, {{
                   7.5, -6.229641693811075}, 
                   Offset[{2.5, 0.}, {7.5, -6.229641693811075}]}, {{7.5, 
                   8.428338762214985}, 
                   Offset[{2.5, 0.}, {7.5, 8.428338762214985}]}, {{7.5, 
                   37.744299674267104`}, 
                   Offset[{2.5, 0.}, {7.5, 37.744299674267104`}]}, {{7.5, 
                   52.402280130293164`}, 
                   Offset[{2.5, 0.}, {7.5, 52.402280130293164`}]}, {{7.5, 
                   67.06026058631922}, 
                   Offset[{2.5, 0.}, {7.5, 67.06026058631922}]}, {{7.5, 
                   81.71824104234528}, 
                   Offset[{2.5, 0.}, {7.5, 81.71824104234528}]}, {{7.5, 
                   111.03420195439739`}, 
                   Offset[{2.5, 0.}, {7.5, 111.03420195439739`}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  RowBox[{"-", "20"}], 
                  Offset[{7., 0.}, {7.5, -50.203583061889255`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  RowBox[{"-", "10"}], 
                  Offset[{7., 0.}, {7.5, 23.086319218241044`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, 96.37622149837134}], {-1, 0.}, 
                  Automatic, {1, 0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> False]}, 
         AspectRatio -> Automatic, Frame -> True, FrameStyle -> Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "28.511124818627373`"}], ",", 
                 "2.1970658720748277`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkerSize", "\[Rule]", 
           RowBox[{"360", " ", "Null"}]}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8919219755018663`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deltax", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"xcoordinates", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "-", 
     RowBox[{"xcoordinates", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "1*^-3"}]}]], "Input",
 CellChangeTimes->{{3.8915009858409863`*^9, 3.891501005568364*^9}, {
  3.8915010535812635`*^9, 3.891501054311576*^9}, {3.891502217995467*^9, 
  3.8915022298270245`*^9}}],

Cell[BoxData["0.01`"], "Output",
 CellChangeTimes->{3.891921975530156*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deltay", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ycoordinates", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "-", 
     RowBox[{"ycoordinates", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "1*^-3"}]}]], "Input",
 CellChangeTimes->{{3.8915010616676493`*^9, 3.8915010666116104`*^9}, 
   3.891502226274884*^9, {3.8915022639211254`*^9, 3.8915022696642118`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(ycoordinates \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219755869207`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(ycoordinates \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921975614846*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(ycoordinates \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219756398096`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921975654744*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{
    "ycoordinates", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
   "+", 
   RowBox[{
   "ycoordinates", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  "1000"]], "Output",
 CellChangeTimes->{3.891921975657731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lx", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"xcoordinates", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "-", 
     RowBox[{"xcoordinates", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "1*^-3"}]}]], "Input",
 CellChangeTimes->{{3.891501068526762*^9, 3.89150107909754*^9}, {
  3.891502282191569*^9, 3.8915022865441585`*^9}}],

Cell[BoxData["0.18999999999999995`"], "Output",
 CellChangeTimes->{3.891921975708621*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ly", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ycoordinates", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "-", 
     RowBox[{"ycoordinates", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "1*^-3"}]}]], "Input",
 CellChangeTimes->{{3.891501068526762*^9, 3.89150107909754*^9}, {
  3.891501115299937*^9, 3.8915011228187017`*^9}, {3.8915022900471897`*^9, 
  3.891502295167855*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(ycoordinates \
\[LeftDoubleBracket] \\(\\(-1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
longer than depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219757426443`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(ycoordinates \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219757695723`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"ycoordinates", "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
   RowBox[{
   "ycoordinates", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  "1000"]], "Output",
 CellChangeTimes->{3.891921975774102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nx", "=", 
  RowBox[{"Length", "[", "xcoordinates", "]"}]}]], "Input",
 CellChangeTimes->{{3.8915010150240183`*^9, 3.89150104228769*^9}, {
  3.8915011356231937`*^9, 3.891501136653329*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.891921975786692*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ny", "=", 
  RowBox[{"Length", "[", "ycoordinates", "]"}]}]], "Input",
 CellChangeTimes->{{3.8915011547522264`*^9, 3.891501165720293*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8919219757998047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deltakx", "=", 
  RowBox[{"2", " ", 
   RowBox[{"Pi", "/", 
    RowBox[{"(", 
     RowBox[{"deltax", " ", "Nx"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8915009580365343`*^9, 3.8915009797938614`*^9}, {
  3.891501207137442*^9, 3.8915012152123528`*^9}}],

Cell[BoxData["31.41592653589793`"], "Output",
 CellChangeTimes->{3.8919219758093696`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deltaky", "=", 
  RowBox[{"2", " ", 
   RowBox[{"Pi", "/", 
    RowBox[{"(", 
     RowBox[{"deltay", " ", "Ny"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8915009580365343`*^9, 3.8915009797938614`*^9}, {
  3.891501207137442*^9, 3.891501230790089*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219758462667`*^9}],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{3.8919219758553576`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"freq", "=", "1.575*^9"}]], "Input",
 CellChangeTimes->{{3.891501391506509*^9, 3.8915013925837173`*^9}, {
  3.8915014600914493`*^9, 3.891501466739805*^9}}],

Cell[BoxData["1.575`*^9"], "Output",
 CellChangeTimes->{3.8919219758681307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c0", "=", "299792458"}]], "Input",
 CellChangeTimes->{{3.8915014773950973`*^9, 3.8915014831703677`*^9}, {
  3.8915015607943196`*^9, 3.8915015649178824`*^9}}],

Cell[BoxData["299792458"], "Output",
 CellChangeTimes->{3.891921975881784*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k0", "=", 
  RowBox[{"2", " ", "Pi", " ", 
   RowBox[{"freq", "/", "c0"}]}]}]], "Input",
 CellChangeTimes->{{3.8915015830615196`*^9, 3.891501604844331*^9}}],

Cell[BoxData["33.009559095738986`"], "Output",
 CellChangeTimes->{3.8919219758963475`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lambda0", "=", 
  RowBox[{"c0", "/", "freq"}]}]], "Input",
 CellChangeTimes->{{3.89150161105088*^9, 3.8915016204998407`*^9}}],

Cell[BoxData["0.1903444177777778`"], "Output",
 CellChangeTimes->{3.8919219759100237`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"kxcoordinatesMatrix", "=", 
   RowBox[{"deltakx", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"dimension", "/", "2"}]}], ",", 
        RowBox[{"i", "-", "1"}], ",", 
        RowBox[{"i", "-", "1", "-", "dimension"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dimension"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dimension"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8915016983983555`*^9, 3.8915017483257403`*^9}, {
   3.891501900453102*^9, 3.8915019210357685`*^9}, 3.891502019854575*^9, {
   3.891502092346031*^9, 3.8915020942688475`*^9}, {3.891502352412873*^9, 
   3.891502404033829*^9}, {3.891502438985358*^9, 3.8915024434491625`*^9}, {
   3.8915024755913563`*^9, 3.8915024756801167`*^9}, {3.8915025105103025`*^9, 
   3.8915025488337345`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"dimension", "/", "2"}]}], ",", 
       RowBox[{"i", "-", "1"}], ",", 
       RowBox[{"i", "-", "1", "-", "dimension"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "dimension"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "dimension"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8915129042555313`*^9, 3.8915129067939777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "kxcoordinatesMatrix", "]"}]], "Input",
 CellChangeTimes->{{3.891501926793685*^9, 3.8915019357304*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.891921975926268*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"kxcoordinatesMatrix", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.8914242908689957`*^9, {3.8914981769367013`*^9, 3.8914981900531445`*^9}, 
   3.8915019597537346`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxd2D2OFDEQBtCGaMMJJpigg6bUsizLsvyXwxk4AhIxV+GoHAGtCNC+Tkov
tezqr+rLj1/ff34+juP3p+N4r/++P18/1uPbR7/hB37iFz7xhQPfOOGMC664
4Y4HnnjhjT036xt+4Cd+4RNfOPCNE8644Iob7njgiRfe2HvmuVkf+Ilf+MQX
DnzjhDMuuOKGOx544oU39l16zzw36xO/8IkvHPjGCWdccMUNdzzwxAtvbB/z
XXrPPDfrC5/4woFvnHDGBVfccMcDT7zwxvZ9+5jv0nvmuVlPfOHAN04444Ir
brjjgSdeeGP/k/Z9+5jv0nvmuVkvHPjGCWdccMUNdzzwxAtvbK7wP2nft4/5
Lr1nnps18I0TzrjgihvueOCJF97YHGau8D9p37eP+S69Z56b9cYJZ1xwxQ13
PPDEC29sbjWHmSv8T9r37WO+S+9ZYGvCGRdcccMdDzzxwhub882t5jBzhf9J
+759zHcZ2HOzZlxwxQ13PPDEC2/sXGTON7eaw8wV/ift+/axwN4zz81acMUN
dzzwxAtv7BzpXGTON7eaw8wV/ift+4F9l94zz81accMdDzzxwhs7dztHOheZ
882t5jBzhf/JwPYx36X3zHOzNtzxwBMvvLF7Cudu50jnInO+udUcZq4IbN+3
j/kuvWeem7XjgSdeeGP3Ou4pnLudI52LzPnmVnNYYP+T9n37mO/Se+a5WQee
eOGN3YO513FP4dztHOlcZM43twY2V/iftO/bx3yX3jPPzTrxwhu7N3QP5l7H
PYVzt3Okc5E5P7A5zFzhf9K+bx/zXXrPPDfrwhu7Z3Vv6B7MvY57Cudu50jn
osDmVnOYucL/pH3fPua79J55btaN3Uu7Z3Vv6B7MvY57Cudu58jA5nxzqznM
XOF/0r5vH/Ndes88t//1L+tuVnY=
      "], {{
        GrayLevel[0.8], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1: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
L8zoHVELyff+UnNHXWSb56Legf7xf71spiQ=
          "]]]}, {}, {}, {}, {}}, VertexColors -> CompressedData["
1:eJztyN1LU2EcAODjkZkRrgJNQ0K3YqubyjA1Xf3MYU5THIOaRFoOV6BFJjSo
XEZeiBNtKRRCnsYaikPQHCW5WhhLJ65w5iZLrbnPzs7ZIi9aTRb1d7y8Vw88
PMUNmZIkCEKbRBDJ//WrSnybeSzonplPtMhYSDCxuVuXaMCPxsumTOMiGwv3
a6xnqrIYiMclx9elIfyI/Da7eLg9NQIdm/0kp5mGHaWWrvKsAH5EPm570xpW
s2CsPxxQmYMg3CmwkZNe/Ih8jbM2PTbNQMDAs5365ANw3THmV3jwI/ISS0bn
wLkwGOSxkfpiD9wbHZwhXq/iR+TPNvSJ0qjvkPv5He9Cjhte+d1rRmIFPyL/
0y2mf3UGgeL2iIoHHJBYTD1a1LKEH5Fv7KqcOR30QdOP1uU+7Syob7rjf9fs
+BH59ore7XmZG6CZC29lrLwEXUKye+/5D/gR+dnucVV6yApRR3Z0/5QFVvX2
lMEmGj8irymjyoPPF0Dwx8l/PPYRcguuO7UlDH5EXkfVHJpcdMCuujJlqMEF
/dyUiXU7ix+RL5jvfpB0dwW+PdKb5kNfgV+lMSoMEfyIPClRDSRfXQeNid+s
r/WB1x17e1EQxY/IO1anKa91AwrzlSM5y0FYOKI2pzXiR+WvFAq5o1o/yG9z
nr6Q0qBTfdlXvQc/Ku+pKBKSJ0Nw8MlSdqCNAYVYxr08FMGPyA/1GKXvK2ko
nbCN+eUskFuutroOFj8i/5u+5snkMHBM0UtVz7CgLxlmHh5g8CPy/wDIHGGl

       "]], {}}, AspectRatio -> 1, Frame -> True, FrameLabel -> {None, None}, 
    Method -> {}, PlotRange -> {{1., 20.}, {1., 20.}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[
           NCache[{{0}, {
              Rational[1, 200]}, {
              Rational[1, 100]}, {
              Rational[3, 200]}, {
              Rational[1, 50]}, {
              Rational[1, 40]}, {
              Rational[3, 100]}, {
              Rational[7, 200]}, {
              Rational[1, 25]}, {
              Rational[9, 200]}, {
              Rational[1, 20]}, {
              Rational[11, 200]}, {
              Rational[3, 50]}, {
              Rational[13, 200]}, {
              Rational[7, 100]}, {
              Rational[3, 40]}, {
              Rational[2, 25]}, {
              Rational[17, 200]}, {
              Rational[9, 100]}, {
              Rational[19, 200]}, {
              Rational[1, 10]}, {
              Rational[21, 200]}, {
              Rational[11, 100]}, {
              Rational[23, 200]}, {
              Rational[3, 25]}, {
              Rational[1, 8]}, {
              Rational[13, 100]}, {
              Rational[27, 200]}, {
              Rational[7, 50]}, {
              Rational[29, 200]}, {
              Rational[3, 20]}, {
              Rational[31, 200]}, {
              Rational[4, 25]}, {
              Rational[33, 200]}, {
              Rational[17, 100]}, {
              Rational[7, 40]}, {
              Rational[9, 50]}, {
              Rational[37, 200]}, {
              Rational[19, 100]}, {
              Rational[39, 200]}, {
              Rational[1, 5]}, {
              Rational[41, 200]}, {
              Rational[21, 100]}, {
              Rational[43, 200]}, {
              Rational[11, 50]}, {
              Rational[9, 40]}, {
              Rational[23, 100]}, {
              Rational[47, 200]}, {
              Rational[6, 25]}, {
              Rational[49, 200]}, {
              Rational[1, 4]}, {
              Rational[51, 200]}, {
              Rational[13, 50]}, {
              Rational[53, 200]}, {
              Rational[27, 100]}, {
              Rational[11, 40]}, {
              Rational[7, 25]}, {
              Rational[57, 200]}, {
              Rational[29, 100]}, {
              Rational[59, 200]}, {
              Rational[3, 10]}, {
              Rational[61, 200]}, {
              Rational[31, 100]}, {
              Rational[63, 200]}, {
              Rational[8, 25]}, {
              Rational[13, 40]}, {
              Rational[33, 100]}, {
              Rational[67, 200]}, {
              Rational[17, 50]}, {
              Rational[69, 200]}, {
              Rational[7, 20]}, {
              Rational[71, 200]}, {
              Rational[9, 25]}, {
              Rational[73, 200]}, {
              Rational[37, 100]}, {
              Rational[3, 8]}, {
              Rational[19, 50]}, {
              Rational[77, 200]}, {
              Rational[39, 100]}, {
              Rational[79, 200]}, {
              Rational[2, 5]}, {
              Rational[81, 200]}, {
              Rational[41, 100]}, {
              Rational[83, 200]}, {
              Rational[21, 50]}, {
              Rational[17, 40]}, {
              Rational[43, 100]}, {
              Rational[87, 200]}, {
              Rational[11, 25]}, {
              Rational[89, 200]}, {
              Rational[9, 20]}, {
              Rational[91, 200]}, {
              Rational[23, 50]}, {
              Rational[93, 200]}, {
              Rational[47, 100]}, {
              Rational[19, 40]}, {
              Rational[12, 25]}, {
              Rational[97, 200]}, {
              Rational[49, 100]}, {
              Rational[99, 200]}, {
              Rational[1, 2]}, {
              Rational[101, 200]}, {
              Rational[51, 100]}, {
              Rational[103, 200]}, {
              Rational[13, 25]}, {
              Rational[21, 40]}, {
              Rational[53, 100]}, {
              Rational[107, 200]}, {
              Rational[27, 50]}, {
              Rational[109, 200]}, {
              Rational[11, 20]}, {
              Rational[111, 200]}, {
              Rational[14, 25]}, {
              Rational[113, 200]}, {
              Rational[57, 100]}, {
              Rational[23, 40]}, {
              Rational[29, 50]}, {
              Rational[117, 200]}, {
              Rational[59, 100]}, {
              Rational[119, 200]}, {
              Rational[3, 5]}, {
              Rational[121, 200]}, {
              Rational[61, 100]}, {
              Rational[123, 200]}, {
              Rational[31, 50]}, {
              Rational[5, 8]}, {
              Rational[63, 100]}, {
              Rational[127, 200]}, {
              Rational[16, 25]}, {
              Rational[129, 200]}, {
              Rational[13, 20]}, {
              Rational[131, 200]}, {
              Rational[33, 50]}, {
              Rational[133, 200]}, {
              Rational[67, 100]}, {
              Rational[27, 40]}, {
              Rational[17, 25]}, {
              Rational[137, 200]}, {
              Rational[69, 100]}, {
              Rational[139, 200]}, {
              Rational[7, 10]}, {
              Rational[141, 200]}, {
              Rational[71, 100]}, {
              Rational[143, 200]}, {
              Rational[18, 25]}, {
              Rational[29, 40]}, {
              Rational[73, 100]}, {
              Rational[147, 200]}, {
              Rational[37, 50]}, {
              Rational[149, 200]}, {
              Rational[3, 4]}, {
              Rational[151, 200]}, {
              Rational[19, 25]}, {
              Rational[153, 200]}, {
              Rational[77, 100]}, {
              Rational[31, 40]}, {
              Rational[39, 50]}, {
              Rational[157, 200]}, {
              Rational[79, 100]}, {
              Rational[159, 200]}, {
              Rational[4, 5]}, {
              Rational[161, 200]}, {
              Rational[81, 100]}, {
              Rational[163, 200]}, {
              Rational[41, 50]}, {
              Rational[33, 40]}, {
              Rational[83, 100]}, {
              Rational[167, 200]}, {
              Rational[21, 25]}, {
              Rational[169, 200]}, {
              Rational[17, 20]}, {
              Rational[171, 200]}, {
              Rational[43, 50]}, {
              Rational[173, 200]}, {
              Rational[87, 100]}, {
              Rational[7, 8]}, {
              Rational[22, 25]}, {
              Rational[177, 200]}, {
              Rational[89, 100]}, {
              Rational[179, 200]}, {
              Rational[9, 10]}, {
              Rational[181, 200]}, {
              Rational[91, 100]}, {
              Rational[183, 200]}, {
              Rational[23, 25]}, {
              Rational[37, 40]}, {
              Rational[93, 100]}, {
              Rational[187, 200]}, {
              Rational[47, 50]}, {
              Rational[189, 200]}, {
              Rational[19, 20]}, {
              Rational[191, 200]}, {
              Rational[24, 25]}, {
              Rational[193, 200]}, {
              Rational[97, 100]}, {
              Rational[39, 40]}, {
              Rational[49, 50]}, {
              Rational[197, 200]}, {
              Rational[99, 100]}, {
              Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
             0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
             0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
             0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
             0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
             0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
             0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
             0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
             0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
             0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
             0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
             0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
             0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
             0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
             0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
             0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
             0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
             0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
             0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
             0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
             0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
             0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
             0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
             0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
             0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
             0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
             0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
             0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
             0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
             1}}], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -107.22361809045226`}, 
                   Offset[{4., 0}, {7.5, -107.22361809045226`}]}, {{
                   7.5, -69.53517587939699}, 
                   Offset[{4., 0}, {7.5, -69.53517587939699}]}, {{
                   7.5, -31.84673366834171}, 
                   Offset[{4., 0}, {7.5, -31.84673366834171}]}, {{7.5, 
                   5.841708542713568}, 
                   Offset[{4., 0}, {7.5, 5.841708542713568}]}, {{7.5, 
                   43.530150753768844`}, 
                   Offset[{4., 0}, {7.5, 43.530150753768844`}]}, {{7.5, 
                   81.21859296482413}, 
                   Offset[{4., 0}, {7.5, 81.21859296482413}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -99.68592964824121}, 
                   Offset[{2.5, 0.}, {7.5, -99.68592964824121}]}, {{
                   7.5, -92.14824120603015}, 
                   Offset[{2.5, 0.}, {7.5, -92.14824120603015}]}, {{
                   7.5, -84.6105527638191}, 
                   Offset[{2.5, 0.}, {7.5, -84.6105527638191}]}, {{
                   7.5, -77.07286432160804}, 
                   Offset[{2.5, 0.}, {7.5, -77.07286432160804}]}, {{
                   7.5, -61.99748743718593}, 
                   Offset[{2.5, 0.}, {7.5, -61.99748743718593}]}, {{
                   7.5, -54.459798994974875`}, 
                   Offset[{2.5, 0.}, {7.5, -54.459798994974875`}]}, {{
                   7.5, -46.92211055276382}, 
                   Offset[{2.5, 0.}, {7.5, -46.92211055276382}]}, {{
                   7.5, -39.38442211055276}, 
                   Offset[{2.5, 0.}, {7.5, -39.38442211055276}]}, {{
                   7.5, -24.309045226130653`}, 
                   Offset[{2.5, 0.}, {7.5, -24.309045226130653`}]}, {{
                   7.5, -16.771356783919597`}, 
                   Offset[{2.5, 0.}, {7.5, -16.771356783919597`}]}, {{
                   7.5, -9.233668341708542}, 
                   Offset[{2.5, 0.}, {7.5, -9.233668341708542}]}, {{
                   7.5, -1.6959798994974875`}, 
                   Offset[{2.5, 0.}, {7.5, -1.6959798994974875`}]}, {{7.5, 
                   13.379396984924623`}, 
                   Offset[{2.5, 0.}, {7.5, 13.379396984924623`}]}, {{7.5, 
                   20.917085427135678`}, 
                   Offset[{2.5, 0.}, {7.5, 20.917085427135678`}]}, {{7.5, 
                   28.454773869346734`}, 
                   Offset[{2.5, 0.}, {7.5, 28.454773869346734`}]}, {{7.5, 
                   35.99246231155779}, 
                   Offset[{2.5, 0.}, {7.5, 35.99246231155779}]}, {{7.5, 
                   51.0678391959799}, 
                   Offset[{2.5, 0.}, {7.5, 51.0678391959799}]}, {{7.5, 
                   58.60552763819096}, 
                   Offset[{2.5, 0.}, {7.5, 58.60552763819096}]}, {{7.5, 
                   66.14321608040201}, 
                   Offset[{2.5, 0.}, {7.5, 66.14321608040201}]}, {{7.5, 
                   73.68090452261306}, 
                   Offset[{2.5, 0.}, {7.5, 73.68090452261306}]}, {{7.5, 
                   88.75628140703517}, 
                   Offset[{2.5, 0.}, {7.5, 88.75628140703517}]}, {{7.5, 
                   96.29396984924624}, 
                   Offset[{2.5, 0.}, {7.5, 96.29396984924624}]}, {{7.5, 
                   103.83165829145729`}, 
                   Offset[{2.5, 0.}, {7.5, 103.83165829145729`}]}, {{7.5, 
                   111.36934673366834`}, 
                   Offset[{2.5, 0.}, {7.5, 111.36934673366834`}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  RowBox[{"-", "300"}], 
                  Offset[{7., 0.}, {7.5, -107.22361809045226`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  RowBox[{"-", "200"}], 
                  Offset[{7., 0.}, {7.5, -69.53517587939699}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  RowBox[{"-", "100"}], 
                  Offset[{7., 0.}, {7.5, -31.84673366834171}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, 5.841708542713568}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["100", 
                  Offset[{7., 0.}, {7.5, 43.530150753768844`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["200", 
                  Offset[{7., 0.}, {7.5, 81.21859296482413}], {-1, 0.}, 
                  Automatic, {1, 0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {}}}}, Antialiasing -> False], 
           "GraphicsAxes", StripOnInput -> False]}, AspectRatio -> Automatic, 
         Frame -> True, FrameStyle -> Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "314.1592653589793`"}], ",", 
                 "282.7433388230814`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8919219759598923`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"kycoordinatesMatrix", "=", 
   RowBox[{"deltaky", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"dimension", "/", "2"}]}], ",", 
        RowBox[{"j", "-", "1"}], ",", 
        RowBox[{"j", "-", "1", "-", "dimension"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dimension"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dimension"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.89150205199645*^9, 3.8915020597556944`*^9}, {
  3.8915021054703903`*^9, 3.891502107372373*^9}, {3.891502584787752*^9, 
  3.8915025918839426`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219760119*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219760388317`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219760667534`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Infinity \
:: indet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219760837116`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"kycoordinatesMatrix", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.8914242908689957`*^9, {3.8914981769367013`*^9, 3.8914981900531445`*^9}, 
   3.8915019597537346`*^9, {3.8915020700992355`*^9, 3.8915020704355736`*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 1, Frame -> True, 
    FrameLabel -> {None, None}, Method -> {}, 
    PlotRange -> {{0., 0.}, {0., 0.}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[CompressedData["
1:eJxF0jloVFEUxvGJZerYRuxiba2nTNqkTiWopRGsYmvaJIVNLARJQAQZDCpG
UUkcs2+zv9nn7ftiM9bOu/MHLwyz3XPO9zsztx88WXp4o1AonI4fU4X/5/lM
cd5YfSaT5xeyN7sWLe6t8/6lvNpSh89fS7yYv3rD9zsyrW2v3Jt+y713cmd5
49do7j33i7Iz/lbb/kDdrtxV5yP1n6Q0mhtXfKbPF1maFNLvqxir+cVv9P0u
T/N2Kz/o/1Mmin3m7MuCKjhg3oHkVeNS5pZEjdFKzP8tt/I2s4fkOJTHj/Jz
RJ5jyW/NFI/JdSJ/82ujE/Kdyn118YycZ6LarZ2T90IuL9Qh96XcVA2vyH8l
6tryNY4yc8p4yswr46owt4Kvwvwqzio5qnhr5KnhrpGrjr9Ovjp7aJCzwT4a
5G2ylya5m+xHI7/GnjQcLRwtHC0cLRxtHG0cbRwd2VSODo4Oji6OLo4ujh6O
Ho4ejj6OPo4+jgGOAY4BjiGOIY4hDp05Oh6deTounbk6Pp35Bk6DHAZegzwG
boNcJn6TfCa/p0lOk32Y5LXYi0Vui/1Y5LfYk4XDxmHjsHHYOGwcNg4bh4PD
weHgcHA4OBwcLg4Xh4vDxeHicHF4ODwcHg4Ph4fDw+Hj8HH4OHwcPg4fh48j
wBHgCHAEOAIcAY4QR4gj5H8Z4ghxhDgiHBGOCEeEI8IR4YhxxDhiHDGOGEeM
I8aR4EhwJDgSHAmOBEeKI8WR4khxpDhSHBmODEeGI8OR4chw/JF/3eEbIw==

           "], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -112.5}, 
                   Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                   Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                   Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                   Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                   Offset[{4., 0}, {7.5, 112.5}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -101.25}, 
                   Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                   Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                   Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                   Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                   Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                   Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                   Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                   Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                   Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                   Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                   Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                   Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                   Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                   Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                   Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                   Offset[{2.5, 0.}, {7.5, 101.25}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                  0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> 
           False]}, AspectRatio -> Automatic, Frame -> True, FrameStyle -> 
         Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8919219761135693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["k0"], "Input",
 CellChangeTimes->{{3.8915021812191105`*^9, 3.891502183548791*^9}}],

Cell[BoxData["33.009559095738986`"], "Output",
 CellChangeTimes->{3.891921976137571*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"w2", "=", 
   RowBox[{
    RowBox[{"k0", "^", "2"}], "-", 
    RowBox[{"kxcoordinatesMatrix", "^", "2"}], "-", 
    RowBox[{"kycoordinatesMatrix", "^", "2"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.8914987072100687`*^9, {3.891501638091189*^9, 3.8915016664640627`*^9}, {
   3.8915021414070845`*^9, 3.891502152814991*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"w2", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8915021650061297`*^9, 3.8915021653581686`*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 1, Frame -> True, 
    FrameLabel -> {None, None}, Method -> {}, 
    PlotRange -> {{0., 0.}, {0., 0.}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[CompressedData["
1:eJxF0jloVFEUxvGJZerYRuxiba2nTNqkTiWopRGsYmvaJIVNLARJQAQZDCpG
UUkcs2+zv9nn7ftiM9bOu/MHLwyz3XPO9zsztx88WXp4o1AonI4fU4X/5/lM
cd5YfSaT5xeyN7sWLe6t8/6lvNpSh89fS7yYv3rD9zsyrW2v3Jt+y713cmd5
49do7j33i7Iz/lbb/kDdrtxV5yP1n6Q0mhtXfKbPF1maFNLvqxir+cVv9P0u
T/N2Kz/o/1Mmin3m7MuCKjhg3oHkVeNS5pZEjdFKzP8tt/I2s4fkOJTHj/Jz
RJ5jyW/NFI/JdSJ/82ujE/Kdyn118YycZ6LarZ2T90IuL9Qh96XcVA2vyH8l
6tryNY4yc8p4yswr46owt4Kvwvwqzio5qnhr5KnhrpGrjr9Ovjp7aJCzwT4a
5G2ylya5m+xHI7/GnjQcLRwtHC0cLRxtHG0cbRwd2VSODo4Oji6OLo4ujh6O
Ho4ejj6OPo4+jgGOAY4BjiGOIY4hDp05Oh6deTounbk6Pp35Bk6DHAZegzwG
boNcJn6TfCa/p0lOk32Y5LXYi0Vui/1Y5LfYk4XDxmHjsHHYOGwcNg4bh4PD
weHgcHA4OBwcLg4Xh4vDxeHicHF4ODwcHg4Ph4fDw+Hj8HH4OHwcPg4fh48j
wBHgCHAEOAIcAY4QR4gj5H8Z4ghxhDgiHBGOCEeEI8IR4YhxxDhiHDGOGEeM
I8aR4EhwJDgSHAmOBEeKI8WR4khxpDhSHBmODEeGI8OR4chw/JF/3eEbIw==

           "], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -112.5}, 
                   Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                   Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                   Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                   Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                   Offset[{4., 0}, {7.5, 112.5}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -101.25}, 
                   Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                   Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                   Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                   Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                   Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                   Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                   Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                   Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                   Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                   Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                   Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                   Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                   Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                   Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                   Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                   Offset[{2.5, 0.}, {7.5, 101.25}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                  0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> 
           False]}, AspectRatio -> Automatic, Frame -> True, FrameStyle -> 
         Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.891921976175293*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"Conjugate", "[", 
    RowBox[{"Sqrt", "[", "w2", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.891502618542268*^9, 3.891502629330487*^9}, {
  3.8915032671367736`*^9, 3.8915032729443617`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Re", "[", "w", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8915021650061297`*^9, 3.8915021653581686`*^9}, {
  3.8915026520242343`*^9, 3.891502661528068*^9}, {3.8915027209823685`*^9, 
  3.891502763148498*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 1, Frame -> True, 
    FrameLabel -> {None, None}, Method -> {}, PlotRange -> {All, All}, 
    PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[CompressedData["
1:eJxF0jloVFEUxvGJZerYRuxiba2nTNqkTiWopRGsYmvaJIVNLARJQAQZDCpG
UUkcs2+zv9nn7ftiM9bOu/MHLwyz3XPO9zsztx88WXp4o1AonI4fU4X/5/lM
cd5YfSaT5xeyN7sWLe6t8/6lvNpSh89fS7yYv3rD9zsyrW2v3Jt+y713cmd5
49do7j33i7Iz/lbb/kDdrtxV5yP1n6Q0mhtXfKbPF1maFNLvqxir+cVv9P0u
T/N2Kz/o/1Mmin3m7MuCKjhg3oHkVeNS5pZEjdFKzP8tt/I2s4fkOJTHj/Jz
RJ5jyW/NFI/JdSJ/82ujE/Kdyn118YycZ6LarZ2T90IuL9Qh96XcVA2vyH8l
6tryNY4yc8p4yswr46owt4Kvwvwqzio5qnhr5KnhrpGrjr9Ovjp7aJCzwT4a
5G2ylya5m+xHI7/GnjQcLRwtHC0cLRxtHG0cbRwd2VSODo4Oji6OLo4ujh6O
Ho4ejj6OPo4+jgGOAY4BjiGOIY4hDp05Oh6deTounbk6Pp35Bk6DHAZegzwG
boNcJn6TfCa/p0lOk32Y5LXYi0Vui/1Y5LfYk4XDxmHjsHHYOGwcNg4bh4PD
weHgcHA4OBwcLg4Xh4vDxeHicHF4ODwcHg4Ph4fDw+Hj8HH4OHwcPg4fh48j
wBHgCHAEOAIcAY4QR4gj5H8Z4ghxhDgiHBGOCEeEI8IR4YhxxDhiHDGOGEeM
I8aR4EhwJDgSHAmOBEeKI8WR4khxpDhSHBmODEeGI8OR4chw/JF/3eEbIw==

           "], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -112.5}, 
                   Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                   Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                   Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                   Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                   Offset[{4., 0}, {7.5, 112.5}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -101.25}, 
                   Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                   Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                   Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                   Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                   Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                   Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                   Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                   Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                   Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                   Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                   Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                   Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                   Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                   Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                   Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                   Offset[{2.5, 0.}, {7.5, 101.25}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                  0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> 
           False]}, AspectRatio -> Automatic, Frame -> True, FrameStyle -> 
         Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.891921976224533*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Im", "[", "w", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8915021650061297`*^9, 3.8915021653581686`*^9}, {
  3.8915026520242343`*^9, 3.891502661528068*^9}, {3.8915027209823685`*^9, 
  3.891502754180603*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 1, Frame -> True, 
    FrameLabel -> {None, None}, Method -> {}, PlotRange -> {All, All}, 
    PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[CompressedData["
1:eJxF0jloVFEUxvGJZerYRuxiba2nTNqkTiWopRGsYmvaJIVNLARJQAQZDCpG
UUkcs2+zv9nn7ftiM9bOu/MHLwyz3XPO9zsztx88WXp4o1AonI4fU4X/5/lM
cd5YfSaT5xeyN7sWLe6t8/6lvNpSh89fS7yYv3rD9zsyrW2v3Jt+y713cmd5
49do7j33i7Iz/lbb/kDdrtxV5yP1n6Q0mhtXfKbPF1maFNLvqxir+cVv9P0u
T/N2Kz/o/1Mmin3m7MuCKjhg3oHkVeNS5pZEjdFKzP8tt/I2s4fkOJTHj/Jz
RJ5jyW/NFI/JdSJ/82ujE/Kdyn118YycZ6LarZ2T90IuL9Qh96XcVA2vyH8l
6tryNY4yc8p4yswr46owt4Kvwvwqzio5qnhr5KnhrpGrjr9Ovjp7aJCzwT4a
5G2ylya5m+xHI7/GnjQcLRwtHC0cLRxtHG0cbRwd2VSODo4Oji6OLo4ujh6O
Ho4ejj6OPo4+jgGOAY4BjiGOIY4hDp05Oh6deTounbk6Pp35Bk6DHAZegzwG
boNcJn6TfCa/p0lOk32Y5LXYi0Vui/1Y5LfYk4XDxmHjsHHYOGwcNg4bh4PD
weHgcHA4OBwcLg4Xh4vDxeHicHF4ODwcHg4Ph4fDw+Hj8HH4OHwcPg4fh48j
wBHgCHAEOAIcAY4QR4gj5H8Z4ghxhDgiHBGOCEeEI8IR4YhxxDhiHDGOGEeM
I8aR4EhwJDgSHAmOBEeKI8WR4khxpDhSHBmODEeGI8OR4chw/JF/3eEbIw==

           "], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -112.5}, 
                   Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                   Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                   Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                   Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                   Offset[{4., 0}, {7.5, 112.5}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -101.25}, 
                   Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                   Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                   Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                   Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                   Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                   Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                   Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                   Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                   Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                   Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                   Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                   Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                   Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                   Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                   Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                   Offset[{2.5, 0.}, {7.5, 101.25}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                  0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> 
           False]}, AspectRatio -> Automatic, Frame -> True, FrameStyle -> 
         Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8919219762645655`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"Re", "[", "w", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8915087029129267`*^9, 3.891508705481109*^9}}],

Cell[BoxData[
 TemplateBox[{
  Graphics3DBox[{}, Axes -> True, AxesLabel -> {None, None, None}, 
    BoxRatios -> {1, 1, 0.4}, Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, PlotRange -> {All, All, All}, 
    PlotRangePadding -> {Automatic, Automatic, Automatic}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[CompressedData["
1:eJxF0jloVFEUxvGJZerYRuxiba2nTNqkTiWopRGsYmvaJIVNLARJQAQZDCpG
UUkcs2+zv9nn7ftiM9bOu/MHLwyz3XPO9zsztx88WXp4o1AonI4fU4X/5/lM
cd5YfSaT5xeyN7sWLe6t8/6lvNpSh89fS7yYv3rD9zsyrW2v3Jt+y713cmd5
49do7j33i7Iz/lbb/kDdrtxV5yP1n6Q0mhtXfKbPF1maFNLvqxir+cVv9P0u
T/N2Kz/o/1Mmin3m7MuCKjhg3oHkVeNS5pZEjdFKzP8tt/I2s4fkOJTHj/Jz
RJ5jyW/NFI/JdSJ/82ujE/Kdyn118YycZ6LarZ2T90IuL9Qh96XcVA2vyH8l
6tryNY4yc8p4yswr46owt4Kvwvwqzio5qnhr5KnhrpGrjr9Ovjp7aJCzwT4a
5G2ylya5m+xHI7/GnjQcLRwtHC0cLRxtHG0cbRwd2VSODo4Oji6OLo4ujh6O
Ho4ejj6OPo4+jgGOAY4BjiGOIY4hDp05Oh6deTounbk6Pp35Bk6DHAZegzwG
boNcJn6TfCa/p0lOk32Y5LXYi0Vui/1Y5LfYk4XDxmHjsHHYOGwcNg4bh4PD
weHgcHA4OBwcLg4Xh4vDxeHicHF4ODwcHg4Ph4fDw+Hj8HH4OHwcPg4fh48j
wBHgCHAEOAIcAY4QR4gj5H8Z4ghxhDgiHBGOCEeEI8IR4YhxxDhiHDGOGEeM
I8aR4EhwJDgSHAmOBEeKI8WR4khxpDhSHBmODEeGI8OR4chw/JF/3eEbIw==

           "], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -112.5}, 
                   Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                   Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                   Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                   Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                   Offset[{4., 0}, {7.5, 112.5}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -101.25}, 
                   Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                   Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                   Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                   Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                   Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                   Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                   Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                   Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                   Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                   Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                   Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                   Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                   Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                   Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                   Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                   Offset[{2.5, 0.}, {7.5, 101.25}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                  0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> 
           False]}, AspectRatio -> Automatic, Frame -> True, FrameStyle -> 
         Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkerSize", "\[Rule]", 
           RowBox[{"360", " ", "Null"}]}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.891921976304967*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"10", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"10.", ",", 
      RowBox[{
       RowBox[{"Re", "[", "w", "]"}], "+", "1*^-12"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8914243581814737`*^9, 3.891424361775352*^9}, {
  3.891424810479933*^9, 3.891424815514135*^9}, {3.8915027753714266`*^9, 
  3.891502776667509*^9}, {3.8915086781537*^9, 3.8915086851684923`*^9}, {
  3.8915088576721115`*^9, 3.891508866304552*^9}}],

Cell[BoxData[
 TemplateBox[{
  Graphics3DBox[{}, Axes -> True, AxesLabel -> {None, None, None}, 
    BoxRatios -> {1, 1, 0.4}, Lighting -> "Neutral", 
    Method -> {"RotationControl" -> "Globe"}, PlotRange -> {All, All, All}, 
    PlotRangePadding -> {Automatic, Automatic, Automatic}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[CompressedData["
1:eJxF0jloVFEUxvGJZerYRuxiba2nTNqkTiWopRGsYmvaJIVNLARJQAQZDCpG
UUkcs2+zv9nn7ftiM9bOu/MHLwyz3XPO9zsztx88WXp4o1AonI4fU4X/5/lM
cd5YfSaT5xeyN7sWLe6t8/6lvNpSh89fS7yYv3rD9zsyrW2v3Jt+y713cmd5
49do7j33i7Iz/lbb/kDdrtxV5yP1n6Q0mhtXfKbPF1maFNLvqxir+cVv9P0u
T/N2Kz/o/1Mmin3m7MuCKjhg3oHkVeNS5pZEjdFKzP8tt/I2s4fkOJTHj/Jz
RJ5jyW/NFI/JdSJ/82ujE/Kdyn118YycZ6LarZ2T90IuL9Qh96XcVA2vyH8l
6tryNY4yc8p4yswr46owt4Kvwvwqzio5qnhr5KnhrpGrjr9Ovjp7aJCzwT4a
5G2ylya5m+xHI7/GnjQcLRwtHC0cLRxtHG0cbRwd2VSODo4Oji6OLo4ujh6O
Ho4ejj6OPo4+jgGOAY4BjiGOIY4hDp05Oh6deTounbk6Pp35Bk6DHAZegzwG
boNcJn6TfCa/p0lOk32Y5LXYi0Vui/1Y5LfYk4XDxmHjsHHYOGwcNg4bh4PD
weHgcHA4OBwcLg4Xh4vDxeHicHF4ODwcHg4Ph4fDw+Hj8HH4OHwcPg4fh48j
wBHgCHAEOAIcAY4QR4gj5H8Z4ghxhDgiHBGOCEeEI8IR4YhxxDhiHDGOGEeM
I8aR4EhwJDgSHAmOBEeKI8WR4khxpDhSHBmODEeGI8OR4chw/JF/3eEbIw==

           "], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -112.5}, 
                   Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                   Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                   Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                   Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                   Offset[{4., 0}, {7.5, 112.5}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -101.25}, 
                   Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                   Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                   Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                   Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                   Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                   Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                   Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                   Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                   Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                   Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                   Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                   Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                   Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                   Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                   Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                   Offset[{2.5, 0.}, {7.5, 101.25}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                  0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> 
           False]}, AspectRatio -> Automatic, Frame -> True, FrameStyle -> 
         Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkerSize", "\[Rule]", 
           RowBox[{"360", " ", "Null"}]}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.891921976347238*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"index2", "=", "66"}]], "Input",
 CellChangeTimes->{{3.8914239143561573`*^9, 3.8914239169380007`*^9}, 
   3.8915028217707834`*^9, {3.891502876551691*^9, 3.891502878646974*^9}, {
   3.8915036484202104`*^9, 3.891503680060055*^9}}],

Cell[BoxData["66"], "Output",
 CellChangeTimes->{3.8919219763683157`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zcoordinateselected2", "=", 
  RowBox[{
   RowBox[{"zcoordinates", "[", 
    RowBox[{"[", "index2", "]"}], "]"}], "*", "1.*^-3"}]}]], "Input",
 CellChangeTimes->{{3.8914236970084934`*^9, 3.8914237108728905`*^9}, {
   3.89142391977092*^9, 3.8914239209494867`*^9}, 3.8915028285532618`*^9, {
   3.891502915333672*^9, 3.8915029175735393`*^9}, {3.8915034155790987`*^9, 
   3.891503417499256*^9}, 3.89150368786789*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(zcoordinates \
\[LeftDoubleBracket] 66 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.89192197640127*^9}],

Cell[BoxData[
 RowBox[{"0.001`", " ", 
  RowBox[{
  "zcoordinates", "\[LeftDoubleBracket]", "66", 
   "\[RightDoubleBracket]"}]}]], "Output",
 CellChangeTimes->{3.8919219764034653`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"phaseShift", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "I"}], " ", "w", " ", 
     RowBox[{"(", 
      RowBox[{"zcoordinateselected2", "-", "zcoordinateselected1"}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8915029229232917`*^9, 3.8915029551963496`*^9}, 
   3.891503045045659*^9, {3.891503357445776*^9, 3.8915033576134014`*^9}, {
   3.8915034337633142`*^9, 3.8915034339874973`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\[ExponentialE]\\^ComplexInfinity\\)\[NoBreak] encountered. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/indet\\\", \
ButtonNote -> \\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219764377003`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\[ExponentialE]\\^ComplexInfinity\\)\[NoBreak] encountered. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/indet\\\", \
ButtonNote -> \\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219764656253`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\[ExponentialE]\\^ComplexInfinity\\)\[NoBreak] encountered. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/indet\\\", \
ButtonNote -> \\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.89192197649654*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Infinity \
:: indet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921976509449*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"datavaluesEzPlane2w", "=", 
   RowBox[{"datavaluesEzPlane1w", "*", "phaseShift"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8915028081698728`*^9, 3.8915028082576632`*^9}, {
  3.8915029581965504`*^9, 3.8915029677483363`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"datavaluesEzReconstructedPlane2", "=", 
   RowBox[{"InverseFourier", "[", 
    RowBox[{"datavaluesEzPlane2w", ",", 
     RowBox[{"FourierParameters", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.8915030108754416`*^9, 3.8915031008321295`*^9, {3.8915031337259636`*^9, 
   3.891503146812335*^9}, {3.8915037811289263`*^9, 3.891503783448991*^9}, {
   3.8915038981709385`*^9, 3.8915039022546926`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InverseFourier", "::", "fftl"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\({\\(\\({Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate}\\)\\), \\(\\({\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] 17 \
\[RightSkeleton]\\)\\), \\(\\({Indeterminate, Indeterminate, \\(\\(\
\[LeftSkeleton] 16 \[RightSkeleton]\\)\\), Indeterminate, \
Indeterminate}\\)\\)}\\)\[NoBreak] is not a non-empty list or rectangular \
array of numeric quantities. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InverseFourier/fftl\\\", ButtonNote -> \
\\\"InverseFourier::fftl\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219765458364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"datavaluesEzReconstructedPlane2", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8915032053065467`*^9, 3.891503207259431*^9}, 
   3.891503908086918*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "Indeterminate", ",", "Indeterminate"}], "}"}]], "Output",
 CellChangeTimes->{3.8919219765605316`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "datavaluesEzPlane1", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891424122442993*^9, 3.891424126307997*^9}, {
   3.8914242178525667`*^9, 3.8914242222439575`*^9}, 3.89149813038586*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxd2D2OFDEQBtCGaMMJJpigg6bUsizLsvyXwxk4AhIxV+GoHAGtCNC+Tkov
tezqr+rLj1/ff34+juP3p+N4r/++P18/1uPbR7/hB37iFz7xhQPfOOGMC664
4Y4HnnjhjT036xt+4Cd+4RNfOPCNE8644Iob7njgiRfe2HvmuVkf+Ilf+MQX
DnzjhDMuuOKGOx544oU39l16zzw36xO/8IkvHPjGCWdccMUNdzzwxAtvbB/z
XXrPPDfrC5/4woFvnHDGBVfccMcDT7zwxvZ9+5jv0nvmuVlPfOHAN04444Ir
brjjgSdeeGP/k/Z9+5jv0nvmuVkvHPjGCWdccMUNdzzwxAtvbK7wP2nft4/5
Lr1nnps18I0TzrjgihvueOCJF97YHGau8D9p37eP+S69Z56b9cYJZ1xwxQ13
PPDEC29sbjWHmSv8T9r37WO+S+9ZYGvCGRdcccMdDzzxwhub882t5jBzhf9J
+759zHcZ2HOzZlxwxQ13PPDEC2/sXGTON7eaw8wV/ift+/axwN4zz81acMUN
dzzwxAtv7BzpXGTON7eaw8wV/ift+4F9l94zz81accMdDzzxwhs7dztHOheZ
882t5jBzhf/JwPYx36X3zHOzNtzxwBMvvLF7Cudu50jnInO+udUcZq4IbN+3
j/kuvWeem7XjgSdeeGP3Ou4pnLudI52LzPnmVnNYYP+T9n37mO/Se+a5WQee
eOGN3YO513FP4dztHOlcZM43twY2V/iftO/bx3yX3jPPzTrxwhu7N3QP5l7H
PYVzt3Okc5E5P7A5zFzhf9K+bx/zXXrPPDfrwhu7Z3Vv6B7MvY57Cudu50jn
osDmVnOYucL/pH3fPua79J55btaN3Uu7Z3Vv6B7MvY57Cudu58jA5nxzqznM
XOF/0r5vH/Ndes88t//1L+tuVnY=
      "], {{
        GrayLevel[0.8], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1: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
L8zoHVELyff+UnNHXWSb56Legf7xf71spiQ=
          "]]]}, {}, {}, {}, {}}, VertexColors -> CompressedData["
1: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
Oaw2fE6NhK9Ldy8XOffP68+/qv8POoqElg==
       "]], {}}, AspectRatio -> 1, Frame -> True, FrameLabel -> {None, None}, 
    Method -> {}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {Automatic, Automatic}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[
           NCache[{{0}, {
              Rational[1, 200]}, {
              Rational[1, 100]}, {
              Rational[3, 200]}, {
              Rational[1, 50]}, {
              Rational[1, 40]}, {
              Rational[3, 100]}, {
              Rational[7, 200]}, {
              Rational[1, 25]}, {
              Rational[9, 200]}, {
              Rational[1, 20]}, {
              Rational[11, 200]}, {
              Rational[3, 50]}, {
              Rational[13, 200]}, {
              Rational[7, 100]}, {
              Rational[3, 40]}, {
              Rational[2, 25]}, {
              Rational[17, 200]}, {
              Rational[9, 100]}, {
              Rational[19, 200]}, {
              Rational[1, 10]}, {
              Rational[21, 200]}, {
              Rational[11, 100]}, {
              Rational[23, 200]}, {
              Rational[3, 25]}, {
              Rational[1, 8]}, {
              Rational[13, 100]}, {
              Rational[27, 200]}, {
              Rational[7, 50]}, {
              Rational[29, 200]}, {
              Rational[3, 20]}, {
              Rational[31, 200]}, {
              Rational[4, 25]}, {
              Rational[33, 200]}, {
              Rational[17, 100]}, {
              Rational[7, 40]}, {
              Rational[9, 50]}, {
              Rational[37, 200]}, {
              Rational[19, 100]}, {
              Rational[39, 200]}, {
              Rational[1, 5]}, {
              Rational[41, 200]}, {
              Rational[21, 100]}, {
              Rational[43, 200]}, {
              Rational[11, 50]}, {
              Rational[9, 40]}, {
              Rational[23, 100]}, {
              Rational[47, 200]}, {
              Rational[6, 25]}, {
              Rational[49, 200]}, {
              Rational[1, 4]}, {
              Rational[51, 200]}, {
              Rational[13, 50]}, {
              Rational[53, 200]}, {
              Rational[27, 100]}, {
              Rational[11, 40]}, {
              Rational[7, 25]}, {
              Rational[57, 200]}, {
              Rational[29, 100]}, {
              Rational[59, 200]}, {
              Rational[3, 10]}, {
              Rational[61, 200]}, {
              Rational[31, 100]}, {
              Rational[63, 200]}, {
              Rational[8, 25]}, {
              Rational[13, 40]}, {
              Rational[33, 100]}, {
              Rational[67, 200]}, {
              Rational[17, 50]}, {
              Rational[69, 200]}, {
              Rational[7, 20]}, {
              Rational[71, 200]}, {
              Rational[9, 25]}, {
              Rational[73, 200]}, {
              Rational[37, 100]}, {
              Rational[3, 8]}, {
              Rational[19, 50]}, {
              Rational[77, 200]}, {
              Rational[39, 100]}, {
              Rational[79, 200]}, {
              Rational[2, 5]}, {
              Rational[81, 200]}, {
              Rational[41, 100]}, {
              Rational[83, 200]}, {
              Rational[21, 50]}, {
              Rational[17, 40]}, {
              Rational[43, 100]}, {
              Rational[87, 200]}, {
              Rational[11, 25]}, {
              Rational[89, 200]}, {
              Rational[9, 20]}, {
              Rational[91, 200]}, {
              Rational[23, 50]}, {
              Rational[93, 200]}, {
              Rational[47, 100]}, {
              Rational[19, 40]}, {
              Rational[12, 25]}, {
              Rational[97, 200]}, {
              Rational[49, 100]}, {
              Rational[99, 200]}, {
              Rational[1, 2]}, {
              Rational[101, 200]}, {
              Rational[51, 100]}, {
              Rational[103, 200]}, {
              Rational[13, 25]}, {
              Rational[21, 40]}, {
              Rational[53, 100]}, {
              Rational[107, 200]}, {
              Rational[27, 50]}, {
              Rational[109, 200]}, {
              Rational[11, 20]}, {
              Rational[111, 200]}, {
              Rational[14, 25]}, {
              Rational[113, 200]}, {
              Rational[57, 100]}, {
              Rational[23, 40]}, {
              Rational[29, 50]}, {
              Rational[117, 200]}, {
              Rational[59, 100]}, {
              Rational[119, 200]}, {
              Rational[3, 5]}, {
              Rational[121, 200]}, {
              Rational[61, 100]}, {
              Rational[123, 200]}, {
              Rational[31, 50]}, {
              Rational[5, 8]}, {
              Rational[63, 100]}, {
              Rational[127, 200]}, {
              Rational[16, 25]}, {
              Rational[129, 200]}, {
              Rational[13, 20]}, {
              Rational[131, 200]}, {
              Rational[33, 50]}, {
              Rational[133, 200]}, {
              Rational[67, 100]}, {
              Rational[27, 40]}, {
              Rational[17, 25]}, {
              Rational[137, 200]}, {
              Rational[69, 100]}, {
              Rational[139, 200]}, {
              Rational[7, 10]}, {
              Rational[141, 200]}, {
              Rational[71, 100]}, {
              Rational[143, 200]}, {
              Rational[18, 25]}, {
              Rational[29, 40]}, {
              Rational[73, 100]}, {
              Rational[147, 200]}, {
              Rational[37, 50]}, {
              Rational[149, 200]}, {
              Rational[3, 4]}, {
              Rational[151, 200]}, {
              Rational[19, 25]}, {
              Rational[153, 200]}, {
              Rational[77, 100]}, {
              Rational[31, 40]}, {
              Rational[39, 50]}, {
              Rational[157, 200]}, {
              Rational[79, 100]}, {
              Rational[159, 200]}, {
              Rational[4, 5]}, {
              Rational[161, 200]}, {
              Rational[81, 100]}, {
              Rational[163, 200]}, {
              Rational[41, 50]}, {
              Rational[33, 40]}, {
              Rational[83, 100]}, {
              Rational[167, 200]}, {
              Rational[21, 25]}, {
              Rational[169, 200]}, {
              Rational[17, 20]}, {
              Rational[171, 200]}, {
              Rational[43, 50]}, {
              Rational[173, 200]}, {
              Rational[87, 100]}, {
              Rational[7, 8]}, {
              Rational[22, 25]}, {
              Rational[177, 200]}, {
              Rational[89, 100]}, {
              Rational[179, 200]}, {
              Rational[9, 10]}, {
              Rational[181, 200]}, {
              Rational[91, 100]}, {
              Rational[183, 200]}, {
              Rational[23, 25]}, {
              Rational[37, 40]}, {
              Rational[93, 100]}, {
              Rational[187, 200]}, {
              Rational[47, 50]}, {
              Rational[189, 200]}, {
              Rational[19, 20]}, {
              Rational[191, 200]}, {
              Rational[24, 25]}, {
              Rational[193, 200]}, {
              Rational[97, 100]}, {
              Rational[39, 40]}, {
              Rational[49, 50]}, {
              Rational[197, 200]}, {
              Rational[99, 100]}, {
              Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
             0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
             0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
             0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
             0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
             0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
             0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
             0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
             0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
             0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
             0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
             0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
             0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
             0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
             0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
             0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
             0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
             0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
             0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
             0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
             0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
             0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
             0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
             0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
             0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
             0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
             0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
             0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
             0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
             1}}], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              
              LineBox[{{7.499999999999999, -112.49999999999999`}, {
               7.499999999999999, 112.49999999999999`}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.499999999999999, -112.49999999999999`}, 
                   
                   Offset[{4., 0}, {
                    7.499999999999999, -112.49999999999999`}]}, {{
                   7.499999999999999, -69.39655172413792}, 
                   
                   Offset[{4., 0}, {
                    7.499999999999999, -69.39655172413792}]}, {{
                   7.499999999999999, -26.29310344827586}, 
                   
                   Offset[{4., 0}, {
                    7.499999999999999, -26.29310344827586}]}, {{
                   7.499999999999999, 16.810344827586206`}, 
                   
                   Offset[{4., 0}, {7.499999999999999, 
                    16.810344827586206`}]}, {{7.499999999999999, 
                   59.91379310344827}, 
                   
                   Offset[{4., 0}, {7.499999999999999, 
                    59.91379310344827}]}, {{7.499999999999999, 
                   103.01724137931033`}, 
                   
                   Offset[{4., 0}, {7.499999999999999, 
                    103.01724137931033`}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.499999999999999, -103.87931034482757`}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -103.87931034482757`}]}, {{
                   7.499999999999999, -95.25862068965516}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -95.25862068965516}]}, {{
                   7.499999999999999, -86.63793103448275}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -86.63793103448275}]}, {{
                   7.499999999999999, -78.01724137931033}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -78.01724137931033}]}, {{
                   7.499999999999999, -60.775862068965516`}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -60.775862068965516`}]}, {{
                   7.499999999999999, -52.155172413793096`}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -52.155172413793096`}]}, {{
                   7.499999999999999, -43.53448275862068}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -43.53448275862068}]}, {{
                   7.499999999999999, -34.91379310344827}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -34.91379310344827}]}, {{
                   7.499999999999999, -17.67241379310345}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -17.67241379310345}]}, {{
                   7.499999999999999, -9.051724137931034}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -9.051724137931034}]}, {{
                   7.499999999999999, -0.43103448275862066`}, 
                   
                   Offset[{2.5, 0.}, {
                    7.499999999999999, -0.43103448275862066`}]}, {{
                   7.499999999999999, 8.189655172413792}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    8.189655172413792}]}, {{7.499999999999999, 
                   25.43103448275862}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    25.43103448275862}]}, {{7.499999999999999, 
                   34.05172413793103}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    34.05172413793103}]}, {{7.499999999999999, 
                   42.672413793103445`}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    42.672413793103445`}]}, {{7.499999999999999, 
                   51.29310344827586}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    51.29310344827586}]}, {{7.499999999999999, 
                   68.53448275862068}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    68.53448275862068}]}, {{7.499999999999999, 
                   77.1551724137931}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    77.1551724137931}]}, {{7.499999999999999, 
                   85.77586206896551}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    85.77586206896551}]}, {{7.499999999999999, 
                   94.39655172413792}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    94.39655172413792}]}, {{7.499999999999999, 
                   111.63793103448275`}, 
                   
                   Offset[{2.5, 0.}, {7.499999999999999, 
                    111.63793103448275`}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox["0", 
                  
                  Offset[{7., 0.}, {
                   7.499999999999999, -112.49999999999999`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["5", 
                  
                  Offset[{7., 0.}, {
                   7.499999999999999, -69.39655172413792}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["10", 
                  
                  Offset[{7., 0.}, {
                   7.499999999999999, -26.29310344827586}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["15", 
                  
                  Offset[{7., 0.}, {7.499999999999999, 
                   16.810344827586206`}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox["20", 
                  
                  Offset[{7., 0.}, {7.499999999999999, 
                   59.91379310344827}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox["25", 
                  
                  Offset[{7., 0.}, {7.499999999999999, 
                   103.01724137931033`}], {-1, 0.}, Automatic, {1, 0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {}}}}, Antialiasing -> False], 
           "GraphicsAxes", StripOnInput -> False]}, AspectRatio -> Automatic, 
         Frame -> True, FrameStyle -> Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.`", ",", "26.093247581482842`"}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8919219766008654`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "datavaluesEzReconstructedPlane2", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891424122442993*^9, 3.891424126307997*^9}, {
   3.8914242178525667`*^9, 3.8914242222439575`*^9}, 3.89149813038586*^9, {
   3.8915031911961555`*^9, 3.891503191299882*^9}, {3.8915037914648323`*^9, 
   3.8915037938787794`*^9}, {3.8915039130529933`*^9, 3.8915039165013804`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListDensityPlot", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Abs[\\(\\(InverseFourier[\\(\\(\\(\\({\\(\\({\
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate}\\)\
\\), \\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\), \\(\\(\
\[LeftSkeleton] 16 \[RightSkeleton]\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\), \\(\\({Indeterminate, \\(\\(\[LeftSkeleton] 18 \
\[RightSkeleton]\\)\\), Indeterminate}\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)\\)\\)]\\)\\)]\\)\[NoBreak] must be a valid array. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListDensityPlot\\\", ButtonNote \
-> \\\"ListDensityPlot::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921976670128*^9}],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"InverseFourier", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
          "Indeterminate", ",", "Indeterminate"}], "}"}]}], "}"}], ",", 
      RowBox[{"FourierParameters", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\<\"ThermometerColors\"\>"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{3.891921976673476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"datavaluesEzPlane2", "=", 
   RowBox[{"Part", "[", 
    RowBox[{"datavaluesEzTensor", ",", "All", ",", "All", ",", "index2"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.89142385510572*^9, 3.891423942996296*^9}, 
   3.891502842037204*^9, {3.8915037993846264`*^9, 3.8915038019929256`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(66\\)\[NoBreak] of \
\[NoBreak]\\!\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0}\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219767395887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "datavaluesEzPlane2", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891424122442993*^9, 3.891424126307997*^9}, {
   3.8914242178525667`*^9, 3.8914242222439575`*^9}, 3.89149813038586*^9, {
   3.8915031911961555`*^9, 3.891503191299882*^9}, {3.8915037914648323`*^9, 
   3.8915038170008354`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListDensityPlot", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Abs[\\(\\(\\(\\({\\(\\({\\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\(\[LeftSkeleton] 12 \
\[RightSkeleton]\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0}\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 19 \[RightSkeleton]\\)\\)}\\)\\) \
\[LeftDoubleBracket] \\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\) \
\[RightDoubleBracket]\\)\\)]\\)\[NoBreak] must be a valid array. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListDensityPlot\\\", ButtonNote \
-> \\\"ListDensityPlot::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219768107305`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{453., {4., 14.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                   ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                   ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                   ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                   ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"\[LeftSkeleton]", "13", "\[RightSkeleton]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                   ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                   ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                   ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], 
               ",", 
               RowBox[{"\[LeftSkeleton]", "16", "\[RightSkeleton]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}],
               "}"}], "\[LeftDoubleBracket]", 
             RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
             "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], ",", 
           RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], "]"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{82., {1., 14.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 61, 30788973616916558717, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{91., {1., 14.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 61, 30788973616916558717, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{138., {4., 14.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 61, 30788973616916558717, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{116., {1., 13.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[61]]], "Output",
 CellChangeTimes->{3.8919219768616257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"Part", "[", 
     RowBox[{"datavaluesEzPlane2", ",", "30", ",", "All"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8915048823397064`*^9, 3.891504884199849*^9}, 
   3.8915049202533736`*^9, {3.891505028235486*^9, 3.8915050927381124`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(30\\)\[NoBreak] of \
\[NoBreak]\\!\\(\\(\\({\\(\\({\\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0}\\)\\), \\(\\(\[LeftSkeleton] 12 \[RightSkeleton]\\)\\), \\(\\({0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\)}\\)\\), \\(\\(\
\[LeftSkeleton] 18 \[RightSkeleton]\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(\[LeftSkeleton] \
1 \[RightSkeleton]\\)\\) \[RightDoubleBracket]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219769315853`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Abs[\\(\\(\\(\\(\\(\\({\\(\[LeftSkeleton] \
1 \[RightSkeleton]\\)}\\)\\) \[LeftDoubleBracket] \\(\\(All, All, 66\\)\\) \
\[RightDoubleBracket]\\)\\) \[LeftDoubleBracket] \\(\\(30, All\\)\\) \
\[RightDoubleBracket]\\)\\)]\\)\[NoBreak] is not a list of numbers or pairs \
of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219770313587`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{453., {4., 14.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"\[LeftSkeleton]", "13", "\[RightSkeleton]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], 
                ",", 
                RowBox[{"\[LeftSkeleton]", "15", "\[RightSkeleton]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                 "}"}]}], "}"}], "\[LeftDoubleBracket]", 
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
              "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
             RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
             "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], "]"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{82., {1., 14.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 62, 30788973616916558717, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{91., {1., 14.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 62, 30788973616916558717, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{138., {4., 14.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 62, 30788973616916558717, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{116., {1., 13.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[62]]], "Output",
 CellChangeTimes->{3.8919219770503035`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"datavaluesEzPlane2", "-", "datavaluesEzReconstructedPlane2"}], 
    "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891503870286935*^9, 3.8915038818076334`*^9}, {
  3.8915039304372997`*^9, 3.891503931408644*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListDensityPlot", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Abs[\\(\\(\\(\\(-\\(\\(InverseFourier[\\(\\(\\(\\({\\(\\(\
{Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate}\\)\
\\), \\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\), \\(\\(\
\[LeftSkeleton] 17 \[RightSkeleton]\\)\\), \\(\\({Indeterminate, \\(\\(\
\[LeftSkeleton] 18 \[RightSkeleton]\\)\\), Indeterminate}\\)\\)}\\)\\), \
\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)]\\)\\)\\)\\) + \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)]\\)\[NoBreak] must be a valid \
array. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListDensityPlot\\\", ButtonNote -> \
\\\"ListDensityPlot::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219771281013`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{453., {4., 14.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"InverseFourier", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], 
                ",", 
                RowBox[{"FourierParameters", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
                     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
                    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], 
                ",", 
                RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                 "}"}]}], "}"}], "\[LeftDoubleBracket]", 
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
              "\[RightDoubleBracket]"}]}], "]"}], ",", 
           RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], ",", 
           RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], "]"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{82., {1., 14.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 63, 30788973616916558717, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{91., {1., 14.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 63, 30788973616916558717, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{138., {4., 14.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 63, 30788973616916558717, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{116., {1., 13.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[63]]], "Output",
 CellChangeTimes->{3.891921977175968*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"indicesOutsideModelledArea", "=", 
   RowBox[{"Position", "[", 
    RowBox[{"datavaluesEzPlane2", ",", "0"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.891504022072093*^9, 3.8915040316179695`*^9}, {
   3.891504070921195*^9, 3.89150407310584*^9}, {3.8915041123204193`*^9, 
   3.8915041500386987`*^9}, 3.891504182741645*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "indicesOutsideModelledArea", "]"}]], "Input",
 CellChangeTimes->{{3.8915041516522307`*^9, 3.8915041613501396`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3719", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.8919219771910353`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "indicesOutsideModelledArea", "]"}]], "Input",
 CellChangeTimes->{{3.8915043831933937`*^9, 3.89150438627227*^9}}],

Cell[BoxData["3719"], "Output",
 CellChangeTimes->{3.8919219772051325`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"datavaluesEzReconstructedPlane2Reduced", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"datavaluesEzPlane2", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}], "\[Equal]", "0"}], ",", "0", ",", 
       RowBox[{
        RowBox[{"datavaluesEzReconstructedPlane2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "dimension"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "dimension"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8915042192927437`*^9, 3.8915042624916024`*^9}, {
   3.891504330657883*^9, 3.8915043721773787`*^9}, 3.891504402376915*^9, {
   3.891504471782468*^9, 3.8915044738900385`*^9}, {3.891504621523689*^9, 
   3.8915046973519125`*^9}, {3.8915047316349506`*^9, 
   3.8915047374335747`*^9}, {3.8915053677894554`*^9, 3.891505382756667*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(All \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219772439756`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(All \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219772709036`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(All \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921977297866*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921977311847*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(5\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\({\\(\\({\\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\
\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\
\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0}\\)\\), \\(\\(\[LeftSkeleton] 12 \[RightSkeleton]\\)\\), \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 18 \
\[RightSkeleton]\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(\[LeftSkeleton] \
1 \[RightSkeleton]\\)\\) \[RightDoubleBracket]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921977361695*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(5\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\({\\(\\({\\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\
\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\
\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0}\\)\\), \\(\\(\[LeftSkeleton] 12 \[RightSkeleton]\\)\\), \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\), \\(\\({0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 18 \
\[RightSkeleton]\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(\[LeftSkeleton] \
1 \[RightSkeleton]\\)\\) \[RightDoubleBracket]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921977411528*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(5\\)\[NoBreak] of \
\[NoBreak]\\!\\(InverseFourier[\\(\\(\\(\\({\\(\\({Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate, \
Indeterminate, Indeterminate, Indeterminate, Indeterminate}\\)\\), \\(\\(\
\[LeftSkeleton] 18 \[RightSkeleton]\\)\\), \\(\\({Indeterminate, \
Indeterminate, \\(\\(\[LeftSkeleton] 17 \[RightSkeleton]\\)\\), \
Indeterminate}\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)\\)\\)]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219774395027`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921977455776*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "datavaluesEzReconstructedPlane2Reduced", "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891424122442993*^9, 3.891424126307997*^9}, {
   3.8914242178525667`*^9, 3.8914242222439575`*^9}, 3.89149813038586*^9, {
   3.8915031911961555`*^9, 3.891503191299882*^9}, {3.8915037914648323`*^9, 
   3.8915037938787794`*^9}, {3.8915039130529933`*^9, 
   3.8915039165013804`*^9}, {3.891504749689664*^9, 3.8915047508615026`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(66.` \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.89192197749282*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(66.` \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921977519726*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(66.` \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219775476503`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219775616136`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(66\\)\[NoBreak] of \
\[NoBreak]\\!\\({0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921977589529*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(66\\)\[NoBreak] of \
\[NoBreak]\\!\\({0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219776164737`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(5\\)\[NoBreak] of \[NoBreak]\\!\\(\\(\
\\({\\(\\({\\(\\({0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`}\\)\\), \\(\\({0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`}\\)\\), \\(\\(\[LeftSkeleton] 16 \[RightSkeleton]\\)\\), \\(\\({0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`}\\)\\), \\(\\({0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`}\\)\\)}\\)\\), \\(\\(\
\[LeftSkeleton] 18 \[RightSkeleton]\\)\\), \\(\\({\\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] 19 \
\[RightSkeleton]\\)\\)}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\) \[RightDoubleBracket]\\)\[NoBreak] \
does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219776673346`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921977682288*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{2., 5.}, {2., 6.}, {2., 7.}, {2., 8.}, {2., 9.}, {
      2., 10.}, {2., 11.}, {2., 12.}, {2., 13.}, {2., 14.}, {2., 15.}, {2., 
      16.}, {2., 17.}, {2., 18.}, {2., 19.}, {2., 20.}}, 
      StyleBox[{}, VertexColors -> CompressedData["
1:eJwBkQFu/iFib1JlAgAAABAAAAADAAAAxomvdhTnxD/u0RvuI7e+P9uizAaZ
ZOk/sVFE9NlvzT9amHRK9r7QPzMquj8oues/RqRc0DHW1D8ImWTkLOzaPyP7
skbPP+0/SMvc19ws3D9nM+JdiZviP7TIdr6fGu4/78WpaD754T+YCdAAKBDn
P9uK/WX3ZO4/+4cHpxh65T/4i9mSVRHqP2IIE1l+8+0/Hgqw2dt36D8Ec5k/
S/zrP1x+O+TB8ew/PujZrPrc6j8CWqlWFdDsP/sBRs75YOs/oHjOFhBa7D/R
p5+BokPsP6ElWOULI+k/aIwg3+/h7D+ywuORLmzqPzKwRFZtbeY/lhdz6t2y
7D8Q7ybl26jnPxxfe2ZJgOM/xMVkhMrS6z/6mEbKTQvkPwKBl+JzcOA/4OzW
MhkO6j/G9hBDYQbfP+So7XCFwdo/7oZawPGi5z84RLilsZnVPxp1mvIO3dQ/
WIdI8gGm5D8xrl7JfqvJP5DDzOPV3s4/fEeNCTEX4T+Kx+r7Fde1P6D9SBEZ
VsU/DUTPvg==
        "]]], {}}, AspectRatio -> 1, Frame -> True, 
    FrameLabel -> {None, None}, Method -> {}, PlotRange -> {All, All}, 
    PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[CompressedData["
1:eJxF0jloVFEUxvGJZerYRuxiba2nTNqkTiWopRGsYmvaJIVNLARJQAQZDCpG
UUkcs2+zv9nn7ftiM9bOu/MHLwyz3XPO9zsztx88WXp4o1AonI4fU4X/5/lM
cd5YfSaT5xeyN7sWLe6t8/6lvNpSh89fS7yYv3rD9zsyrW2v3Jt+y713cmd5
49do7j33i7Iz/lbb/kDdrtxV5yP1n6Q0mhtXfKbPF1maFNLvqxir+cVv9P0u
T/N2Kz/o/1Mmin3m7MuCKjhg3oHkVeNS5pZEjdFKzP8tt/I2s4fkOJTHj/Jz
RJ5jyW/NFI/JdSJ/82ujE/Kdyn118YycZ6LarZ2T90IuL9Qh96XcVA2vyH8l
6tryNY4yc8p4yswr46owt4Kvwvwqzio5qnhr5KnhrpGrjr9Ovjp7aJCzwT4a
5G2ylya5m+xHI7/GnjQcLRwtHC0cLRxtHG0cbRwd2VSODo4Oji6OLo4ujh6O
Ho4ejj6OPo4+jgGOAY4BjiGOIY4hDp05Oh6deTounbk6Pp35Bk6DHAZegzwG
boNcJn6TfCa/p0lOk32Y5LXYi0Vui/1Y5LfYk4XDxmHjsHHYOGwcNg4bh4PD
weHgcHA4OBwcLg4Xh4vDxeHicHF4ODwcHg4Ph4fDw+Hj8HH4OHwcPg4fh48j
wBHgCHAEOAIcAY4QR4gj5H8Z4ghxhDgiHBGOCEeEI8IR4YhxxDhiHDGOGEeM
I8aR4EhwJDgSHAmOBEeKI8WR4khxpDhSHBmODEeGI8OR4chw/JF/3eEbIw==

           "], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -112.5}, 
                   Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -75.}, 
                   Offset[{4., 0}, {7.5, -75.}]}, {{7.5, -37.5}, 
                   Offset[{4., 0}, {7.5, -37.5}]}, {{7.5, 0.}, 
                   Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 37.5}, 
                   Offset[{4., 0}, {7.5, 37.5}]}, {{7.5, 75.}, 
                   Offset[{4., 0}, {7.5, 75.}]}, {{7.5, 112.5}, 
                   Offset[{4., 0}, {7.5, 112.5}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -105.}, 
                   Offset[{2.5, 0.}, {7.5, -105.}]}, {{7.5, -97.5}, 
                   Offset[{2.5, 0.}, {7.5, -97.5}]}, {{7.5, -90.}, 
                   Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -82.5}, 
                   Offset[{2.5, 0.}, {7.5, -82.5}]}, {{7.5, -67.5}, 
                   Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -60.}, 
                   Offset[{2.5, 0.}, {7.5, -60.}]}, {{7.5, -52.5}, 
                   Offset[{2.5, 0.}, {7.5, -52.5}]}, {{7.5, -45.}, 
                   Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -30.}, 
                   Offset[{2.5, 0.}, {7.5, -30.}]}, {{7.5, -22.5}, 
                   Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -15.}, 
                   Offset[{2.5, 0.}, {7.5, -15.}]}, {{7.5, -7.5}, 
                   Offset[{2.5, 0.}, {7.5, -7.5}]}, {{7.5, 7.5}, 
                   Offset[{2.5, 0.}, {7.5, 7.5}]}, {{7.5, 15.}, 
                   Offset[{2.5, 0.}, {7.5, 15.}]}, {{7.5, 22.5}, 
                   Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 30.}, 
                   Offset[{2.5, 0.}, {7.5, 30.}]}, {{7.5, 45.}, 
                   Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 52.5}, 
                   Offset[{2.5, 0.}, {7.5, 52.5}]}, {{7.5, 60.}, 
                   Offset[{2.5, 0.}, {7.5, 60.}]}, {{7.5, 67.5}, 
                   Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 82.5}, 
                   Offset[{2.5, 0.}, {7.5, 82.5}]}, {{7.5, 90.}, 
                   Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 97.5}, 
                   Offset[{2.5, 0.}, {7.5, 97.5}]}, {{7.5, 105.}, 
                   Offset[{2.5, 0.}, {7.5, 105.}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"7.5\"", 7.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -75.}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"10.0\"", 10., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -37.5}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"12.5\"", 12.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"15.0\"", 15., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 37.5}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"17.5\"", 17.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 75.}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"20.0\"", 20., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                  0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {}}}}, Antialiasing -> False], 
           "GraphicsAxes", StripOnInput -> False]}, AspectRatio -> Automatic, 
         Frame -> True, FrameStyle -> Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"5.`", ",", "20.`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8919219780434303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
    "datavaluesEzPlane2", "-", "datavaluesEzReconstructedPlane2Reduced"}], 
    "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891503870286935*^9, 3.8915038818076334`*^9}, {
  3.8915039304372997`*^9, 3.891503931408644*^9}, {3.8915047633449945`*^9, 
  3.8915047642608624`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(66\\)\[NoBreak] of \
\[NoBreak]\\!\\({0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921978117633*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(66\\)\[NoBreak] of \
\[NoBreak]\\!\\({0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219781445427`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(66\\)\[NoBreak] of \
\[NoBreak]\\!\\({0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219781724863`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.891921978187434*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(66.` \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219782313375`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(66.` \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219782592583`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(66.` \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219782871566`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8919219783010855`*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}}, AspectRatio -> 1, Frame -> True, 
    FrameLabel -> {None, None}, Method -> {}, PlotRange -> {All, All}, 
    PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}],
   TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[CompressedData["
1:eJxF0jloVFEUxvGJZerYRuxiba2nTNqkTiWopRGsYmvaJIVNLARJQAQZDCpG
UUkcs2+zv9nn7ftiM9bOu/MHLwyz3XPO9zsztx88WXp4o1AonI4fU4X/5/lM
cd5YfSaT5xeyN7sWLe6t8/6lvNpSh89fS7yYv3rD9zsyrW2v3Jt+y713cmd5
49do7j33i7Iz/lbb/kDdrtxV5yP1n6Q0mhtXfKbPF1maFNLvqxir+cVv9P0u
T/N2Kz/o/1Mmin3m7MuCKjhg3oHkVeNS5pZEjdFKzP8tt/I2s4fkOJTHj/Jz
RJ5jyW/NFI/JdSJ/82ujE/Kdyn118YycZ6LarZ2T90IuL9Qh96XcVA2vyH8l
6tryNY4yc8p4yswr46owt4Kvwvwqzio5qnhr5KnhrpGrjr9Ovjp7aJCzwT4a
5G2ylya5m+xHI7/GnjQcLRwtHC0cLRxtHG0cbRwd2VSODo4Oji6OLo4ujh6O
Ho4ejj6OPo4+jgGOAY4BjiGOIY4hDp05Oh6deTounbk6Pp35Bk6DHAZegzwG
boNcJn6TfCa/p0lOk32Y5LXYi0Vui/1Y5LfYk4XDxmHjsHHYOGwcNg4bh4PD
weHgcHA4OBwcLg4Xh4vDxeHicHF4ODwcHg4Ph4fDw+Hj8HH4OHwcPg4fh48j
wBHgCHAEOAIcAY4QR4gj5H8Z4ghxhDgiHBGOCEeEI8IR4YhxxDhiHDGOGEeM
I8aR4EhwJDgSHAmOBEeKI8WR4khxpDhSHBmODEeGI8OR4chw/JF/3eEbIw==

           "], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, 
           ColorFunction -> (Blend["ThermometerColors", #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -112.5}, 
                   Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                   Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                   Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                   Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                   Offset[{4., 0}, {7.5, 112.5}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -101.25}, 
                   Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                   Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                   Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                   Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                   Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                   Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                   Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                   Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                   Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                   Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                   Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                   Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                   Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                   Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                   Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                   Offset[{2.5, 0.}, {7.5, 101.25}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  TagBox[
                   InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                   NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                  Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                  0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> 
           False]}, AspectRatio -> Automatic, Frame -> True, FrameStyle -> 
         Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
               RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8919219790750155`*^9}]
}, Open  ]]
},
WindowSize->{1904, 943},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.5000001192092896`,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 1036, 20, 162, "Input"],
Cell[1618, 44, 325, 6, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1980, 55, 351, 7, 104, "Input"],
Cell[2334, 64, 323, 6, 73, "Output"]
}, Open  ]],
Cell[2672, 73, 1092, 22, 75, "Input"],
Cell[CellGroupData[{
Cell[3789, 99, 749, 18, 75, "Input"],
Cell[4541, 119, 183, 2, 44, "Output"]
}, Open  ]],
Cell[4739, 124, 541, 13, 75, "Input"],
Cell[CellGroupData[{
Cell[5305, 141, 436, 9, 75, "Input"],
Cell[5744, 152, 259, 3, 73, "Output"]
}, Open  ]],
Cell[6018, 158, 691, 13, 75, "Input"],
Cell[6712, 173, 272, 4, 45, "Input"],
Cell[6987, 179, 1590, 35, 104, "Input"],
Cell[CellGroupData[{
Cell[8602, 218, 1222, 21, 75, "Input"],
Cell[9827, 241, 71, 1, 44, "Output"]
}, Open  ]],
Cell[9913, 245, 752, 17, 75, "Input"],
Cell[10668, 264, 2021, 55, 104, "Input"],
Cell[CellGroupData[{
Cell[12714, 323, 618, 15, 104, "Input"],
Cell[13335, 340, 130, 3, 44, "Output"],
Cell[13468, 345, 130, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13635, 353, 1288, 23, 104, "Input"],
Cell[14926, 378, 70, 1, 44, "Output"],
Cell[14999, 381, 90, 1, 44, "Output"]
}, Open  ]],
Cell[15104, 385, 733, 16, 75, "Input"],
Cell[15840, 403, 236, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[16101, 413, 454, 8, 45, "Input"],
Cell[16558, 423, 34066, 698, 567, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50661, 1126, 645, 14, 75, "Input"],
Cell[51309, 1142, 31315, 624, 567, "Output"]
}, Open  ]],
Cell[82639, 1769, 408, 10, 45, "Input"],
Cell[CellGroupData[{
Cell[83072, 1783, 364, 8, 45, "Input"],
Cell[83439, 1793, 35667, 702, 567, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119143, 2500, 426, 8, 45, "Input"],
Cell[119572, 2510, 183598, 3103, 462, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303207, 5618, 465, 10, 45, "Input"],
Cell[303675, 5630, 183440, 3096, 461, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487152, 8731, 438, 11, 45, "Input"],
Cell[487593, 8744, 74, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487704, 8750, 414, 10, 45, "Input"],
Cell[488121, 8762, 520, 11, 35, "Message"],
Cell[488644, 8775, 518, 11, 35, "Message"],
Cell[489165, 8788, 520, 11, 35, "Message"],
Cell[489688, 8801, 528, 11, 35, "Message"],
Cell[490219, 8814, 310, 10, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490566, 8829, 403, 11, 45, "Input"],
Cell[490972, 8842, 89, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[491098, 8848, 454, 12, 45, "Input"],
Cell[491555, 8862, 533, 11, 35, "Message"],
Cell[492091, 8875, 520, 11, 35, "Message"],
Cell[492614, 8888, 301, 8, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492952, 8901, 212, 4, 45, "Input"],
Cell[493167, 8907, 71, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493275, 8913, 162, 3, 45, "Input"],
Cell[493440, 8918, 72, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493549, 8924, 281, 7, 45, "Input"],
Cell[493833, 8933, 89, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493959, 8939, 279, 7, 45, "Input"],
Cell[494241, 8948, 447, 10, 55, "Message"],
Cell[494691, 8960, 86, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494814, 8966, 178, 3, 45, "Input"],
Cell[494995, 8971, 80, 1, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[495112, 8977, 181, 3, 45, "Input"],
Cell[495296, 8982, 78, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[495411, 8988, 180, 4, 45, "Input"],
Cell[495594, 8994, 90, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[495721, 9000, 149, 3, 45, "Input"],
Cell[495873, 9005, 90, 1, 44, "Output"]
}, Open  ]],
Cell[495978, 9009, 961, 22, 45, "Input"],
Cell[496942, 9033, 569, 16, 45, "Input"],
Cell[CellGroupData[{
Cell[497536, 9053, 145, 2, 45, "Input"],
Cell[497684, 9057, 117, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497838, 9065, 361, 8, 45, "Input"],
Cell[498202, 9075, 23343, 497, 567, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521582, 9577, 728, 19, 45, "Input"],
Cell[522313, 9598, 473, 10, 35, "Message"],
Cell[522789, 9610, 477, 10, 35, "Message"],
Cell[523269, 9622, 477, 10, 35, "Message"],
Cell[523749, 9634, 534, 11, 35, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524320, 9650, 411, 8, 45, "Input"],
Cell[524734, 9660, 7096, 148, 552, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531867, 9813, 96, 1, 45, "Input"],
Cell[531966, 9816, 88, 1, 44, "Output"]
}, Open  ]],
Cell[532069, 9820, 361, 9, 45, "Input"],
Cell[CellGroupData[{
Cell[532455, 9833, 289, 6, 45, "Input"],
Cell[532747, 9841, 7094, 148, 552, "Output"]
}, Open  ]],
Cell[539856, 9992, 257, 6, 45, "Input"],
Cell[CellGroupData[{
Cell[540138, 10002, 467, 9, 45, "Input"],
Cell[540608, 10013, 7063, 146, 552, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547708, 10164, 467, 9, 45, "Input"],
Cell[548178, 10175, 7065, 146, 552, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555280, 10326, 358, 7, 45, "Input"],
Cell[555641, 10335, 7210, 148, 457, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562888, 10488, 676, 14, 45, "Input"],
Cell[563567, 10504, 7210, 148, 457, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570814, 10657, 251, 4, 45, "Input"],
Cell[571068, 10663, 73, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571178, 10669, 436, 8, 45, "Input"],
Cell[571617, 10679, 518, 11, 35, "Message"],
Cell[572138, 10692, 185, 5, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572360, 10702, 457, 11, 45, "Input"],
Cell[572820, 10715, 489, 10, 37, "Message"],
Cell[573312, 10727, 489, 10, 37, "Message"],
Cell[573804, 10739, 486, 10, 37, "Message"],
Cell[574293, 10751, 532, 11, 35, "Message"]
}, Open  ]],
Cell[574840, 10765, 259, 5, 45, "Input"],
Cell[CellGroupData[{
Cell[575124, 10774, 534, 12, 45, "Input"],
Cell[575661, 10788, 1069, 18, 123, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[576767, 10811, 253, 6, 45, "Input"],
Cell[577023, 10819, 564, 10, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577624, 10834, 454, 8, 45, "Input"],
Cell[578081, 10844, 34068, 698, 567, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612186, 11547, 623, 10, 45, "Input"],
Cell[612812, 11559, 1144, 19, 181, "Message"],
Cell[613959, 11580, 11874, 195, 1473, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[625870, 11780, 333, 7, 45, "Input"],
Cell[626206, 11789, 528, 11, 35, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[626771, 11805, 560, 10, 45, "Input"],
Cell[627334, 11817, 1298, 20, 123, "Message"],
Cell[628635, 11839, 7573, 184, 259, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636245, 12028, 388, 8, 45, "Input"],
Cell[636636, 12038, 1350, 21, 123, "Message"],
Cell[637989, 12061, 667, 13, 35, "Message"],
Cell[638659, 12076, 7842, 189, 287, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646538, 12270, 492, 10, 75, "Input"],
Cell[647033, 12282, 1166, 20, 239, "Message"],
Cell[648202, 12304, 7593, 186, 259, "Output"]
}, Open  ]],
Cell[655810, 12493, 363, 7, 45, "Input"],
Cell[CellGroupData[{
Cell[656198, 12504, 158, 2, 45, "Input"],
Cell[656359, 12508, 120, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656516, 12516, 151, 2, 45, "Input"],
Cell[656670, 12520, 75, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656782, 12526, 1074, 25, 75, "Input"],
Cell[657859, 12553, 511, 11, 35, "Message"],
Cell[658373, 12566, 511, 11, 35, "Message"],
Cell[658887, 12579, 509, 11, 35, "Message"],
Cell[659399, 12592, 528, 11, 35, "Message"],
Cell[659930, 12605, 1347, 21, 123, "Message"],
Cell[661280, 12628, 1347, 21, 123, "Message"],
Cell[662630, 12651, 1040, 18, 94, "Message"],
Cell[663673, 12671, 528, 11, 35, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[664238, 12687, 682, 11, 75, "Input"],
Cell[664923, 12700, 509, 11, 35, "Message"],
Cell[665435, 12713, 510, 11, 35, "Message"],
Cell[665948, 12726, 512, 11, 35, "Message"],
Cell[666463, 12739, 530, 11, 35, "Message"],
Cell[666996, 12752, 566, 11, 35, "Message"],
Cell[667565, 12765, 568, 11, 35, "Message"],
Cell[668136, 12778, 1276, 21, 94, "Message"],
Cell[669415, 12801, 528, 11, 35, "Message"],
Cell[669946, 12814, 9315, 185, 552, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[679298, 13004, 557, 12, 75, "Input"],
Cell[679858, 13018, 566, 11, 35, "Message"],
Cell[680427, 13031, 568, 11, 35, "Message"],
Cell[680998, 13044, 568, 11, 35, "Message"],
Cell[681569, 13057, 528, 11, 35, "Message"],
Cell[682100, 13070, 512, 11, 35, "Message"],
Cell[682615, 13083, 512, 11, 35, "Message"],
Cell[683130, 13096, 512, 11, 35, "Message"],
Cell[683645, 13109, 530, 11, 35, "Message"],
Cell[684178, 13122, 7065, 146, 584, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
