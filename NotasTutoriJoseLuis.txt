xcoordinates= elimina los repetidos, pudiendo tener el mismo vlalor una sola vez, en lugar de que aparezca 
	      cada coordenada muchas veces.

xcoordinatesTensor=es cada nodo que tiene una terna de coordenadas dentro del espacio simulado.

	Part[1;;3,1;;3,1;;3]
	Sacar las partes. En concreto, los elementos del 1 al 3 en la dimensión Z Y Z
	Cada elemento del tensor tiene 3 coordenadas. Representado con 100x100x100 puntos.

	Tenemos 6 cubos de rubik, 3 por coordenadas y 3 por haber esas dimensiones del campo.

	datavaluesEzTensor[[20]][[30]][[40]] --> Valor del campo electrico del punto 20,30,40
	Paraa ver la coordenada del tensor, es zcoordinatesTensor[[20]][[30]][[40]].

Para el índice 58, representa las coordenadas X,Y y Z. Pero la Z al ser CTE podemos no usarla.

La 2a image está ploteada a tramos. Lo ha hecho solo para que vea que hay mas formas de transformarlo.

Luego usa la transformada de fourier. La cual termina representando en 3d, que son 4 picos. Esto son los componentes modales.
Luego lo representa mejor (parece un mar con lluvia). Es decir, no tenemos aliasing, tenemos una buena representación en fourier de la señal, que 
es el diagrama de radiación en este caso.

	COSAS A VER:
		
		1 Estaria bien que pensase la relación que puede tener la apertura que usamos para poder reproducir correctamente campos posteriores.
		Es decir, lo que queremos es pillar el corte con esos campos apra ser capaces de reproducir el siguiente.
		Hay que ver como de grande debe ser esa esfera

			Datos de la apertura esta en {-1,1}

		Pagina 40 del escrito antiguo. Hacen referencia a como obtener la zona a
		con el angulo TetaC.

		Hay formas a base de pruebas, que consiste en ampliar la apertura hasta que queda como
		el dibujo de los 4 picos.
		Esto es porque como la lambda es 0.20cm, y yo estoy en menos distancia, pasamos nyqust con mcuha olgura.
		Por lo que podríamos haber reducido el número de datos.--> Debo probar a quitar puntos de la muestra, de forma que el mar se haga mas pequeño y las montañas lleguen más al centro.
		Es para ver la influencia de ver que pasa si tomamos menos datos.

		Está mal si las faldas de los picos se solapan entre ellos.

		CeroPadding es lo que hacemos cambiando los NaN por ceros.


	Matriz de coordenadas K
		Cada punto está definido por una posición X e Y (de la foto circular azúl)
		Pero nosotros necesitamos transformar eso en las K, que tienne otros valores.
		Hay una imagen que son dos gradientes azúl y rojo, que son los valroes de K. Vemos que K empieza a subir de 0 a casi 40 y algo; y luego da la vueltra
		como vi en un dibujo que JL me hizo en una reunión.
		

		w2 = w^2 --> que en la ecuación23 del manual de JL se usa sin el cuadrado.
		JL lo conjuga ya que sino saca una parte imaginaria positiva. Pero como al hacer la raiz, podemos tomar
		la solución positiva o negativa, tenemos un problema. 

		Él elige la solución -i, que no es la que saca el programa. Esto interesda porque en la ecuacion23
		al multiplicar saldria una exponencial positiva, que no tiene sentido físico al ser una ganancia, cosa que no ocurre.

		hayamos la K de cada punto en el dominio transformado. El cual está en Kxcoordinates y Kycoordinates, con los cuales sacas W2  y W normal.
.
	LLegados a este punto, podemos calcular la transformación a otro plano. Él lo ha hecho en los 31mm.
	En el programa. phaseShift = ejw(z2-z1)

	Luego hace la transformada inversa y hace el plot del plano reconstruido. El cual sale completo, reconstruyendo todo el plano.
	JL lo ha comparado con lo que le sale a él en la simulación, lo que le da algo diferente.
	Hay puntitos en blanco, que son culpa de la simulación.

Saca una especia de perfil

	Debo intentar quitar el anillo de la foto final.